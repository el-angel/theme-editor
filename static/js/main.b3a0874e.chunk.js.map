{"version":3,"sources":["../../semantic-tokens-utilities/lib/index.es.js","components/ui/PanelSettings/styles.module.scss","containers/Sidebar/components/Toolbar/styles.module.scss","containers/Code/components/Info/styles.module.scss","App.module.scss","containers/Code/components/SettingsMenu/styles.module.scss","components/ui/SidebarItem/styles.module.scss","components/ui/QuickInput/styles.module.scss","containers/Code/components/Editor/styles.module.scss","containers/Settings/components/ColorPicker/styles.module.scss","containers/Settings/components/ScopesList/styles.module.scss","components/ui/Panel/styles.module.scss","components/ui/Confirm/styles.module.scss","components/ui/Modal/styles.module.scss","containers/Code/components/SettingsMenu/Items/styles.module.scss","containers/Settings/components/NameInput/styles.module.scss","containers/Settings/components/Swatches/styles.module.scss","containers/Sidebar/components/FilterAdd/styles.module.scss","containers/Code/components/CodeInput/styles.module.scss","containers/Code/components/SubLine/styles.module.scss","containers/Settings/components/FontStyle/styles.module.scss","containers/Sidebar/styles.module.scss","containers/StatusBar/styles.module.scss","../../semantic-tokens-utilities/node_modules/typescript/lib sync","components/ui/Button/styles.module.scss","containers/Code/components/Line/styles.module.scss","containers/Code/components/CodeView/styles.module.scss","components/ui/PanelItem/styles.module.scss","containers/StatusBar/components/Item/styles.module.scss","../../textmate-utilities/lib/index.es.js","constants/index.ts","services/storage.ts","services/textmate.ts","helpers/state.ts","state/language.ts","state/code.ts","state/theme.ts","state/semanticTokens.ts","helpers/generalScopesDefault.ts","helpers/tokenStateFactory.ts","state/generalScopes.ts","state/rules.ts","services/api.ts","containers/Code/components/CodeInput/index.tsx","state/mode.ts","state/ui.ts","components/ui/Button/index.tsx","components/ui/Confirm/index.tsx","hooks/useOutsideClick.ts","components/ui/Modal/index.tsx","services/dialog.tsx","model/rule.ts","model/semanticToken.ts","hooks/useAddEntity.ts","hooks/useViewEntity.ts","selectors/activateRule.ts","containers/Code/components/Info/index.tsx","containers/Code/components/Line/index.tsx","helpers/getContrastColor.ts","containers/Code/components/SubLine/index.tsx","containers/Code/components/CodeView/index.tsx","containers/Code/components/Editor/index.tsx","containers/Code/index.tsx","containers/Code/components/SettingsMenu/Item.tsx","containers/Settings/components/FontStyle/index.tsx","types/theme.guard.ts","recoil/snapshot/reset.ts","containers/Code/components/SettingsMenu/Items/Open.tsx","containers/Code/components/SettingsMenu/Items/CustomizeCode.tsx","containers/Code/components/SettingsMenu/Items/Export.tsx","containers/Code/components/SettingsMenu/Items/New.tsx","containers/Code/components/SettingsMenu/Items/SemanticHighlighting.tsx","containers/Code/components/SettingsMenu/index.tsx","containers/Settings/components/ColorPicker/index.tsx","containers/Settings/components/NameInput/index.tsx","containers/Settings/components/ScopesList/index.tsx","helpers/swatches.ts","containers/Settings/components/Swatches/index.tsx","components/ui/PanelItem/index.tsx","components/ui/Panel/index.tsx","components/ui/PanelSettings/index.tsx","containers/Settings/GeneralSettings/index.tsx","helpers/typeGuards.ts","hooks/useDeleteEntity.ts","helpers/getExistingScopes.ts","containers/Settings/RuleSettings/index.tsx","containers/Settings/SemanticTokenSettings/index.tsx","containers/Settings/index.tsx","state/sidebar.ts","containers/Sidebar/components/FilterAdd/index.tsx","components/ui/SidebarItem/index.tsx","containers/Sidebar/components/GeneralScope/index.tsx","containers/Sidebar/components/GeneralScopes/index.tsx","containers/Sidebar/components/Rule/index.tsx","containers/Sidebar/components/Rules/index.tsx","containers/Sidebar/components/SemanticToken/index.tsx","containers/Sidebar/components/SemanticTokens/index.tsx","containers/Sidebar/components/Toolbar/index.tsx","selectors/generalScopeCSS.ts","containers/Sidebar/index.tsx","state/modal.ts","containers/StatusBar/components/Item/index.tsx","components/ui/QuickInput/index.tsx","components/LanguageSwitcher/index.tsx","components/ThemeStyleSwitcher/index.tsx","containers/StatusBar/index.tsx","App.tsx","index.tsx"],"names":["createToken","queryString","match","Error","language","i","length","j","modifiers","char","segment","substring","push","type","reverse","__values","o","s","Symbol","iterator","m","call","next","value","done","TypeError","__read","n","r","e","ar","error","__spread","arguments","concat","createTokenString","_a","sort","join","undefined","CodeDocument","opts","this","_raw","code","_lines","split","prototype","getTextAtPosition","position","line","start","substr","getLines","getRaw","fn","basedir","module","path","exports","require","base","commonjsRequire","createCommonjsModule","isWindows","process","platform","normalizeArray","parts","allowAboveRoot","res","p","pop","trimArray","arr","lastIndex","end","slice","splitDeviceRe","splitTailRe","win32","win32SplitPath","filename","result","exec","device","tail","result2","win32StatPath","isUnc","isAbsolute","normalizeUNCRoot","replace","resolve","resolvedDevice","resolvedTail","resolvedAbsolute","toLowerCase","cwd","util","isString","normalize","trailingSlash","test","paths","arg","joined","relative","from","to","lowerFrom","lowerTo","toParts","lowerFromParts","lowerToParts","Math","min","samePartsLength","outputParts","_makeLong","resolvedPath","dirname","root","dir","basename","ext","f","extname","format","pathObject","isObject","sep","parse","pathString","allParts","name","delimiter","splitPathRe","posix","posixSplitPath","charAt","fromParts","ts","ScriptTarget","Latest","ModuleResolutionKind","NodeJs","JsxEmit","React","tokenTypes","tokenModifiers","_tokenFallbackScopes","registerTokenFallback","tokenString","fallbackScopes","token","some","tokenType","every","mod","tokenMod","_isValid","typeHierarchy","getTokenScore","queryToken","e_1","score","typeId","hierarchy","getTypeHierarchy","indexOf","_b","_c","tokenModifier","e_1_1","return","getMatch","semanticTokens","winner","forEach","semanticToken","getFallback","tokenDefault","Matcher","Object","freeze","__proto__","matchToken","_token","fallback","FallbackPresets","vscode","register","initialize","cb","webpackEmptyContext","req","keys","id","__awaiter","thisArg","_arguments","P","generator","Promise","reject","fulfilled","step","rejected","then","apply","__generator","body","y","t","g","_","label","sent","trys","ops","verb","v","op","FontStyle","EntityType","onigasmUrl","loadWASM","url","fetch","arrayBuffer","_createCandidate","nodeScopes","query","_scopes","queryScopes","matchIndexes","runner","scope","affix","_isDescendant","splice","parents","_compare","a","b","rules","_nodeScopes","queries","scopes","definedScopes","candidate","winnerLast","candidateLast","scopeMatch","rule","_rule","includes","TextMateScopesParser","_this","_getGrammarDefinition","scopeName","grammar","content","_getLanguageFile","JSON","_e","_typeCheck","_filePaths","filePaths","_registry","Registry","getGrammarDefinition","response","ok","text","loadGrammar","codeDocument","ruleStack","lineTokens","_loop_1","tokens","tokenizeLine","node","startIndex","endIndex","filter","storage","key","localStorage","getItem","data","setItem","stringify","removeItem","Languages","getUrl","file","textmateService","stateKey","toUpperCase","atomKey","selectorKey","languageState","atom","default","selector","get","_rawCode","rawCode","set","input","editCodeState","parsedCode","_themeStyle","themeStyle","_style","style","DefaultValue","States","GENERAL_SCOPES","colors","light","dark","generalScopesDefault","focusBorder","foreground","factory","state","_default","TREE_ID","_idState","entityIds","_state","atomFamily","getEntities","map","getEntity","selectorFamily","entity","idArr","__meta","_id","remove","touched","param","defaults","color","getScopeDefault","settings","GeneralScope","GENERAL_SCOPE_STATE_ID","generalScopesState","generalScopeState","fontStyle","Rule","RULES_STATE_ID","rulesState","ruleState","ruleIds","api","_baseUrl","_active","ping","_fetch","json","success","endpoint","options","_request","method","headers","window","_isActive","console","warn","API","semanticTokensState","post","semanticState","Active","_grouped","groupBy","grouped","lineNumber","SemanticToken","SEMANTIC_STATE_ID","semanticTokenState","semanticTokenIds","CodeInput","useRecoilState","setRawCode","isEditing","textareaRef","useRef","useEffect","current","select","ref","spellCheck","className","cx","css","textArea","codeText","onChange","evt","target","_mode","mode","newMode","entitySettingsState","_entitySettingsState","Button","children","onClick","button","Confirm","onConfirm","onReject","container","buttons","useOutsideClick","elem","callback","clickListener","useCallback","event","contains","document","addEventListener","removeEventListener","_Modal","onClose","closeOnOutsideClick","overlay","isOutside","Modal","createDialogElement","props","dialogRootElement","appendChild","removeChild","ReactDOM","createPortal","querySelector","uniqueId","dialog","createElement","setAttribute","_unmountWrap","unmountComponentAtNode","confirm","_content","render","createName","createRule","existingIds","filterScope","filteredScopes","splitted","createSemanticToken","useAddEntity","useRecoilCallback","snapshot","getPromise","message","useViewEntity","activeScope","activateRuleByScope","_textmateScopesState","_semanticTokenState","infoState","textmateScopes","selected","sublineSelected","reset","Info","definedRules","useRecoilValue","definedTokens","viewEntity","activateRule","useSetRecoilState","activeRule","updateRule","addEntity","onClickToken","_tokens","matcher","log","info","header","exists","exist","regex","RegExp","_scope","formattedScope","onClickScope","memo","getContrastColor","chroma","contrast","getClass","empty","subline","entitySelector","onHover","semanticTokenStateId","ruleStateId","editorBackground","trim","semanticTokenStr","fontWeight","Bold","Italic","textDecoration","Underline","backgroundColor","onMouseEnter","hydratedCode","textMateResult","semanticTokenResult","lines","sorted","sortBy","formatted","textMateScope","semanticTokenScope","CodeView","codeObj","setInfoState","subLineCallback","lineNumbers","sublineKey","Editor","outer","codeWrapper","Code","Suspense","SettingsMenuItem","TYPE_MAP","FontStyleEnum","BoldIcon","ItalicIcon","UnderlineIcon","enabled","SVG","icon","isTheme","obj","Array","isArray","tokenColors","resetState","ids","updated","tokenIds","getFileJson","files","reader","FileReader","onload","readAsText","Open","inputRef","onSelectFile","gotoSnapshot","asyncMap","mutableSnapshot","tokenColor","newSnapshot","accept","display","click","CustomizeCode","setEditCode","ruleTransformer","createTheme","generalScopes","reduce","acc","semanticHighlighting","semanticTokenColors","Export","download","theme","dataStr","encodeURIComponent","New","catch","classMap","Inactive","Enabled","Loading","SemanticHighlighting","toggleSemanticHighlighting","nextState","useSemanticHighlighting","status","SettingsMenu","useState","open","setOpen","containerRef","settingsIcon","opacity","menu","divider","ColorPicker","newColorCallback","debounce","_onChange","hexValue","picker","NameInput","currentValue","readonly","editing","setEditing","setValue","onInputBlur","onKeyDown","readOnly","editable","onBlur","ScopesList","onDelete","existingScopes","scopesReversed","warning","role","aria-label","getScale","scale","getSwatches","hex","mix","Swatches","onColorSelect","swatches","setSwatches","group","swatchGroup","swatch","PanelItem","item","Panel","toolbar","close","fontSize","PanelSettings","onChangeName","onChangeFontStyle","onChangeColor","onAddScope","bold","italic","underline","onDeleteScope","newScope","setNewScope","onAddScopeInputChange","onAddScopeInputKeyDown","preventDefault","top","left","scopesList","tools","colorContainer","addScope","addScopeInput","placeholder","GeneralSettings","generalScope","updateGeneralScope","isRule","isSemanticToken","useDeleteEntity","editEntity","currentMode","getter","stateValue","deletedEntity","getExistingScopes","getDefinedScopes","isDefined","RuleSettings","deleteEntity","toggleFontStyle","styles","index","findIndex","sc","newScopes","SemanticTokenSettings","editingEntity","updateEntity","Settings","sidebarRules","sidebarGeneralScopes","sidebarSemanticTokens","FilterAdd","setQuery","addButton","SidebarItem","isActive","title","showWarning","active","nameContainer","GeneralScopes","Rules","SemanticTokens","Toolbar","setMode","generalScopesStateCSS","Sidebar","generalStyle","modalIds","_modalState","getModalState","isOpen","Item","QuickInput","onSelect","inputProps","option","focussedIndex","setFocussedIndex","keydownHandler","inputContainer","optionContainer","focussed","LanguageSwitcher","setIsOpen","setLanguage","ThemeStyleSwitcher","setStyle","StatusBar","languageOpen","openLanguageSwitcher","themeStyleOpen","openThemeStyleSwitcher","c_est_moi","href","rel","ONIGASM_URL","initializeState","ruleIdsArr","tokenIdsArr","App","ready","setReady","initSemantic","Presets","initTextMate","sidebar","main","bottom","statusbar","onRender","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b3a0874e.chunk.js","sourcesContent":["import ts from 'typescript/lib/tsserverlibrary';\nimport initPlugin from 'typescript-vscode-sh-plugin';\nimport util from 'util';\n\nvar WORKING_FILENAME = 'semanticHighlightParser';\r\nvar TOKEN_TYPE_WILDCARD = '*';\r\nvar TOKEN_CLASSIFIER_LANGUAGE_SEPARATOR = ':';\r\nvar CLASSIFIER_MODIFIER_SEPARATOR = '.';\r\nvar ID_PATTERN = '\\\\w+[-_\\\\w+]*';\r\nvar SELECTOR_PATTERN = \"^(\" + ID_PATTERN + \"|\\\\*)(\\\\\" + CLASSIFIER_MODIFIER_SEPARATOR + ID_PATTERN + \")*(\\\\\" + TOKEN_CLASSIFIER_LANGUAGE_SEPARATOR + ID_PATTERN + \")?$\";\n\nvar createToken = function (queryString) {\r\n    if (!queryString.match(SELECTOR_PATTERN)) {\r\n        throw new Error(queryString + \" is not a valid selector.\");\r\n    }\r\n    var i = queryString.length, j = queryString.length, language;\r\n    var modifiers = [];\r\n    for (; i >= 0; i--) {\r\n        var char = queryString[i];\r\n        if (char === CLASSIFIER_MODIFIER_SEPARATOR ||\r\n            char === TOKEN_CLASSIFIER_LANGUAGE_SEPARATOR) {\r\n            var segment = queryString.substring(i + 1, j);\r\n            j = i;\r\n            if (char === TOKEN_CLASSIFIER_LANGUAGE_SEPARATOR) {\r\n                language = segment;\r\n            }\r\n            else {\r\n                modifiers.push(segment);\r\n            }\r\n        }\r\n    }\r\n    var type = queryString.substring(0, j);\r\n    return {\r\n        type: type,\r\n        modifiers: modifiers.reverse(),\r\n        language: language,\r\n    };\r\n};\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nfunction __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\n\nvar createTokenString = function (_a) {\r\n    var type = _a.type, modifiers = _a.modifiers, language = _a.language;\r\n    return \"\" + __spread([type], __spread(modifiers).sort()).join('.') + (language !== undefined ? ':' + language : '');\r\n};\n\nvar CodeDocument = /** @class */ (function () {\r\n    function CodeDocument(opts) {\r\n        this._raw = opts.code;\r\n        this._lines = opts.code.split(/[\\n\\r]/g);\r\n    }\r\n    CodeDocument.prototype.getTextAtPosition = function (position) {\r\n        var line = position.line, start = position.start, length = position.length;\r\n        return this._lines[line].substr(start, length);\r\n    };\r\n    CodeDocument.prototype.length = function () {\r\n        return this._raw.length;\r\n    };\r\n    CodeDocument.prototype.getLines = function () {\r\n        return this._lines;\r\n    };\r\n    CodeDocument.prototype.getRaw = function () {\r\n        return this._raw;\r\n    };\r\n    return CodeDocument;\r\n}());\n\nfunction createCommonjsModule(fn, basedir, module) {\n\treturn module = {\n\t  path: basedir,\n\t  exports: {},\n\t  require: function (path, base) {\n      return commonjsRequire(path, (base === undefined || base === null) ? module.path : base);\n    }\n\t}, fn(module, module.exports), module.exports;\n}\n\nfunction commonjsRequire () {\n\tthrow new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');\n}\n\nvar path = createCommonjsModule(function (module) {\n\r\n\r\nvar isWindows = process.platform === 'win32';\r\n\r\n\r\n\r\n// resolves . and .. elements in a path array with directory names there\r\n// must be no slashes or device names (c:\\) in the array\r\n// (so also no leading and trailing slashes - it does not distinguish\r\n// relative and absolute paths)\r\nfunction normalizeArray(parts, allowAboveRoot) {\r\n  var res = [];\r\n  for (var i = 0; i < parts.length; i++) {\r\n    var p = parts[i];\r\n\r\n    // ignore empty parts\r\n    if (!p || p === '.')\r\n      continue;\r\n\r\n    if (p === '..') {\r\n      if (res.length && res[res.length - 1] !== '..') {\r\n        res.pop();\r\n      } else if (allowAboveRoot) {\r\n        res.push('..');\r\n      }\r\n    } else {\r\n      res.push(p);\r\n    }\r\n  }\r\n\r\n  return res;\r\n}\r\n\r\n// returns an array with empty elements removed from either end of the input\r\n// array or the original array if no elements need to be removed\r\nfunction trimArray(arr) {\r\n  var lastIndex = arr.length - 1;\r\n  var start = 0;\r\n  for (; start <= lastIndex; start++) {\r\n    if (arr[start])\r\n      break;\r\n  }\r\n\r\n  var end = lastIndex;\r\n  for (; end >= 0; end--) {\r\n    if (arr[end])\r\n      break;\r\n  }\r\n\r\n  if (start === 0 && end === lastIndex)\r\n    return arr;\r\n  if (start > end)\r\n    return [];\r\n  return arr.slice(start, end + 1);\r\n}\r\n\r\n// Regex to split a windows path into three parts: [*, device, slash,\r\n// tail] windows-only\r\nvar splitDeviceRe =\r\n    /^([a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/]+[^\\\\\\/]+)?([\\\\\\/])?([\\s\\S]*?)$/;\r\n\r\n// Regex to split the tail part of the above into [*, dir, basename, ext]\r\nvar splitTailRe =\r\n    /^([\\s\\S]*?)((?:\\.{1,2}|[^\\\\\\/]+?|)(\\.[^.\\/\\\\]*|))(?:[\\\\\\/]*)$/;\r\n\r\nvar win32 = {};\r\n\r\n// Function to split a filename into [root, dir, basename, ext]\r\nfunction win32SplitPath(filename) {\r\n  // Separate device+slash from tail\r\n  var result = splitDeviceRe.exec(filename),\r\n      device = (result[1] || '') + (result[2] || ''),\r\n      tail = result[3] || '';\r\n  // Split the tail into dir, basename and extension\r\n  var result2 = splitTailRe.exec(tail),\r\n      dir = result2[1],\r\n      basename = result2[2],\r\n      ext = result2[3];\r\n  return [device, dir, basename, ext];\r\n}\r\n\r\nfunction win32StatPath(path) {\r\n  var result = splitDeviceRe.exec(path),\r\n      device = result[1] || '',\r\n      isUnc = !!device && device[1] !== ':';\r\n  return {\r\n    device: device,\r\n    isUnc: isUnc,\r\n    isAbsolute: isUnc || !!result[2], // UNC paths are always absolute\r\n    tail: result[3]\r\n  };\r\n}\r\n\r\nfunction normalizeUNCRoot(device) {\r\n  return '\\\\\\\\' + device.replace(/^[\\\\\\/]+/, '').replace(/[\\\\\\/]+/g, '\\\\');\r\n}\r\n\r\n// path.resolve([from ...], to)\r\nwin32.resolve = function() {\r\n  var resolvedDevice = '',\r\n      resolvedTail = '',\r\n      resolvedAbsolute = false;\r\n\r\n  for (var i = arguments.length - 1; i >= -1; i--) {\r\n    var path;\r\n    if (i >= 0) {\r\n      path = arguments[i];\r\n    } else if (!resolvedDevice) {\r\n      path = process.cwd();\r\n    } else {\r\n      // Windows has the concept of drive-specific current working\r\n      // directories. If we've resolved a drive letter but not yet an\r\n      // absolute path, get cwd for that drive. We're sure the device is not\r\n      // an unc path at this points, because unc paths are always absolute.\r\n      path = process.env['=' + resolvedDevice];\r\n      // Verify that a drive-local cwd was found and that it actually points\r\n      // to our drive. If not, default to the drive's root.\r\n      if (!path || path.substr(0, 3).toLowerCase() !==\r\n          resolvedDevice.toLowerCase() + '\\\\') {\r\n        path = resolvedDevice + '\\\\';\r\n      }\r\n    }\r\n\r\n    // Skip empty and invalid entries\r\n    if (!util.isString(path)) {\r\n      throw new TypeError('Arguments to path.resolve must be strings');\r\n    } else if (!path) {\r\n      continue;\r\n    }\r\n\r\n    var result = win32StatPath(path),\r\n        device = result.device,\r\n        isUnc = result.isUnc,\r\n        isAbsolute = result.isAbsolute,\r\n        tail = result.tail;\r\n\r\n    if (device &&\r\n        resolvedDevice &&\r\n        device.toLowerCase() !== resolvedDevice.toLowerCase()) {\r\n      // This path points to another device so it is not applicable\r\n      continue;\r\n    }\r\n\r\n    if (!resolvedDevice) {\r\n      resolvedDevice = device;\r\n    }\r\n    if (!resolvedAbsolute) {\r\n      resolvedTail = tail + '\\\\' + resolvedTail;\r\n      resolvedAbsolute = isAbsolute;\r\n    }\r\n\r\n    if (resolvedDevice && resolvedAbsolute) {\r\n      break;\r\n    }\r\n  }\r\n\r\n  // Convert slashes to backslashes when `resolvedDevice` points to an UNC\r\n  // root. Also squash multiple slashes into a single one where appropriate.\r\n  if (isUnc) {\r\n    resolvedDevice = normalizeUNCRoot(resolvedDevice);\r\n  }\r\n\r\n  // At this point the path should be resolved to a full absolute path,\r\n  // but handle relative paths to be safe (might happen when process.cwd()\r\n  // fails)\r\n\r\n  // Normalize the tail path\r\n  resolvedTail = normalizeArray(resolvedTail.split(/[\\\\\\/]+/),\r\n                                !resolvedAbsolute).join('\\\\');\r\n\r\n  return (resolvedDevice + (resolvedAbsolute ? '\\\\' : '') + resolvedTail) ||\r\n         '.';\r\n};\r\n\r\n\r\nwin32.normalize = function(path) {\r\n  var result = win32StatPath(path),\r\n      device = result.device,\r\n      isUnc = result.isUnc,\r\n      isAbsolute = result.isAbsolute,\r\n      tail = result.tail,\r\n      trailingSlash = /[\\\\\\/]$/.test(tail);\r\n\r\n  // Normalize the tail path\r\n  tail = normalizeArray(tail.split(/[\\\\\\/]+/), !isAbsolute).join('\\\\');\r\n\r\n  if (!tail && !isAbsolute) {\r\n    tail = '.';\r\n  }\r\n  if (tail && trailingSlash) {\r\n    tail += '\\\\';\r\n  }\r\n\r\n  // Convert slashes to backslashes when `device` points to an UNC root.\r\n  // Also squash multiple slashes into a single one where appropriate.\r\n  if (isUnc) {\r\n    device = normalizeUNCRoot(device);\r\n  }\r\n\r\n  return device + (isAbsolute ? '\\\\' : '') + tail;\r\n};\r\n\r\n\r\nwin32.isAbsolute = function(path) {\r\n  return win32StatPath(path).isAbsolute;\r\n};\r\n\r\nwin32.join = function() {\r\n  var paths = [];\r\n  for (var i = 0; i < arguments.length; i++) {\r\n    var arg = arguments[i];\r\n    if (!util.isString(arg)) {\r\n      throw new TypeError('Arguments to path.join must be strings');\r\n    }\r\n    if (arg) {\r\n      paths.push(arg);\r\n    }\r\n  }\r\n\r\n  var joined = paths.join('\\\\');\r\n\r\n  // Make sure that the joined path doesn't start with two slashes, because\r\n  // normalize() will mistake it for an UNC path then.\r\n  //\r\n  // This step is skipped when it is very clear that the user actually\r\n  // intended to point at an UNC path. This is assumed when the first\r\n  // non-empty string arguments starts with exactly two slashes followed by\r\n  // at least one more non-slash character.\r\n  //\r\n  // Note that for normalize() to treat a path as an UNC path it needs to\r\n  // have at least 2 components, so we don't filter for that here.\r\n  // This means that the user can use join to construct UNC paths from\r\n  // a server name and a share name; for example:\r\n  //   path.join('//server', 'share') -> '\\\\\\\\server\\\\share\\')\r\n  if (!/^[\\\\\\/]{2}[^\\\\\\/]/.test(paths[0])) {\r\n    joined = joined.replace(/^[\\\\\\/]{2,}/, '\\\\');\r\n  }\r\n\r\n  return win32.normalize(joined);\r\n};\r\n\r\n\r\n// path.relative(from, to)\r\n// it will solve the relative path from 'from' to 'to', for instance:\r\n// from = 'C:\\\\orandea\\\\test\\\\aaa'\r\n// to = 'C:\\\\orandea\\\\impl\\\\bbb'\r\n// The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\r\nwin32.relative = function(from, to) {\r\n  from = win32.resolve(from);\r\n  to = win32.resolve(to);\r\n\r\n  // windows is not case sensitive\r\n  var lowerFrom = from.toLowerCase();\r\n  var lowerTo = to.toLowerCase();\r\n\r\n  var toParts = trimArray(to.split('\\\\'));\r\n\r\n  var lowerFromParts = trimArray(lowerFrom.split('\\\\'));\r\n  var lowerToParts = trimArray(lowerTo.split('\\\\'));\r\n\r\n  var length = Math.min(lowerFromParts.length, lowerToParts.length);\r\n  var samePartsLength = length;\r\n  for (var i = 0; i < length; i++) {\r\n    if (lowerFromParts[i] !== lowerToParts[i]) {\r\n      samePartsLength = i;\r\n      break;\r\n    }\r\n  }\r\n\r\n  if (samePartsLength == 0) {\r\n    return to;\r\n  }\r\n\r\n  var outputParts = [];\r\n  for (var i = samePartsLength; i < lowerFromParts.length; i++) {\r\n    outputParts.push('..');\r\n  }\r\n\r\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\r\n\r\n  return outputParts.join('\\\\');\r\n};\r\n\r\n\r\nwin32._makeLong = function(path) {\r\n  // Note: this will *probably* throw somewhere.\r\n  if (!util.isString(path))\r\n    return path;\r\n\r\n  if (!path) {\r\n    return '';\r\n  }\r\n\r\n  var resolvedPath = win32.resolve(path);\r\n\r\n  if (/^[a-zA-Z]\\:\\\\/.test(resolvedPath)) {\r\n    // path is local filesystem path, which needs to be converted\r\n    // to long UNC path.\r\n    return '\\\\\\\\?\\\\' + resolvedPath;\r\n  } else if (/^\\\\\\\\[^?.]/.test(resolvedPath)) {\r\n    // path is network UNC path, which needs to be converted\r\n    // to long UNC path.\r\n    return '\\\\\\\\?\\\\UNC\\\\' + resolvedPath.substring(2);\r\n  }\r\n\r\n  return path;\r\n};\r\n\r\n\r\nwin32.dirname = function(path) {\r\n  var result = win32SplitPath(path),\r\n      root = result[0],\r\n      dir = result[1];\r\n\r\n  if (!root && !dir) {\r\n    // No dirname whatsoever\r\n    return '.';\r\n  }\r\n\r\n  if (dir) {\r\n    // It has a dirname, strip trailing slash\r\n    dir = dir.substr(0, dir.length - 1);\r\n  }\r\n\r\n  return root + dir;\r\n};\r\n\r\n\r\nwin32.basename = function(path, ext) {\r\n  var f = win32SplitPath(path)[2];\r\n  // TODO: make this comparison case-insensitive on windows?\r\n  if (ext && f.substr(-1 * ext.length) === ext) {\r\n    f = f.substr(0, f.length - ext.length);\r\n  }\r\n  return f;\r\n};\r\n\r\n\r\nwin32.extname = function(path) {\r\n  return win32SplitPath(path)[3];\r\n};\r\n\r\n\r\nwin32.format = function(pathObject) {\r\n  if (!util.isObject(pathObject)) {\r\n    throw new TypeError(\r\n        \"Parameter 'pathObject' must be an object, not \" + typeof pathObject\r\n    );\r\n  }\r\n\r\n  var root = pathObject.root || '';\r\n\r\n  if (!util.isString(root)) {\r\n    throw new TypeError(\r\n        \"'pathObject.root' must be a string or undefined, not \" +\r\n        typeof pathObject.root\r\n    );\r\n  }\r\n\r\n  var dir = pathObject.dir;\r\n  var base = pathObject.base || '';\r\n  if (!dir) {\r\n    return base;\r\n  }\r\n  if (dir[dir.length - 1] === win32.sep) {\r\n    return dir + base;\r\n  }\r\n  return dir + win32.sep + base;\r\n};\r\n\r\n\r\nwin32.parse = function(pathString) {\r\n  if (!util.isString(pathString)) {\r\n    throw new TypeError(\r\n        \"Parameter 'pathString' must be a string, not \" + typeof pathString\r\n    );\r\n  }\r\n  var allParts = win32SplitPath(pathString);\r\n  if (!allParts || allParts.length !== 4) {\r\n    throw new TypeError(\"Invalid path '\" + pathString + \"'\");\r\n  }\r\n  return {\r\n    root: allParts[0],\r\n    dir: allParts[0] + allParts[1].slice(0, -1),\r\n    base: allParts[2],\r\n    ext: allParts[3],\r\n    name: allParts[2].slice(0, allParts[2].length - allParts[3].length)\r\n  };\r\n};\r\n\r\n\r\nwin32.sep = '\\\\';\r\nwin32.delimiter = ';';\r\n\r\n\r\n// Split a filename into [root, dir, basename, ext], unix version\r\n// 'root' is just a slash, or nothing.\r\nvar splitPathRe =\r\n    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\r\nvar posix = {};\r\n\r\n\r\nfunction posixSplitPath(filename) {\r\n  return splitPathRe.exec(filename).slice(1);\r\n}\r\n\r\n\r\n// path.resolve([from ...], to)\r\n// posix version\r\nposix.resolve = function() {\r\n  var resolvedPath = '',\r\n      resolvedAbsolute = false;\r\n\r\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\r\n    var path = (i >= 0) ? arguments[i] : process.cwd();\r\n\r\n    // Skip empty and invalid entries\r\n    if (!util.isString(path)) {\r\n      throw new TypeError('Arguments to path.resolve must be strings');\r\n    } else if (!path) {\r\n      continue;\r\n    }\r\n\r\n    resolvedPath = path + '/' + resolvedPath;\r\n    resolvedAbsolute = path[0] === '/';\r\n  }\r\n\r\n  // At this point the path should be resolved to a full absolute path, but\r\n  // handle relative paths to be safe (might happen when process.cwd() fails)\r\n\r\n  // Normalize the path\r\n  resolvedPath = normalizeArray(resolvedPath.split('/'),\r\n                                !resolvedAbsolute).join('/');\r\n\r\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\r\n};\r\n\r\n// path.normalize(path)\r\n// posix version\r\nposix.normalize = function(path) {\r\n  var isAbsolute = posix.isAbsolute(path),\r\n      trailingSlash = path && path[path.length - 1] === '/';\r\n\r\n  // Normalize the path\r\n  path = normalizeArray(path.split('/'), !isAbsolute).join('/');\r\n\r\n  if (!path && !isAbsolute) {\r\n    path = '.';\r\n  }\r\n  if (path && trailingSlash) {\r\n    path += '/';\r\n  }\r\n\r\n  return (isAbsolute ? '/' : '') + path;\r\n};\r\n\r\n// posix version\r\nposix.isAbsolute = function(path) {\r\n  return path.charAt(0) === '/';\r\n};\r\n\r\n// posix version\r\nposix.join = function() {\r\n  var path = '';\r\n  for (var i = 0; i < arguments.length; i++) {\r\n    var segment = arguments[i];\r\n    if (!util.isString(segment)) {\r\n      throw new TypeError('Arguments to path.join must be strings');\r\n    }\r\n    if (segment) {\r\n      if (!path) {\r\n        path += segment;\r\n      } else {\r\n        path += '/' + segment;\r\n      }\r\n    }\r\n  }\r\n  return posix.normalize(path);\r\n};\r\n\r\n\r\n// path.relative(from, to)\r\n// posix version\r\nposix.relative = function(from, to) {\r\n  from = posix.resolve(from).substr(1);\r\n  to = posix.resolve(to).substr(1);\r\n\r\n  var fromParts = trimArray(from.split('/'));\r\n  var toParts = trimArray(to.split('/'));\r\n\r\n  var length = Math.min(fromParts.length, toParts.length);\r\n  var samePartsLength = length;\r\n  for (var i = 0; i < length; i++) {\r\n    if (fromParts[i] !== toParts[i]) {\r\n      samePartsLength = i;\r\n      break;\r\n    }\r\n  }\r\n\r\n  var outputParts = [];\r\n  for (var i = samePartsLength; i < fromParts.length; i++) {\r\n    outputParts.push('..');\r\n  }\r\n\r\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\r\n\r\n  return outputParts.join('/');\r\n};\r\n\r\n\r\nposix._makeLong = function(path) {\r\n  return path;\r\n};\r\n\r\n\r\nposix.dirname = function(path) {\r\n  var result = posixSplitPath(path),\r\n      root = result[0],\r\n      dir = result[1];\r\n\r\n  if (!root && !dir) {\r\n    // No dirname whatsoever\r\n    return '.';\r\n  }\r\n\r\n  if (dir) {\r\n    // It has a dirname, strip trailing slash\r\n    dir = dir.substr(0, dir.length - 1);\r\n  }\r\n\r\n  return root + dir;\r\n};\r\n\r\n\r\nposix.basename = function(path, ext) {\r\n  var f = posixSplitPath(path)[2];\r\n  // TODO: make this comparison case-insensitive on windows?\r\n  if (ext && f.substr(-1 * ext.length) === ext) {\r\n    f = f.substr(0, f.length - ext.length);\r\n  }\r\n  return f;\r\n};\r\n\r\n\r\nposix.extname = function(path) {\r\n  return posixSplitPath(path)[3];\r\n};\r\n\r\n\r\nposix.format = function(pathObject) {\r\n  if (!util.isObject(pathObject)) {\r\n    throw new TypeError(\r\n        \"Parameter 'pathObject' must be an object, not \" + typeof pathObject\r\n    );\r\n  }\r\n\r\n  var root = pathObject.root || '';\r\n\r\n  if (!util.isString(root)) {\r\n    throw new TypeError(\r\n        \"'pathObject.root' must be a string or undefined, not \" +\r\n        typeof pathObject.root\r\n    );\r\n  }\r\n\r\n  var dir = pathObject.dir ? pathObject.dir + posix.sep : '';\r\n  var base = pathObject.base || '';\r\n  return dir + base;\r\n};\r\n\r\n\r\nposix.parse = function(pathString) {\r\n  if (!util.isString(pathString)) {\r\n    throw new TypeError(\r\n        \"Parameter 'pathString' must be a string, not \" + typeof pathString\r\n    );\r\n  }\r\n  var allParts = posixSplitPath(pathString);\r\n  if (!allParts || allParts.length !== 4) {\r\n    throw new TypeError(\"Invalid path '\" + pathString + \"'\");\r\n  }\r\n  allParts[1] = allParts[1] || '';\r\n  allParts[2] = allParts[2] || '';\r\n  allParts[3] = allParts[3] || '';\r\n\r\n  return {\r\n    root: allParts[0],\r\n    dir: allParts[0] + allParts[1].slice(0, -1),\r\n    base: allParts[2],\r\n    ext: allParts[3],\r\n    name: allParts[2].slice(0, allParts[2].length - allParts[3].length)\r\n  };\r\n};\r\n\r\n\r\nposix.sep = '/';\r\nposix.delimiter = ':';\r\n\r\n\r\nif (isWindows)\r\n  module.exports = win32;\r\nelse /* posix */\r\n  module.exports = posix;\r\n\r\nmodule.exports.posix = posix;\r\nmodule.exports.win32 = win32;\n});\n\nvar compilerOptions = {\r\n    allowNonTsExtensions: true,\r\n    allowJs: true,\r\n    lib: ['lib.es6.d.ts'],\r\n    target: ts.ScriptTarget.Latest,\r\n    moduleResolution: ts.ModuleResolutionKind.NodeJs,\r\n    jsx: ts.JsxEmit.React,\r\n    allowSyntheticDefaultImports: true,\r\n    types: ['node'],\r\n};\r\nvar createTypeScriptService = function (_a) {\r\n    var language = _a.language, code = _a.code;\r\n    if (!['jsx', 'js', 'ts', 'tsx'].includes(language)) {\r\n        throw new Error(\"Language: \\\"\" + language + \"\\\" is not supported.\");\r\n    }\r\n    var sourceRoot = __dirname; // use the current directory as root for all test files to enable module lookup\r\n    var file = WORKING_FILENAME + \".\" + language;\r\n    var filePath = \"\" + sourceRoot + file;\r\n    function findFilePath(moduleName) {\r\n        if (file.startsWith(moduleName + '.')) {\r\n            return sourceRoot + file;\r\n        }\r\n        return undefined;\r\n    }\r\n    var host = {\r\n        getCompilationSettings: function () { return compilerOptions; },\r\n        getScriptFileNames: function () { return [filePath]; },\r\n        getScriptKind: function (_fileName) {\r\n            var ext = path.extname(_fileName);\r\n            switch (ext) {\r\n                case '.jsx':\r\n                    return ts.ScriptKind.JSX;\r\n                case '.tsx':\r\n                    return ts.ScriptKind.TSX;\r\n                case '.js':\r\n                    return ts.ScriptKind.JS;\r\n                default:\r\n                    return ts.ScriptKind.TS;\r\n            }\r\n        },\r\n        getScriptVersion: function (_fileName) { return '1'; },\r\n        getScriptSnapshot: function (fileName) {\r\n            var text;\r\n            if (fileName.startsWith(sourceRoot)) {\r\n                text = code;\r\n            }\r\n            else {\r\n                text = ts.sys.readFile(fileName) || '';\r\n            }\r\n            return {\r\n                getText: function (start, end) { return text.substring(start, end); },\r\n                getLength: function () { return text.length; },\r\n                getChangeRange: function () { return undefined; },\r\n            };\r\n        },\r\n        getCurrentDirectory: function () { return __dirname; },\r\n        getDirectories: ts.sys.getDirectories,\r\n        getDefaultLibFileName: function (options) { return ts.getDefaultLibFilePath(options); },\r\n        resolveModuleNames: function (moduleNames, containingFile) {\r\n            var e_1, _a;\r\n            var resolvedModules = [];\r\n            try {\r\n                for (var moduleNames_1 = __values(moduleNames), moduleNames_1_1 = moduleNames_1.next(); !moduleNames_1_1.done; moduleNames_1_1 = moduleNames_1.next()) {\r\n                    var moduleName = moduleNames_1_1.value;\r\n                    if (moduleName.startsWith('./')) {\r\n                        var resolvedFileName = findFilePath(moduleName.substring(2));\r\n                        if (!resolvedFileName) {\r\n                            resolvedFileName = path.join(path.dirname(containingFile), moduleName + '.ts');\r\n                        }\r\n                        resolvedModules.push({ resolvedFileName: resolvedFileName });\r\n                    }\r\n                    else {\r\n                        var result = ts.resolveModuleName(moduleName, containingFile, compilerOptions, {\r\n                            fileExists: ts.sys.fileExists,\r\n                            readFile: ts.sys.readFile,\r\n                        });\r\n                        if (result.resolvedModule) {\r\n                            resolvedModules.push(result.resolvedModule);\r\n                        }\r\n                        else {\r\n                            resolvedModules.push(undefined);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n            finally {\r\n                try {\r\n                    if (moduleNames_1_1 && !moduleNames_1_1.done && (_a = moduleNames_1.return)) _a.call(moduleNames_1);\r\n                }\r\n                finally { if (e_1) throw e_1.error; }\r\n            }\r\n            return resolvedModules;\r\n        },\r\n    };\r\n    return host;\r\n};\n\nvar tokenTypes = [];\r\ntokenTypes[0 /* class */] = 'class';\r\ntokenTypes[1 /* enum */] = 'enum';\r\ntokenTypes[2 /* interface */] = 'interface';\r\ntokenTypes[3 /* namespace */] = 'namespace';\r\ntokenTypes[4 /* typeParameter */] = 'typeParameter';\r\ntokenTypes[5 /* type */] = 'type';\r\ntokenTypes[6 /* parameter */] = 'parameter';\r\ntokenTypes[7 /* variable */] = 'variable';\r\ntokenTypes[8 /* enumMember */] = 'enumMember';\r\ntokenTypes[9 /* property */] = 'property';\r\ntokenTypes[10 /* function */] = 'function';\r\ntokenTypes[11 /* member */] = 'member';\r\nvar tokenModifiers = [];\r\ntokenModifiers[0 /* declaration */] = 'declaration';\r\ntokenModifiers[1 /* static */] = 'static';\r\ntokenModifiers[2 /* async */] = 'async';\r\ntokenModifiers[3 /* readonly */] = 'readonly';\r\ntokenModifiers[4 /* defaultLibrary */] = 'defaultLibrary';\r\ntokenModifiers[5 /* local */] = 'local';\n\nvar _createTypeScript = function (_a) {\r\n    var code = _a.code, language = _a.language;\r\n    var host = createTypeScriptService({\r\n        code: code,\r\n        language: language,\r\n    });\r\n    var textmateService = ts.createLanguageService(host);\r\n    return {\r\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\r\n        // @ts-ignore\r\n        service: initPlugin({ typescript: ts }).decorate(textmateService),\r\n        host: host,\r\n    };\r\n};\r\nvar _getTokenTypeIndex = function (classification) {\r\n    if (classification > 255 /* modifierMask */) {\r\n        return (classification >> 8 /* typeOffset */) - 1;\r\n    }\r\n    return undefined;\r\n};\r\nvar _getTokenModifierSet = function (classification) {\r\n    return classification & 255 /* modifierMask */;\r\n};\r\nvar Parser = function (_a) {\r\n    var code = _a.code, language = _a.language;\r\n    var codeDocument = new CodeDocument({ code: code });\r\n    var _b = _createTypeScript({ code: code, language: language }), service = _b.service, host = _b.host;\r\n    var program = service.getProgram();\r\n    var fileName = host.getScriptFileNames()[0];\r\n    var sourceFile = program.getSourceFile(fileName);\r\n    var span = { start: 0, length: codeDocument.length() };\r\n    var result = service.getEncodedSemanticClassifications(fileName, span);\r\n    var tokens = [];\r\n    var i = 0;\r\n    var _loop_1 = function () {\r\n        var start = result.spans[i++];\r\n        var length_1 = result.spans[i++];\r\n        var classification = result.spans[i++];\r\n        var position = sourceFile.getLineAndCharacterOfPosition(start);\r\n        var typeIndex = _getTokenTypeIndex(classification) || 0;\r\n        var modifierSet = _getTokenModifierSet(classification);\r\n        tokens.push({\r\n            line: position.line,\r\n            start: position.character,\r\n            length: length_1,\r\n            type: tokenTypes[typeIndex],\r\n            modifiers: tokenModifiers.filter(function (_, i) { return modifierSet & (1 << i); }),\r\n            language: undefined,\r\n        });\r\n    };\r\n    while (i < result.spans.length) {\r\n        _loop_1();\r\n    }\r\n    return {\r\n        code: codeDocument,\r\n        tokens: tokens,\r\n    };\r\n};\n\nvar _tokenFallbackScopes = [];\r\nvar _isValid = function (token) {\r\n    if (!tokenTypes.some(function (tokenType) { return tokenType === token.type; })) {\r\n        return false;\r\n    }\r\n    if (token.modifiers &&\r\n        !token.modifiers.every(function (mod) { return tokenModifiers.some(function (tokenMod) { return tokenMod === mod; }); })) {\r\n        return false;\r\n    }\r\n    return true;\r\n};\r\nvar registerTokenFallback = function (tokenString, fallbackScopes) {\r\n    var token = createToken(tokenString);\r\n    if (!_isValid(token)) {\r\n        throw new Error(tokenString + \" is not a valid token. Either the pattern or type/modifier is invalid.\");\r\n    }\r\n    _tokenFallbackScopes.push({\r\n        token: token,\r\n        fallbackScopes: fallbackScopes,\r\n    });\r\n};\r\nvar getTokenFallbackScopes = function () {\r\n    return _tokenFallbackScopes;\r\n};\n\nvar typeHierarchy = {};\r\nvar getTypeHierarchy = function (typeId) {\r\n    var hierarchy = typeHierarchy[typeId];\r\n    if (!hierarchy) {\r\n        typeHierarchy[typeId] = hierarchy = [typeId];\r\n    }\r\n    return hierarchy;\r\n};\r\nvar getTokenScore = function (queryToken, token) {\r\n    var e_1, _a;\r\n    var score = 0;\r\n    if (queryToken.language !== undefined) {\r\n        if (queryToken.language !== token.language) {\r\n            return -1;\r\n        }\r\n        score += 10;\r\n    }\r\n    if (queryToken.type !== TOKEN_TYPE_WILDCARD) {\r\n        var hierarchy = getTypeHierarchy(token.type);\r\n        var level = hierarchy.indexOf(queryToken.type);\r\n        if (level === -1) {\r\n            return -1;\r\n        }\r\n        score += 100;\r\n    }\r\n    try {\r\n        // all token modifiers must be present\r\n        for (var _b = __values(queryToken.modifiers), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n            var tokenModifier = _c.value;\r\n            if (token.modifiers.indexOf(tokenModifier) === -1) {\r\n                return -1;\r\n            }\r\n        }\r\n    }\r\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n    finally {\r\n        try {\r\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n        }\r\n        finally { if (e_1) throw e_1.error; }\r\n    }\r\n    return score + queryToken.modifiers.length * 100;\r\n};\r\nvar getMatch = function (token, semanticTokens) {\r\n    var winner = undefined;\r\n    semanticTokens.forEach(function (semanticToken) {\r\n        var score = getTokenScore(token, semanticToken);\r\n        if (score > ((winner === null || winner === void 0 ? void 0 : winner.score) || 0)) {\r\n            winner = {\r\n                token: semanticToken,\r\n                score: score,\r\n            };\r\n        }\r\n    });\r\n    typeHierarchy = {};\r\n    return winner;\r\n};\r\nvar getFallback = function (token) {\r\n    var winner = undefined;\r\n    getTokenFallbackScopes().forEach(function (tokenDefault) {\r\n        var score = getTokenScore(token, tokenDefault.token);\r\n        if (score > ((winner === null || winner === void 0 ? void 0 : winner.score) || 0)) {\r\n            winner = {\r\n                token: tokenDefault,\r\n                score: score,\r\n            };\r\n        }\r\n    });\r\n    return winner === null || winner === void 0 ? void 0 : winner.token;\r\n};\r\nvar matchToken = function (token, semanticTokens) {\r\n    var _token = typeof token === 'string' ? createToken(token) : token;\r\n    var winner = getMatch(_token, semanticTokens);\r\n    if (winner) {\r\n        return {\r\n            token: winner.token,\r\n        };\r\n    }\r\n    var fallback = getFallback(_token);\r\n    if (fallback) {\r\n        return {\r\n            fallbackScopes: fallback.fallbackScopes,\r\n        };\r\n    }\r\n};\n\nvar Matcher = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    getMatch: getMatch,\n    getFallback: getFallback,\n    matchToken: matchToken\n});\n\nvar vscode = function (register) {\r\n    register('namespace', ['entity.name.namespace']);\r\n    register('type', ['entity.name.type', 'support.type']);\r\n    register('class', ['entity.name.type.class', 'support.class']);\r\n    register('interface', ['entity.name.type.interface']);\r\n    register('enum', ['entity.name.type.enum']);\r\n    register('typeParameter', ['entity.name.type.parameter']);\r\n    register('function', ['entity.name.function', 'support.function']);\r\n    register('member', ['entity.name.function.member', 'support.function']);\r\n    register('variable', ['variable.other.readwrite', 'entity.name.variable']);\r\n    register('parameter', ['variable.parameter']);\r\n    register('property', ['variable.other.property']);\r\n    register('enumMember', ['variable.other.enummember']);\r\n    register('variable.readonly', ['variable.other.constant']);\r\n    register('property.readonly', ['variable.other.constant.property']);\r\n    register('type.defaultLibrary', ['support.type']);\r\n    register('class.defaultLibrary', ['support.class']);\r\n    register('interface.defaultLibrary', ['support.class']);\r\n    register('variable.defaultLibrary', ['support.variable', 'support.other.variable']);\r\n    register('variable.defaultLibrary.readonly', ['support.constant']);\r\n    register('property.defaultLibrary', ['support.variable.property']);\r\n    register('property.defaultLibrary.readonly', ['support.constant.property']);\r\n    register('function.defaultLibrary', ['support.function']);\r\n    register('member.defaultLibrary', ['support.function']);\r\n};\n\nvar FallbackPresets = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    vscode: vscode\n});\n\nvar initialize = function (cb) {\r\n    cb(registerTokenFallback);\r\n};\n\nexport { FallbackPresets as Presets, createToken, createTokenString, initialize, Matcher as matcher, Parser as parser };\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"src-components-ui-PanelSettings-styles-module__container--2s6wc\",\"colorContainer\":\"src-components-ui-PanelSettings-styles-module__colorContainer--2jxb-\",\"top\":\"src-components-ui-PanelSettings-styles-module__top--Tg_UT\",\"left\":\"src-components-ui-PanelSettings-styles-module__left--3lzTS\",\"tools\":\"src-components-ui-PanelSettings-styles-module__tools--1nTYV\",\"picker\":\"src-components-ui-PanelSettings-styles-module__picker--deSrj\",\"delete\":\"src-components-ui-PanelSettings-styles-module__delete--10n54\",\"scopesList\":\"src-components-ui-PanelSettings-styles-module__scopesList--3H8ij\",\"addScope\":\"src-components-ui-PanelSettings-styles-module__addScope--1BtAX\",\"addScopeInput\":\"src-components-ui-PanelSettings-styles-module__addScopeInput--3b6yj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toolbar\":\"src-containers-Sidebar-components-Toolbar-styles-module__toolbar--2AdAR\",\"item\":\"src-containers-Sidebar-components-Toolbar-styles-module__item--1nUc-\",\"header\":\"src-containers-Sidebar-components-Toolbar-styles-module__header--13FeJ\",\"isActive\":\"src-containers-Sidebar-components-Toolbar-styles-module__isActive--3Ab5T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"info\":\"src-containers-Code-components-Info-styles-module__info--3xlGJ\",\"header\":\"src-containers-Code-components-Info-styles-module__header--6SBua\",\"scope\":\"src-containers-Code-components-Info-styles-module__scope--1-8iE\",\"exists\":\"src-containers-Code-components-Info-styles-module__exists--3VmjJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"src-App-module__container--1cmbG\",\"settings\":\"src-App-module__settings--1nmKj\",\"statusbar\":\"src-App-module__statusbar--3npHX\",\"editor\":\"src-App-module__editor--34Nb6\",\"sidebar\":\"src-App-module__sidebar--3M66T\",\"main\":\"src-App-module__main--1deVu\",\"code\":\"src-App-module__code--3ZpfS\",\"bottom\":\"src-App-module__bottom--1WuIW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"src-containers-Code-components-SettingsMenu-styles-module__container--MUak9\",\"settingsIcon\":\"src-containers-Code-components-SettingsMenu-styles-module__settingsIcon--1G-on\",\"menu\":\"src-containers-Code-components-SettingsMenu-styles-module__menu--Ltlvy\",\"open\":\"src-containers-Code-components-SettingsMenu-styles-module__open--1_VRL\",\"divider\":\"src-containers-Code-components-SettingsMenu-styles-module__divider--dPTSa\",\"disabled\":\"src-containers-Code-components-SettingsMenu-styles-module__disabled--17qzT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"src-components-ui-SidebarItem-styles-module__container--lXls6\",\"active\":\"src-components-ui-SidebarItem-styles-module__active--N5965\",\"warning\":\"src-components-ui-SidebarItem-styles-module__warning--3fvW9\",\"nameContainer\":\"src-components-ui-SidebarItem-styles-module__nameContainer--MuCJ5\",\"name\":\"src-components-ui-SidebarItem-styles-module__name--2knuo\",\"color\":\"src-components-ui-SidebarItem-styles-module__color--1LlRK\",\"input\":\"src-components-ui-SidebarItem-styles-module__input--QbbuG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"src-components-ui-QuickInput-styles-module__container--1Aa5a\",\"inputContainer\":\"src-components-ui-QuickInput-styles-module__inputContainer--2umYE\",\"input\":\"src-components-ui-QuickInput-styles-module__input--1KI_v\",\"optionContainer\":\"src-components-ui-QuickInput-styles-module__optionContainer--15Stj\",\"option\":\"src-components-ui-QuickInput-styles-module__option--wNZOe\",\"focussed\":\"src-components-ui-QuickInput-styles-module__focussed--2dH3h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"outer\":\"src-containers-Code-components-Editor-styles-module__outer--1UYCi\",\"container\":\"src-containers-Code-components-Editor-styles-module__container--VNZe8\",\"code\":\"src-containers-Code-components-Editor-styles-module__code--37_HL\",\"codeWrapper\":\"src-containers-Code-components-Editor-styles-module__codeWrapper--3wuPA\",\"lineNumbers\":\"src-containers-Code-components-Editor-styles-module__lineNumbers--2h937\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"src-containers-Settings-components-ColorPicker-styles-module__container--12gp1\",\"hexValue\":\"src-containers-Settings-components-ColorPicker-styles-module__hexValue--3CP6L\",\"picker\":\"src-containers-Settings-components-ColorPicker-styles-module__picker--bnJQn\",\"input\":\"src-containers-Settings-components-ColorPicker-styles-module__input--3NUnP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"src-containers-Settings-components-ScopesList-styles-module__container--3ihuh\",\"warning\":\"src-containers-Settings-components-ScopesList-styles-module__warning--1nJRm\",\"scope\":\"src-containers-Settings-components-ScopesList-styles-module__scope--qBa_H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"src-components-ui-Panel-styles-module__container--3vp3o\",\"content\":\"src-components-ui-Panel-styles-module__content--k6t2C\",\"toolbar\":\"src-components-ui-Panel-styles-module__toolbar--2ITeY\",\"close\":\"src-components-ui-Panel-styles-module__close--3MMcq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"src-components-ui-Confirm-styles-module__container--2HI1S\",\"content\":\"src-components-ui-Confirm-styles-module__content--1zDtw\",\"buttons\":\"src-components-ui-Confirm-styles-module__buttons--3uFxF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"src-components-ui-Modal-styles-module__container--1EaRg\",\"center\":\"src-components-ui-Modal-styles-module__center--3Yb4Y\",\"overlay\":\"src-components-ui-Modal-styles-module__overlay--3xlyo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"src-containers-Code-components-SettingsMenu-Items-styles-module__container--5EeNM\",\"status\":\"src-containers-Code-components-SettingsMenu-Items-styles-module__status--1nw_0\",\"active\":\"src-containers-Code-components-SettingsMenu-Items-styles-module__active--18XJs\",\"enabled\":\"src-containers-Code-components-SettingsMenu-Items-styles-module__enabled--YD5OL\",\"inactive\":\"src-containers-Code-components-SettingsMenu-Items-styles-module__inactive--3Rb7Q\",\"loading\":\"src-containers-Code-components-SettingsMenu-Items-styles-module__loading--3nIhQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"src-containers-Settings-components-NameInput-styles-module__name--1gvp1\",\"readonly\":\"src-containers-Settings-components-NameInput-styles-module__readonly--SGwZO\",\"editable\":\"src-containers-Settings-components-NameInput-styles-module__editable--2FQvN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"src-containers-Settings-components-Swatches-styles-module__container--2Hm-F\",\"swatchGroup\":\"src-containers-Settings-components-Swatches-styles-module__swatchGroup--1JCNi\",\"swatch\":\"src-containers-Settings-components-Swatches-styles-module__swatch--3rU5e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"src-containers-Sidebar-components-FilterAdd-styles-module__container--1Wqn8\",\"input\":\"src-containers-Sidebar-components-FilterAdd-styles-module__input--5Lwzv\",\"addButton\":\"src-containers-Sidebar-components-FilterAdd-styles-module__addButton--1jJlf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"codeText\":\"src-containers-Code-components-CodeInput-styles-module__codeText--264Ou\",\"textArea\":\"src-containers-Code-components-CodeInput-styles-module__textArea--1s8Rs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"subline\":\"src-containers-Code-components-SubLine-styles-module__subline--1Q-lo\",\"empty\":\"src-containers-Code-components-SubLine-styles-module__empty--3DWOQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"icon\":\"src-containers-Settings-components-FontStyle-styles-module__icon--3eRzC\",\"enabled\":\"src-containers-Settings-components-FontStyle-styles-module__enabled--1Hm9S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rules\":\"src-containers-Sidebar-styles-module__rules--1B94Y\",\"content\":\"src-containers-Sidebar-styles-module__content--1QxK2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"src-containers-StatusBar-styles-module__container--2kClV\",\"c_est_moi\":\"src-containers-StatusBar-styles-module__c_est_moi--2yqZl\"};","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 54;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"src-components-ui-Button-styles-module__button--33mOU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"line\":\"src-containers-Code-components-Line-styles-module__line--BdjKc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"src-containers-Code-components-CodeView-styles-module__container--1ApKT\",\"code\":\"src-containers-Code-components-CodeView-styles-module__code--1GDsG\",\"lineNumbers\":\"src-containers-Code-components-CodeView-styles-module__lineNumbers--yU7cG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"src-components-ui-PanelItem-styles-module__item--l0pOa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"src-containers-StatusBar-components-Item-styles-module__item--3N6sp\"};","import { loadWASM } from 'onigasm';\nimport { Registry } from 'monaco-textmate';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\n\nvar fetchOnigasm = function (url) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var response, buffer;\r\n    return __generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0: return [4 /*yield*/, fetch(url)];\r\n            case 1:\r\n                response = _a.sent();\r\n                return [4 /*yield*/, response.arrayBuffer()];\r\n            case 2:\r\n                buffer = _a.sent();\r\n                return [2 /*return*/, buffer];\r\n        }\r\n    });\r\n}); };\r\nvar initialize = function (onigasmUrl) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var _a;\r\n    return __generator(this, function (_b) {\r\n        switch (_b.label) {\r\n            case 0:\r\n                _a = loadWASM;\r\n                return [4 /*yield*/, fetchOnigasm(onigasmUrl)];\r\n            case 1: return [4 /*yield*/, _a.apply(void 0, [_b.sent()])];\r\n            case 2:\r\n                _b.sent();\r\n                return [2 /*return*/];\r\n        }\r\n    });\r\n}); };\n\nvar _isDescendant = function (query, scope) {\r\n    if (query === scope) {\r\n        return true;\r\n    }\r\n    /**\r\n     * query = meta.tag\r\n     * scope = meta.tag-without-attributes,\r\n     * this should not match, so we affix query with a \".\", so we know\r\n     * it's a correct match\r\n     *\r\n     * i.e.:\r\n     * query = meta.tag\r\n     * scope = meta.tag.tsx\r\n     * this should match\r\n     */\r\n    var affix = query + '.';\r\n    return affix === scope.substr(0, affix.length);\r\n};\r\nvar _createCandidate = function (nodeScopes, query) {\r\n    var _scopes = __spread(nodeScopes);\r\n    var queryScopes = query.split(/ /g);\r\n    var matchIndexes = [];\r\n    var runner = 0;\r\n    var passed = queryScopes.every(function (query) {\r\n        return __spread(_scopes).some(function (scope) {\r\n            var match = _isDescendant(query, scope);\r\n            _scopes.splice(0, 1);\r\n            if (match) {\r\n                matchIndexes.push(runner);\r\n            }\r\n            runner++;\r\n            return match;\r\n        });\r\n    });\r\n    if (passed) {\r\n        return {\r\n            query: query,\r\n            scope: queryScopes.pop(),\r\n            parents: queryScopes,\r\n            matchIndexes: matchIndexes,\r\n        };\r\n    }\r\n    return null;\r\n};\r\nvar _compare = function (a, b) {\r\n    // longer scope wins\r\n    // meta.block.tsx > meta.block\r\n    if (a.scope !== b.scope) {\r\n        return a.scope.length - b.scope.length;\r\n    }\r\n    // scopes are equal, compare parents length\r\n    if (a.parents.length !== b.parents.length) {\r\n        return a.parents.length - b.parents.length;\r\n    }\r\n    for (var i = 0; i < a.parents.length; i++) {\r\n        if (a.parents[i] !== b.parents[i]) {\r\n            return a.parents[i].length - b.parents[i].length;\r\n        }\r\n    }\r\n    return 0;\r\n};\r\nvar scopeMatch = function (nodeScopes, definedScopes) {\r\n    var winner = null;\r\n    var i = 0;\r\n    var length = definedScopes.length;\r\n    for (; i < length; i++) {\r\n        var candidate = _createCandidate(nodeScopes, definedScopes[i]);\r\n        if (!candidate) {\r\n            continue;\r\n        }\r\n        if (!winner) {\r\n            winner = candidate;\r\n            continue;\r\n        }\r\n        var winnerLast = winner.matchIndexes[winner.matchIndexes.length - 1];\r\n        var candidateLast = candidate.matchIndexes[candidate.matchIndexes.length - 1];\r\n        if (candidateLast > winnerLast) {\r\n            winner = candidate;\r\n            continue;\r\n        }\r\n        if (winnerLast === candidateLast) {\r\n            if (_compare(candidate, winner) > 0) {\r\n                winner = candidate;\r\n            }\r\n        }\r\n    }\r\n    return winner;\r\n};\r\nvar match = function (nodeScopes, rules) {\r\n    var _nodeScopes = typeof nodeScopes === 'string' ? [nodeScopes] : nodeScopes;\r\n    var queries = [];\r\n    var i = 0;\r\n    var length = rules.length;\r\n    for (; i < length; i++) {\r\n        queries = __spread(queries, rules[i].scopes);\r\n    }\r\n    var match = scopeMatch(_nodeScopes, queries);\r\n    if (!match) {\r\n        return null;\r\n    }\r\n    var rule = null;\r\n    rules.some(function (_rule) {\r\n        if (_rule.scopes.includes(match.query)) {\r\n            rule = _rule;\r\n            return true;\r\n        }\r\n        return false;\r\n    });\r\n    return rule;\r\n};\n\nvar CodeDocument = /** @class */ (function () {\r\n    function CodeDocument(opts) {\r\n        this._raw = opts.code;\r\n        this._lines = opts.code.split(/[\\n\\r]/g);\r\n    }\r\n    CodeDocument.prototype.getTextAtPosition = function (position) {\r\n        var line = position.line, start = position.start, length = position.length;\r\n        return this._lines[line].substr(start, length);\r\n    };\r\n    CodeDocument.prototype.length = function () {\r\n        return this._raw.length;\r\n    };\r\n    CodeDocument.prototype.getLines = function () {\r\n        return this._lines;\r\n    };\r\n    CodeDocument.prototype.getRaw = function () {\r\n        return this._raw;\r\n    };\r\n    return CodeDocument;\r\n}());\n\nvar TextMateScopesParser = /** @class */ (function () {\r\n    function TextMateScopesParser(opts) {\r\n        var _this = this;\r\n        this._getGrammarDefinition = function (scopeName) { return __awaiter(_this, void 0, void 0, function () {\r\n            var grammar, content, format;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this._getLanguageFile(scopeName)];\r\n                    case 1:\r\n                        grammar = _a.sent();\r\n                        try {\r\n                            content = JSON.parse(grammar);\r\n                            format = 'json';\r\n                        }\r\n                        catch (_e) {\r\n                            content = grammar;\r\n                            format = 'plist';\r\n                        }\r\n                        return [2 /*return*/, {\r\n                                format: format,\r\n                                content: content,\r\n                            }];\r\n                }\r\n            });\r\n        }); };\r\n        this._typeCheck = function (scopeName) {\r\n            var scopeNames = Object.keys(_this._filePaths);\r\n            if (scopeNames.includes(scopeName)) {\r\n                return true;\r\n            }\r\n            return false;\r\n        };\r\n        this._filePaths = opts.filePaths;\r\n        this._registry = new Registry({\r\n            getGrammarDefinition: this._getGrammarDefinition,\r\n        });\r\n    }\r\n    TextMateScopesParser.prototype._getLanguageFile = function (scopeName) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var response, grammar;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, fetch(this._filePaths[scopeName])];\r\n                    case 1:\r\n                        response = _a.sent();\r\n                        if (!response.ok) {\r\n                            throw new Error('Something failed when doing a request to fetch the grammar file.');\r\n                        }\r\n                        return [4 /*yield*/, response.text()];\r\n                    case 2:\r\n                        grammar = _a.sent();\r\n                        return [2 /*return*/, grammar];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    TextMateScopesParser.prototype.loadGrammar = function (scopeName) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var grammar;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!this._typeCheck(scopeName)) {\r\n                            throw new Error(\"\\\"\" + scopeName + \"\\\" grammar is not supported. Please add scopename and path to Options.filePaths.\");\r\n                        }\r\n                        return [4 /*yield*/, this._registry.loadGrammar(scopeName)];\r\n                    case 1:\r\n                        grammar = _a.sent();\r\n                        return [2 /*return*/, grammar];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    TextMateScopesParser.prototype.parse = function (code, scopeName) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var grammar, codeDocument, text, result, ruleStack, i, line, lineTokens, _loop_1, j;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.loadGrammar(scopeName)];\r\n                    case 1:\r\n                        grammar = _a.sent();\r\n                        codeDocument = new CodeDocument({ code: code });\r\n                        text = code.split('\\n');\r\n                        result = {\r\n                            code: codeDocument,\r\n                            tokens: [],\r\n                        };\r\n                        for (i = 0; i < text.length; i++) {\r\n                            line = text[i];\r\n                            lineTokens = grammar.tokenizeLine(line, ruleStack);\r\n                            _loop_1 = function (j) {\r\n                                var token = lineTokens.tokens[j];\r\n                                var node = {\r\n                                    start: token.startIndex,\r\n                                    line: i,\r\n                                    length: token.endIndex - token.startIndex,\r\n                                    scopes: token.scopes.filter(function (e, i) { return token.scopes.indexOf(e) === i; }),\r\n                                };\r\n                                result.tokens.push(node);\r\n                            };\r\n                            for (j = 0; j < lineTokens.tokens.length; j++) {\r\n                                _loop_1(j);\r\n                            }\r\n                            ruleStack = lineTokens.ruleStack;\r\n                        }\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return TextMateScopesParser;\r\n}());\n\nexport { TextMateScopesParser, initialize, match };\n","export enum FontStyle {\n    Bold = 'bold',\n    Italic = 'italic',\n    Underline = 'underline',\n}\n\nexport enum EntityType {\n    SemanticToken,\n    Rule,\n    GeneralScope,\n}\n\nexport const BACKEND_URL = process.env.REACT_APP_BACKEND_URL;\n\nexport const GENERAL_SCOPES = <const>[\n    'button.background',\n    'button.foreground',\n    'button.hoverBackground',\n    'editor.background',\n    'editor.foreground',\n    'editor.selectionBackground',\n    'editor.selectionForeground',\n    'editorGutter.background',\n    'editorLineNumber.foreground',\n    'focusBorder',\n    'foreground',\n    'input.background',\n    'input.border',\n    'input.foreground',\n    'input.placeholderForeground',\n    'list.focusBackground',\n    'list.focusForeground',\n    'list.hoverBackground',\n    'list.hoverForeground',\n    'panel.background',\n    'panel.border',\n    'quickInput.background',\n    'quickInput.foreground',\n    'sideBar.background',\n    'sideBar.border',\n    'sideBar.foreground',\n    'statusBar.background',\n    'statusBar.border',\n    'statusBar.foreground',\n    'statusBarItem.activeBackground',\n    'statusBarItem.hoverBackground',\n];\n\nexport const SEMANTIC_HIGHLIGHTING_TEXTMATE_MAP = <const>{\n    namespace: ['entity.name.namespace', 'entity.name.type.module'],\n\n    type: ['entity.name.type'],\n    'type.defaultLibrary': ['support.type'],\n\n    struct: ['storage.type.struct'],\n\n    class: ['entity.name.type.class'],\n    'class.defaultLibrary': ['support.class'],\n\n    interface: ['entity.name.type.interface'],\n    'interface.defaultLibrary': ['support.class'],\n\n    function: ['entity.name.function'],\n    'function.defaultLibrary': ['support.function'],\n\n    member: ['entity.name.function.member'],\n\n    macro: ['entity.name.other.preprocessor.macro'],\n\n    variable: ['entity.name.variable', 'variable.other.readwrite'],\n    'variable.defaultLibrary': ['support.variable'],\n    'variable.readonly': ['variable.other.constant'],\n    'variable.readonly.defaultLibrary': ['support.constant'],\n\n    parameter: ['variable.parameter'],\n\n    property: ['variable.other.property'],\n    'property.readonly': ['variable.other.constant.property'],\n\n    enum: ['entity.name.type.enum'],\n    enumMember: ['variable.other.enummember'],\n\n    event: ['variable.other.event'],\n};\n","import { StorageManager } from '~/types/storage';\n\nclass StorageService implements StorageManager {\n    public get<T>(key: string): Maybe<T> {\n        const value = localStorage.getItem(key);\n\n        if (!value) {\n            return undefined;\n        }\n\n        return JSON.parse(value);\n    }\n\n    public set(key: string, data: unknown): void {\n        localStorage.setItem(key, JSON.stringify(data));\n    }\n\n    public remove(key: string): void {\n        localStorage.removeItem(key);\n    }\n\n    public keys(): string[] {\n        return Object.keys(localStorage);\n    }\n}\n\nconst storage = new StorageService();\n\nexport default storage;\n","import { TextMateScopesParser } from '@anche/textmate-utilities';\n\nexport const Languages = {\n    'source.ts': 'TypeScript',\n    'source.tsx': 'TypeScript React',\n    'source.js': 'JavaScript',\n    'source.jsx': 'JavaScript React',\n    'source.css': 'CSS',\n    'text.html.basic': 'HTML',\n    'source.json': 'JSON',\n};\n\nconst getUrl = (file: string): string => `${process.env.PUBLIC_URL}/grammar/${file}`;\n\nconst textmateService = new TextMateScopesParser({\n    filePaths: {\n        'source.ts': getUrl('TypeScript.tmLanguage.json'),\n        'source.tsx': getUrl('TypeScriptReact.tmLanguage.json'),\n        'source.js': getUrl('JavaScript.tmLanguage.json'),\n        'source.jsx': getUrl('JavaScriptReact.tmLanguage.json'),\n        'source.css': getUrl('css.tmLanguage.json'),\n        'text.html.basic': getUrl('html.tmLanguage.json'),\n        'source.json': getUrl('JSON.tmLanguage.json'),\n    },\n});\n\nexport default textmateService;\n","const stateKey = (type: 'atom' | 'selector', scope: string, name: string): string =>\n    `${type.toUpperCase()}/${scope}/${name}`;\n\nexport const atomKey = (scope: string, name: string): string => stateKey('atom', scope, name);\nexport const selectorKey = (scope: string, name: string): string =>\n    stateKey('selector', scope, name);\n","import { atom, selector } from 'recoil';\n\nimport { Languages } from '~/services/textmate';\n\nimport { atomKey, selectorKey } from '~/helpers/state';\n\nexport const languageState = atom<keyof typeof Languages>({\n    key: atomKey('Language', 'lang'),\n    default: 'source.tsx',\n});\n\nexport const readibleLanguage = selector({\n    key: selectorKey('Language', 'Processed'),\n    get: ({ get }) => {\n        const language = get(languageState);\n        return Languages[language];\n    },\n});\n\nexport default languageState;\n","import { TextMateParserResult } from '@anche/textmate-utilities';\nimport { atom, selector } from 'recoil';\n\nimport storage from '~/services/storage';\nimport textmateService from '~/services/textmate';\n\nimport { atomKey, selectorKey } from '~/helpers/state';\n\nimport languageState from './language';\n\nconst initCode = `import React from 'react';\nimport main from '~/state/main';\nimport { getAll } from '~/helpers/getAll';\nimport Button from '../../component/Button';\n\nimport './style.css';\n\ninterface Props {\n  title: string;\n  content: string;\n  onClick: (...args: any[]) => void,\n}\n\nconst Viewer: React.FC<Props>  = ({ title, content, onClick }) => {\n  return (\n    <div>\n      <h1>{title}</h1>\n\n      <p>{content}</p>\n\n      <button\n        type=\"button\"\n        onClick={onClick}\n        className=\"button\"\n        >\n          Well, what are you waiting for?\n        </button>\n    </div>\n  );\n}\n\nexport default Viewer;\n`;\n\nconst _rawCode = atom<string>({\n    key: atomKey('Code', 'Raw'),\n    default: initCode,\n});\n\nexport const rawCode = selector<string>({\n    key: selectorKey('Code', 'RawSelector'),\n    get: ({ get }) => {\n        return get(_rawCode);\n    },\n    set: ({ set, get }, input) => {\n        set(_rawCode, input);\n\n        /**\n         * @TODO Replace when Atom Effects is introduced\n         */\n        storage.set(atomKey('Code', 'Raw'), get(_rawCode));\n    },\n});\n\nexport const editCodeState = atom<boolean>({\n    key: atomKey('Code', 'Edit'),\n    default: false,\n});\n\nconst parsedCode = selector<TextMateParserResult>({\n    key: selectorKey('Code', 'Parsed'),\n    get: async ({ get }) => {\n        const code = get(_rawCode);\n        const language = get(languageState);\n        const response = await textmateService.parse(code, language);\n\n        return response;\n    },\n});\n\nexport const selectedSubline = atom<Nullable<string>>({\n    key: atomKey('Code', 'SelectedSubline'),\n    default: '',\n});\n\nexport default parsedCode;\n","import { atom, DefaultValue, selector } from 'recoil';\n\nimport storage from '~/services/storage';\n\nimport { atomKey, selectorKey } from '~/helpers/state';\n\ntype Theme = 'dark' | 'light';\n\nconst _themeStyle = atom<Theme>({\n    key: atomKey('Theme', '_'),\n    default: 'dark',\n});\n\nexport const themeStyle = selector<Theme>({\n    key: selectorKey('Theme', 'Style'),\n    get: ({ get }) => {\n        return get(_themeStyle);\n    },\n    set: ({ set }, _style) => {\n        let style = _style;\n        if (_style instanceof DefaultValue) {\n            style = 'dark';\n        }\n        storage.set(atomKey('Theme', '_'), style);\n        set(_themeStyle, style);\n    },\n});\n","import { SemanticToken as ExternalSemanticToken } from '@anche/semantic-tokens-utilities';\nimport { groupBy } from 'lodash';\nimport { atom, selector, useRecoilCallback, useRecoilValue } from 'recoil';\n\nimport { rawCode } from '~/state/code';\n\nimport API from '~/services/api';\n\nimport { EntityType } from '~/constants';\n\nimport { atomKey, selectorKey } from '~/helpers/state';\nimport factory from '~/helpers/tokenStateFactory';\n\nimport { SemanticToken } from '~/types';\n\nexport enum States {\n    Active,\n    Enabled,\n    Inactive,\n    Loading,\n}\n\nconst semanticState = atom<States>({\n    key: atomKey('semanticTokens', '_State'),\n    // default: States.Inactive,\n    default: States.Active,\n});\n\nexport const useSemanticHighlighting = (): [States, (nextState?: States) => void] => {\n    const state = useRecoilValue(semanticState);\n    const toggleSemanticHighlighting = useRecoilCallback(\n        ({ set }) => (nextState?: States): void => {\n            if (state === States.Loading) {\n                return;\n            }\n\n            if (\n                nextState === States.Inactive ||\n                (nextState !== States.Active && state !== States.Inactive)\n            ) {\n                set(semanticState, States.Inactive);\n                return;\n            }\n\n            set(semanticState, States.Loading);\n\n            API.ping()\n                .then(() => {\n                    set(semanticState, States.Active);\n                })\n                .catch(() => {\n                    set(semanticState, States.Enabled);\n                });\n        },\n    );\n\n    return [state, toggleSemanticHighlighting];\n};\n\nexport const semanticTokens = selector({\n    key: selectorKey('semanticTokens', 'Tokens'),\n    get: async ({ get }) => {\n        const state = get(semanticState);\n\n        if (state !== States.Active) {\n            return;\n        }\n\n        const code = get(rawCode);\n\n        try {\n            const result = await API.semanticTokensState({\n                code,\n                language: 'tsx',\n            });\n\n            const _grouped = groupBy(result?.tokens, 'line');\n\n            const grouped: Record<number, Record<number, ExternalSemanticToken[]>> = {};\n\n            Object.keys(_grouped).forEach(lineNumber => {\n                grouped[lineNumber] = groupBy(_grouped[lineNumber], 'start');\n            });\n\n            return grouped;\n        } catch (e) {\n            return undefined;\n        }\n    },\n});\n\nconst {\n    TREE_ID: SEMANTIC_STATE_ID,\n    getEntities: semanticTokensState,\n    getEntity: semanticTokenState,\n    entityIds: semanticTokenIds,\n} = factory({\n    state: 'semantic',\n    default: <SemanticToken>{\n        id: '',\n        scope: '',\n        settings: {\n            foreground: '#000000',\n            fontStyle: [],\n        },\n        __meta: {\n            type: EntityType.SemanticToken,\n        },\n    },\n});\n\nexport { SEMANTIC_STATE_ID, semanticTokensState, semanticTokenState, semanticTokenIds };\n","import { GENERAL_SCOPES } from '~/constants';\n\ntype Scopes = typeof GENERAL_SCOPES[number];\n\ntype Defaults = {\n    [key in Scopes]: {\n        [key in 'light' | 'dark']: string;\n    };\n};\n\nconst colors = (light: string, dark: string): { light: string; dark: string } => ({ light, dark });\n\nconst generalScopesDefault: Defaults = {\n    'button.background': colors('#e36d6d', '#e36d6d'),\n    'button.foreground': colors('#333333', '#333333'),\n    'button.hoverBackground': colors('#b74e4e', '#b74e4e'),\n    'editor.background': colors('#ffffff', '#1c1c1c'),\n    'editor.foreground': colors('#333333', '#ffffff'),\n    'editor.selectionBackground': colors('#f2d0a1', '#efafaf'),\n    'editor.selectionForeground': colors('#333333', '#ffffff'),\n    'editorGutter.background': colors('ffffff', '#1c1c1c'),\n    'editorLineNumber.foreground': colors('#cccccc', '#585858'),\n    focusBorder: colors('#e8e8e8', '#171717'),\n    foreground: colors('#333333', '#eeeeee'),\n    'input.background': colors('#ffffff', '#2c2c2b'),\n    'input.border': colors('#d9d9d9', '#141414'),\n    'input.foreground': colors('#333333', '#ffffff'),\n    'input.placeholderForeground': colors('#999999', '#737373'),\n    'list.focusBackground': colors('#d1d1d1', '#525252'),\n    'list.focusForeground': colors('#333333', '#cfcfcf'),\n    'list.hoverBackground': colors('#5c5c5c', '#525252'),\n    'list.hoverForeground': colors('#333333', '#eeeeee'),\n    'panel.background': colors('#ffffff', '#2a2828'),\n    'panel.border': colors('#d9d9d9', '#141414'),\n    'quickInput.background': colors('#f5f5f5', '#242424'),\n    'quickInput.foreground': colors('#545454', '#ffffff'),\n    'sideBar.background': colors('#ffffff', '#111111'),\n    'sideBar.border': colors('#d9d9d9', '#121212'),\n    'sideBar.foreground': colors('#333333', '#f9f9f9'),\n    'statusBar.background': colors('#242424', '#1a1a1a'),\n    'statusBar.border': colors('#878787', '#000000'),\n    'statusBar.foreground': colors('#ffffff', '#eeeeee'),\n    'statusBarItem.activeBackground': colors('#777777', '#333333'),\n    'statusBarItem.hoverBackground': colors('#313131', '#666666'),\n};\n\nexport default generalScopesDefault;\n","import {\n    atom,\n    atomFamily,\n    DefaultValue,\n    RecoilValueReadOnly,\n    selector,\n    selectorFamily,\n} from 'recoil';\n\nimport storage from '~/services/storage';\n\nimport { EntityType } from '~/constants';\n\nimport { atomKey, selectorKey } from '~/helpers/state';\n\nimport { Base } from '~/types';\n\ninterface Options<T extends Base<EntityType>> {\n    state: string;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    default: T | ((param: any) => RecoilValueReadOnly<T>);\n}\n\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nconst factory = <T extends Base>(opts: Options<T>) => {\n    const { state, default: _default } = opts;\n\n    const TREE_ID = state.toUpperCase();\n\n    /**\n     * ids\n     */\n    const _idState = atom<string[]>({\n        key: atomKey(TREE_ID, 'Ids'),\n        default: [],\n    });\n\n    const entityIds = selector<string[]>({\n        key: selectorKey(TREE_ID, 'Ids_SEL'),\n        get: ({ get }) => get(_idState),\n        set: ({ set }, input) => {\n            set(_idState, input || []);\n            storage.set(atomKey(TREE_ID, 'Ids'), input || []);\n        },\n    });\n\n    /**\n     * State\n     */\n    const _state = atomFamily<T, string>({\n        key: atomKey(TREE_ID, 'State'),\n        default: _default,\n    });\n\n    const getEntities = selector<T[]>({\n        key: selectorKey(TREE_ID, 'All'),\n        get: ({ get }) => {\n            const idArr = get(entityIds);\n\n            const state = idArr.map(id => get(getEntity(id)));\n\n            return state;\n        },\n    });\n\n    const getEntity = selectorFamily<T, Maybe<string>>({\n        key: selectorKey(TREE_ID, 'Entity'),\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        get: id => ({ get }): Maybe<T> => {\n            if (!id) {\n                return undefined;\n            }\n\n            const state = get(_state(id));\n            return state;\n        },\n        set: id => ({ set, get }, input): void => {\n            if (!id) {\n                return;\n            }\n\n            if (input instanceof DefaultValue) {\n                set(_state(id), input);\n                return;\n            }\n\n            const entity = _state(id);\n\n            const idArr = get(entityIds);\n\n            // new entity\n            if (!idArr.includes(id)) {\n                set(entityIds, [...idArr, id]);\n            }\n\n            // delete entity\n            if (input?.__meta?.state === 'deleted') {\n                set(\n                    entityIds,\n                    idArr.filter(_id => _id !== id),\n                );\n\n                /**\n                 * @TODO Replace when Atom Effects is introduced\n                 */\n                storage.remove(atomKey(TREE_ID, `id__\"${id}\"`));\n                return;\n            }\n\n            set(entity, {\n                ...input,\n                id,\n                __meta: {\n                    touched: true,\n                    ...input.__meta,\n                },\n            });\n\n            /**\n             * @TODO Replace when Atom Effects is introduced\n             */\n            storage.set(atomKey(TREE_ID, `id__\"${id}\"`), get(entity));\n        },\n    });\n\n    return {\n        TREE_ID,\n        entityIds,\n        getEntities,\n        getEntity,\n    };\n};\n\nexport default factory;\n","import { selectorFamily } from 'recoil';\n\nimport { themeStyle } from '~/state/theme';\n\nimport { EntityType } from '~/constants';\n\nimport generalScopesDefault from '~/helpers/generalScopesDefault';\nimport { selectorKey } from '~/helpers/state';\nimport factory from '~/helpers/tokenStateFactory';\n\nimport { GeneralScope } from '~/types';\n\nconst getScopeDefault = (scope: string, style: 'light' | 'dark'): { id: string; color: string } => {\n    const _scope = generalScopesDefault[scope];\n    return {\n        id: scope,\n        color: _scope[style] || '',\n    };\n};\n\nconst _default = selectorFamily({\n    key: selectorKey('GeneralScopes', 'Family/Default'),\n    get: param => ({ get }): GeneralScope => {\n        const style = get(themeStyle);\n\n        const defaults = getScopeDefault(param as string, style);\n        return {\n            id: defaults.id,\n            scope: defaults.id,\n            settings: {\n                foreground: defaults.color,\n            },\n            __meta: {\n                type: EntityType.GeneralScope,\n            },\n        };\n    },\n});\n\nconst {\n    TREE_ID: GENERAL_SCOPE_STATE_ID,\n    getEntities: generalScopesState,\n    getEntity: generalScopeState,\n} = factory({\n    state: 'GeneralScopes',\n    default: _default,\n});\n\nexport { GENERAL_SCOPE_STATE_ID, generalScopesState, generalScopeState };\n","import { EntityType } from '~/constants';\n\nimport factory from '~/helpers/tokenStateFactory';\n\nimport { Rule } from '~/types';\n\nconst {\n    TREE_ID: RULES_STATE_ID,\n    getEntities: rulesState,\n    getEntity: ruleState,\n    entityIds: ruleIds,\n} = factory({\n    state: 'rules',\n    default: <Rule>{\n        id: '',\n        name: '',\n        scope: <string[]>[],\n        settings: {\n            foreground: '#000000',\n            fontStyle: [],\n        },\n        __meta: {\n            type: EntityType.Rule,\n        },\n    },\n});\n\nexport { RULES_STATE_ID, rulesState, ruleState, ruleIds };\n","import { SemanticTokensParserResult } from '@anche/semantic-tokens-utilities';\n\nimport { BACKEND_URL } from '~/constants';\n\nclass APIService {\n    private _baseUrl = BACKEND_URL;\n    private _active = false;\n\n    constructor() {\n        this.ping();\n    }\n\n    public async ping(): Promise<boolean> {\n        const res = await this._fetch('/ping');\n\n        const json = await res.json();\n\n        if (json?.success) {\n            this._active = true;\n        } else {\n            this._active = false;\n        }\n\n        return this._active;\n    }\n\n    public isBackendActive(): boolean {\n        return this._active;\n    }\n\n    public get<T>(endpoint: string, options?: RequestInit): Promise<T | undefined> {\n        return this._request(endpoint, {\n            ...options,\n            method: 'get',\n        });\n    }\n\n    public post<T>(endpoint: string, options?: RequestInit): Promise<T | undefined> {\n        return this._request(endpoint, {\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            method: 'post',\n        });\n    }\n\n    private _fetch(endpoint: string, options: RequestInit = {}): ReturnType<typeof window.fetch> {\n        return window.fetch(`${this._baseUrl}${endpoint}`, {\n            ...options,\n        });\n    }\n\n    private async _request<T>(endpoint: string, options: RequestInit = {}): Promise<T | undefined> {\n        if (!this._isActive()) {\n            throw new Error('Backend is not available.');\n        }\n\n        const response = await this._fetch(endpoint, options);\n\n        const json = await response.json();\n        return json;\n    }\n\n    private _isActive(): boolean {\n        if (!this._active) {\n            console.warn('Backend is not active. Start the server and refresh the page.');\n        }\n\n        return this._active;\n    }\n}\n\nconst api = new APIService();\n\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\n\nconst API = {\n    semanticTokensState: (body: { code: string; language: 'tsx' | 'ts' }) =>\n        api.post<SemanticTokensParserResult>('/sh', {\n            body: JSON.stringify(body),\n        }),\n\n    ping: () => api.get<boolean>('/ping'),\n};\n\n/* eslint-enable @typescript-eslint/explicit-function-return-type */\nexport default API;\n","import React from 'react';\nimport cx from 'classnames';\nimport { useRecoilState } from 'recoil';\n\nimport { editCodeState, rawCode } from '~/state/code';\n\nimport css from './styles.module.scss';\n\nconst CodeInput: React.FC = () => {\n    const [_rawCode, setRawCode] = useRecoilState(rawCode);\n    const [isEditing] = useRecoilState(editCodeState);\n\n    const textareaRef = React.useRef<HTMLTextAreaElement>(null);\n\n    React.useEffect(() => {\n        if (textareaRef) {\n            textareaRef.current?.select();\n        }\n    }, [isEditing]);\n\n    return (\n        <textarea\n            ref={textareaRef}\n            spellCheck={false}\n            className={cx(css.textArea, css.codeText)}\n            onChange={(evt): void => setRawCode(evt.target.value)}\n            value={_rawCode}\n        />\n    );\n};\n\nexport default CodeInput;\n","import { atom, selector } from 'recoil';\n\nimport { entitySettingsState } from '~/state/ui';\n\nimport { atomKey, selectorKey } from '~/helpers/state';\n\nimport { EntityType } from './../constants/index';\n\nconst _mode = atom<EntityType>({\n    key: atomKey('Mode', '_'),\n    default: EntityType.Rule,\n});\n\nconst mode = selector<EntityType>({\n    key: selectorKey('Mode', 'Value'),\n    get: ({ get }) => get(_mode),\n    set: ({ set }, newMode) => {\n        set(entitySettingsState, undefined);\n\n        set(_mode, newMode);\n    },\n});\n\nexport default mode;\n","import { atom, DefaultValue, selector } from 'recoil';\n\nimport mode from '~/state/mode';\n\nimport { atomKey, selectorKey } from '~/helpers/state';\n\nimport { Base } from '~/types';\n\nconst _entitySettingsState = atom<Base | undefined>({\n    key: atomKey('Settings', 'Entity'),\n    default: undefined,\n});\n\nexport const entitySettingsState = selector<Base | undefined>({\n    key: selectorKey('Settings', 'Entity'),\n    get: ({ get }) => get(_entitySettingsState),\n    set: ({ set }, input) => {\n        if (!input || input instanceof DefaultValue) {\n            set(_entitySettingsState, undefined);\n            return;\n        }\n\n        set(mode, input.__meta.type);\n\n        set(_entitySettingsState, input);\n    },\n});\n","import React from 'react';\nimport cx from 'classnames';\n\nimport css from './styles.module.scss';\n\ninterface Props {\n    children: React.ReactNode;\n    onClick: (event?: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n    className?: string;\n}\n\nconst Button: React.FC<Props> = ({ children, onClick, className }) => {\n    return (\n        <button type=\"button\" className={cx(css.button, className)} onClick={onClick}>\n            {children}\n        </button>\n    );\n};\n\nexport default Button;\n","import React from 'react';\n\nimport Button from '~/components/ui/Button';\n\nimport css from './styles.module.scss';\n\ninterface Props {\n    onConfirm: () => void;\n    onReject: () => void;\n}\n\nconst Confirm: React.FC<Props> = ({ onConfirm, onReject, children }) => {\n    return (\n        <div className={css.container}>\n            <div className={css.content}>{children}</div>\n            <div className={css.buttons}>\n                <Button onClick={onConfirm}>Yes</Button>\n                <Button onClick={onReject}>No</Button>\n            </div>\n        </div>\n    );\n};\n\nexport default Confirm;\n","import React from 'react';\n\nconst useOutsideClick = (\n    elem: React.RefObject<HTMLElement>,\n    callback: (isOutside: boolean) => void,\n): void => {\n    const clickListener = React.useCallback(\n        (event: MouseEvent) => {\n            const target = event.target as Node;\n            if (!elem.current?.contains(target)) {\n                callback(true);\n                return;\n            }\n\n            callback(false);\n        },\n        [callback, elem],\n    );\n\n    React.useEffect(() => {\n        document.addEventListener('click', clickListener);\n\n        return (): void => {\n            document.removeEventListener('click', clickListener);\n        };\n    }, [clickListener]);\n};\n\nexport default useOutsideClick;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport cx from 'classnames';\n\nimport { createDialogElement, dialogRootElement } from '~/services/dialog';\n\nimport useOutsideClick from '~/hooks/useOutsideClick';\n\nimport css from './styles.module.scss';\n\ninterface Props {\n    onClose: () => void;\n    closeOnOutsideClick?: boolean;\n    position?: 'top' | 'center';\n    overlay?: boolean;\n}\n\nexport const _Modal: React.FC<Props> = ({\n    children,\n    onClose,\n    closeOnOutsideClick,\n    position = 'top',\n    overlay,\n}) => {\n    const ref = React.useRef<HTMLDivElement>(null);\n\n    useOutsideClick(ref, (isOutside: boolean) => {\n        if (isOutside && closeOnOutsideClick) {\n            onClose();\n        }\n    });\n\n    return (\n        <>\n            <div ref={ref} className={cx(css.container, css[position])}>\n                {children}\n            </div>\n            {overlay && <div className={css.overlay} />}\n        </>\n    );\n};\n\nconst Modal: React.FC<Props & { target?: HTMLDivElement }> = ({\n    children,\n    target = createDialogElement(),\n    ...props\n}) => {\n    React.useEffect(() => {\n        dialogRootElement?.appendChild(target);\n        return (): void => {\n            dialogRootElement?.removeChild(target);\n        };\n    }, [target]);\n\n    return ReactDOM.createPortal(<_Modal {...props}>{children}</_Modal>, target);\n};\n\nexport default Modal;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { uniqueId } from 'lodash';\n\nimport Confirm from '~/components/ui/Confirm';\nimport Modal from '~/components/ui/Modal';\n\ntype ModalProps = React.ComponentProps<typeof Modal>;\n\nexport const dialogRootElement = document.querySelector('#modal');\n\nexport const createDialogElement = (): HTMLDivElement => {\n    const id = uniqueId();\n    const dialog = document.createElement('div');\n    dialog.setAttribute('id', `dialog__${id}`);\n    dialog.setAttribute('data-dialog-id', id);\n\n    return dialog;\n};\n\nconst _unmountWrap = (elem: HTMLDivElement, callback?: () => void) => (): void => {\n    callback && callback();\n    ReactDOM.unmountComponentAtNode(elem);\n    dialogRootElement?.removeChild(elem);\n};\n\nexport const confirm = (_content?: React.ReactNode): Promise<void> => {\n    const elem = createDialogElement();\n    const props: ModalProps = {\n        onClose: _unmountWrap(elem),\n        closeOnOutsideClick: true,\n        overlay: true,\n        position: 'center',\n    };\n\n    return new Promise((resolve, reject) => {\n        const content = (\n            <Modal {...props}>\n                <Confirm\n                    onConfirm={_unmountWrap(elem, resolve)}\n                    onReject={_unmountWrap(elem, reject)}\n                >\n                    {_content || 'Are you sure?'}\n                </Confirm>\n            </Modal>\n        );\n\n        ReactDOM.render(content, elem);\n        dialogRootElement?.appendChild(elem);\n    });\n};\n","import { uniqueId } from 'lodash';\n\nimport { EntityType } from '~/constants';\n\nimport { Rule } from '~/types';\n\nconst createName = (input?: Partial<Rule>): string => {\n    if (!input) {\n        return '';\n    }\n\n    if (input.name) {\n        return input.name;\n    }\n\n    if (typeof input.scope === 'string') {\n        return input.scope;\n    }\n\n    if (typeof input.scope === 'object' && input.scope.length) {\n        return input.scope[0];\n    }\n\n    return '';\n};\n\ninterface Options {\n    existingIds: string[];\n    filterScope?: boolean;\n}\n\nconst createRule = (input: Partial<Rule>, options: Options): Rule => {\n    const { existingIds, filterScope = false } = options;\n\n    const filteredScopes = !filterScope\n        ? input?.scope || []\n        : (input?.scope || []).map(scope => {\n              const splitted = scope.split('.');\n              // remove extension from scope to support more language\n              // otherwise theme will only work for this language\n              splitted.pop();\n              return splitted.join('.');\n          });\n\n    let id = uniqueId();\n\n    while (existingIds.includes(id)) {\n        id = uniqueId();\n    }\n\n    const rule: Rule = {\n        id,\n        name: createName(input),\n        scope: filteredScopes,\n        settings: {\n            foreground: input?.settings?.foreground || '#a0988a',\n            fontStyle: input?.settings?.fontStyle || [],\n        },\n        __meta: {\n            type: EntityType.Rule,\n        },\n    };\n\n    return rule;\n};\n\nexport default createRule;\n","import { createToken } from '@anche/semantic-tokens-utilities';\nimport { uniqueId } from 'lodash';\n\nimport { EntityType } from '~/constants';\n\nimport { SemanticToken } from '~/types';\n\ninterface Options {\n    existingIds: string[];\n}\n\nconst createSemanticToken = (\n    input: Partial<SemanticToken>,\n    options: Options,\n): SemanticToken | undefined => {\n    if (!input.scope) {\n        throw new Error(\"Can't create token without a scope\");\n    }\n\n    // check if the scope is valid using the registry\n    const _token = createToken(input.scope);\n\n    const { existingIds } = options;\n\n    let id = uniqueId();\n\n    while (existingIds.includes(id)) {\n        id = uniqueId();\n    }\n\n    const token: SemanticToken = {\n        id,\n        scope: input.scope,\n        settings: {\n            foreground: input?.settings?.foreground || '#a0988a',\n            fontStyle: input?.settings?.fontStyle || [],\n        },\n        __meta: {\n            type: EntityType.SemanticToken,\n        },\n    };\n\n    return token;\n};\n\nexport default createSemanticToken;\n","import { useRecoilCallback } from 'recoil';\n\nimport { ruleIds, ruleState } from '~/state/rules';\nimport { semanticTokenIds, semanticTokenState } from '~/state/semanticTokens';\n\nimport { confirm } from '~/services/dialog';\n\nimport { EntityType } from '~/constants';\n\nimport createRule from '~/model/rule';\nimport createSemanticToken from '~/model/semanticToken';\n\nimport { Rule, SemanticToken } from '~/types';\n\nconst useAddEntity = () => {\n    const addEntity = useRecoilCallback(\n        ({ set, snapshot }) => async <T>({\n            input,\n            filterScope = false,\n            type,\n        }): Promise<T | undefined> => {\n            let entity;\n            if (type === EntityType.Rule) {\n                const existingIds = await snapshot.getPromise(ruleIds);\n                entity = createRule(<Partial<Rule>>input, {\n                    existingIds,\n                    filterScope: filterScope,\n                });\n\n                set(ruleState(entity.id), entity);\n            }\n\n            if (type === EntityType.SemanticToken) {\n                const existingIds = await snapshot.getPromise(semanticTokenIds);\n                let entity;\n                try {\n                    entity = createSemanticToken(<Partial<SemanticToken>>input, {\n                        existingIds,\n                    });\n                } catch (_e) {\n                    confirm(_e.message);\n                    return;\n                }\n\n                set(semanticTokenState(entity.id), entity);\n            }\n\n            return entity;\n        },\n        [],\n    );\n\n    return addEntity;\n};\n\nexport default useAddEntity;\n","import { useRecoilCallback } from 'recoil';\n\nimport { entitySettingsState } from '~/state/ui';\n\nimport { Base } from '~/types';\n\nconst useViewEntity = (): (<T extends Base>(input?: T) => void) => {\n    const viewEntity = useRecoilCallback(\n        ({ set }) => <T extends Base>(input?: T): void => {\n            if (input) {\n                set(entitySettingsState, input);\n                return;\n            }\n\n            set(entitySettingsState, undefined);\n        },\n        [],\n    );\n\n    return viewEntity;\n};\n\nexport default useViewEntity;\n","import { match } from '@anche/textmate-utilities';\nimport { atom, selector } from 'recoil';\n\nimport mode from '~/state/mode';\nimport { RULES_STATE_ID, rulesState } from '~/state/rules';\n\nimport { selectorKey } from '~/helpers/state';\n\nimport { atomKey } from './../helpers/state';\nimport { entitySettingsState } from './../state/ui';\n\nconst activeScope = atom<string>({\n    key: atomKey(RULES_STATE_ID, 'ActiveScope'),\n    default: '',\n});\n\nexport const activateRuleByScope = selector<string>({\n    key: selectorKey(RULES_STATE_ID, 'ActivateRuleByScope'),\n    get: ({ get }) => get(activeScope),\n    set: ({ get, set }, input) => {\n        const scope = input as string;\n\n        set(activeScope, scope);\n        const rules = get(rulesState);\n\n        const rule = match(\n            scope,\n            rules.map(r => ({ rule: r, scopes: r.scope })),\n        );\n\n        if (rule) {\n            set(mode, 'rules');\n            set(entitySettingsState, rule.rule);\n        }\n    },\n});\n","import React from 'react';\nimport { createToken, matcher } from '@anche/semantic-tokens-utilities';\nimport { match } from '@anche/textmate-utilities';\nimport cx from 'classnames';\nimport {\n    atom,\n    DefaultValue,\n    selector,\n    useRecoilState,\n    useRecoilValue,\n    useSetRecoilState,\n} from 'recoil';\n\nimport { rulesState, ruleState } from '~/state/rules';\nimport { semanticTokensState } from '~/state/semanticTokens';\nimport { entitySettingsState } from '~/state/ui';\n\nimport { sublineSelected } from '~/containers/Code/components/CodeView';\n\nimport useAddEntity from '~/hooks/useAddEntity';\nimport useViewEntity from '~/hooks/useViewEntity';\n\nimport { EntityType } from '~/constants';\n\nimport { atomKey, selectorKey } from '~/helpers/state';\n\nimport { SemanticToken } from '~/types';\n\nimport css from './styles.module.scss';\n\nimport { activateRuleByScope } from '~/selectors/activateRule';\n\nexport const _textmateScopesState = atom<string[]>({\n    key: atomKey('Info', 'TextMateScopes'),\n    default: [],\n});\n\nexport const _semanticTokenState = atom<string>({\n    key: atomKey('Info', 'SemanticToken'),\n    default: '',\n});\n\ninterface InfoState {\n    selected?: string;\n    textmateScopes: string[];\n    semanticToken: string;\n}\n\nexport const infoState = selector<InfoState>({\n    key: selectorKey('Info', 'Scopes'),\n    get: ({ get }) => {\n        const textmateScopes = get(_textmateScopesState);\n        const semanticToken = get(_semanticTokenState);\n        const selected = get(sublineSelected);\n\n        return {\n            selected,\n            textmateScopes,\n            semanticToken,\n        };\n    },\n    set: ({ set, get, reset }, input) => {\n        if (input instanceof DefaultValue) {\n            set(_textmateScopesState, []);\n            return;\n        }\n\n        const selected = get(sublineSelected);\n\n        if (selected && !input.selected) {\n            return;\n        }\n\n        if (selected === input.selected) {\n            // deselect\n            reset(sublineSelected);\n            reset(_textmateScopesState);\n            return;\n        }\n\n        set(sublineSelected, input.selected || '');\n        set(_textmateScopesState, input.textmateScopes);\n        set(_semanticTokenState, input.semanticToken);\n    },\n});\n\nconst Info: React.FC = () => {\n    const definedRules = useRecoilValue(rulesState);\n    const definedTokens = useRecoilValue(semanticTokensState);\n    const viewEntity = useViewEntity();\n    const { textmateScopes, semanticToken } = useRecoilValue(infoState);\n    const activateRule = useSetRecoilState(activateRuleByScope);\n    const input = useRecoilValue(entitySettingsState);\n\n    const [activeRule, updateRule] = useRecoilState(ruleState(input?.id));\n\n    const addEntity = useAddEntity();\n\n    const onClickToken = async (token: string): Promise<void> => {\n        const _tokens = definedTokens.map(_token => ({\n            ..._token,\n            ...createToken(_token.scope),\n        }));\n        const semanticToken = matcher.matchToken(token, _tokens);\n\n        if (!semanticToken?.token) {\n            const input = {\n                scope: token,\n            };\n\n            const entity = await addEntity<SemanticToken>({\n                input,\n                filterScope: true,\n                type: EntityType.SemanticToken,\n            });\n\n            console.log('semantic token added', entity);\n            viewEntity(entity);\n        }\n    };\n\n    const onClickScope = (scope: string): void => {\n        const rule = match(\n            scope,\n            definedRules.map(r => ({ rule: r, scopes: r.scope })),\n        );\n\n        if (rule) {\n            activateRule(scope);\n            return;\n        }\n\n        if (activeRule) {\n            // there's a rule active in editing view\n            // add this scope to that rule\n            const regex = new RegExp(`^${scope}`);\n\n            if (activeRule.scope.some(_scope => regex.test(_scope))) {\n                return;\n            }\n\n            const splitted = scope.split('.');\n            // remove extension from scope to support more language\n            // otherwise theme will only work for this language\n            splitted.pop();\n            const formattedScope = splitted.join('.');\n\n            updateRule({\n                ...activeRule,\n                scope: [formattedScope, ...activeRule.scope],\n            });\n\n            return;\n        }\n\n        const input = {\n            scope: [scope],\n        };\n\n        addEntity({ input, filterScope: true, type: EntityType.Rule });\n    };\n\n    return (\n        <div className={css.info}>\n            {semanticToken && (\n                <>\n                    <p className={css.header}>semantic token</p>\n                    <span\n                        className={cx(css.scope, { [css.exists]: false })}\n                        onClick={() => onClickToken(semanticToken)}\n                    >\n                        {semanticToken}\n                    </span>\n                </>\n            )}\n            {!!textmateScopes.length && (\n                <>\n                    <p className={css.header}>textmate scopes</p>\n                    {[...textmateScopes].reverse().map((scope, i) => {\n                        const exist = !!match(\n                            scope,\n                            definedRules.map(r => ({ rule: r, scopes: r.scope })),\n                        );\n                        return (\n                            <span\n                                className={cx(css.scope, { [css.exists]: exist })}\n                                onClick={(): void => onClickScope(scope)}\n                                key={`${scope}-${i}`}\n                            >\n                                {scope}\n                            </span>\n                        );\n                    })}\n                </>\n            )}\n        </div>\n    );\n};\n\nexport default Info;\n","import React from 'react';\n\nimport css from './styles.module.scss';\n\ninterface Props {\n    lineNumber: number;\n    children: React.ReactNode;\n}\n\nconst Line: React.FC<Props> = ({ lineNumber, children }) => (\n    <span className={`${css.line} line-${lineNumber}`}>{children}</span>\n);\n\nexport default React.memo(Line);\n","import chroma from 'chroma-js';\n\nconst getContrastColor = (color: string): '#000000' | '#ffffff' => {\n    return chroma.contrast(color || 'white', 'black') > 4.5 ? '#000000' : '#ffffff';\n};\n\nexport default getContrastColor;\n","import React from 'react';\nimport {\n    createTokenString,\n    SemanticToken as ExternalSemanticToken,\n} from '@anche/semantic-tokens-utilities';\nimport cx from 'classnames';\nimport { selectorFamily, useRecoilValue } from 'recoil';\n\nimport { generalScopeState } from '~/state/generalScopes';\nimport { ruleState } from '~/state/rules';\nimport { semanticTokenState } from '~/state/semanticTokens';\n\nimport { EntityType, FontStyle } from '~/constants';\n\nimport getContrastColor from '~/helpers/getContrastColor';\n\nimport { GeneralScope, Rule, SemanticToken } from '~/types';\n\nimport css from './styles.module.scss';\n\nexport type SubLineCallback = (args: {\n    textmateScopes: string[];\n    semanticToken: string;\n    id?: string;\n    entity?: Rule | SemanticToken;\n}) => void;\n\ntype Props = {\n    scopes: string[];\n    id: string;\n    selected: boolean;\n    onClick: SubLineCallback;\n    onHover: SubLineCallback;\n    semanticToken?: ExternalSemanticToken[];\n    children: string;\n    semanticTokenStateId: Maybe<string>;\n    ruleStateId: Maybe<string>;\n};\n\nconst getClass = (empty?: boolean): string =>\n    cx(css.subline, {\n        [css.empty]: empty,\n    });\n\nconst entitySelector = selectorFamily<\n    SemanticToken | Rule,\n    { id: Maybe<string>; type: EntityType }\n>({\n    key: 'ENTITY_SELECTOR',\n    get: ({ id, type }: { id: Maybe<string>; type: EntityType }) => ({\n        get,\n    }): SemanticToken | Rule => {\n        if (type === EntityType.SemanticToken) {\n            return get(semanticTokenState(id));\n        }\n\n        return get(ruleState(id || ''));\n    },\n});\n\nconst SubLine: React.FC<Props> = ({\n    scopes,\n    selected,\n    onClick,\n    onHover,\n    id,\n    children,\n    semanticTokenStateId,\n    semanticToken,\n    ruleStateId,\n}) => {\n    const entity = useRecoilValue(\n        entitySelector({\n            id: semanticTokenStateId || ruleStateId,\n            type: semanticTokenStateId ? EntityType.SemanticToken : EntityType.Rule,\n        }),\n    );\n\n    const editorBackground = useRecoilValue(generalScopeState('editor.background')) as GeneralScope;\n\n    const empty = !children.trim();\n    const semanticTokenStr = semanticToken ? createTokenString(semanticToken[0]) : '';\n\n    const style: React.CSSProperties = {\n        color: entity?.settings.foreground,\n        fontWeight: entity?.settings.fontStyle?.includes(FontStyle.Bold) ? 'bold' : 'normal',\n        fontStyle: entity?.settings.fontStyle?.includes(FontStyle.Italic) ? 'italic' : 'normal',\n        textDecoration: entity?.settings.fontStyle?.includes(FontStyle.Underline)\n            ? 'underline'\n            : 'none',\n        ...(selected\n            ? {\n                  backgroundColor: `${getContrastColor(editorBackground.settings.foreground)}20`,\n              }\n            : {}),\n    };\n\n    return (\n        <span\n            className={cx(getClass(empty))}\n            style={style}\n            {...(!empty\n                ? {\n                      onClick: (): void =>\n                          onClick({\n                              textmateScopes: scopes,\n                              entity,\n                              id,\n                              semanticToken: semanticTokenStr,\n                          }),\n                      onMouseEnter: (): void =>\n                          onHover({\n                              textmateScopes: scopes,\n                              semanticToken: semanticTokenStr,\n                          }),\n                  }\n                : {})}\n        >\n            {children || ' '}\n        </span>\n    );\n};\n\nexport default React.memo(SubLine);\n","import React from 'react';\nimport { createToken, matcher } from '@anche/semantic-tokens-utilities';\nimport { match } from '@anche/textmate-utilities';\nimport cx from 'classnames';\nimport { sortBy } from 'lodash';\nimport { atom, useRecoilValue, useSetRecoilState } from 'recoil';\nimport { selector, useRecoilState } from 'recoil';\n\nimport parsedCode from '~/state/code';\nimport { rulesState } from '~/state/rules';\nimport { semanticTokens, semanticTokensState } from '~/state/semanticTokens';\n\nimport { infoState } from '~/containers/Code/components/Info';\nimport Line from '~/containers/Code/components/Line';\nimport SubLine, { SubLineCallback } from '~/containers/Code/components/SubLine';\n\n// import useViewRule from '~/hooks/useViewRule';\nimport useViewEntity from '~/hooks/useViewEntity';\n\nimport { selectorKey } from '~/helpers/state';\n\nimport css from './styles.module.scss';\n\nexport const sublineSelected = atom<string>({\n    key: 'selectedSubline',\n    default: '',\n});\n\ntype FormattedNode = Pick<\n    React.ComponentProps<typeof SubLine>,\n    'children' | 'semanticTokenStateId' | 'ruleStateId' | 'scopes' | 'semanticToken'\n>;\n\nconst hydratedCode = selector({\n    key: selectorKey('CodeView', 'Format'),\n    get: ({ get }) => {\n        const textMateResult = get(parsedCode);\n        const semanticTokenResult = get(semanticTokens);\n        const definedRules = get(rulesState);\n        const definedTokens = get(semanticTokensState);\n\n        const lines = textMateResult.code.getLines();\n        const sorted = sortBy(textMateResult.tokens, ['line', 'start']);\n\n        const formatted: FormattedNode[][] = [];\n\n        sorted.forEach(textMateScope => {\n            const line = lines[textMateScope.line];\n\n            const semanticToken =\n                semanticTokenResult &&\n                semanticTokenResult[textMateScope.line] &&\n                semanticTokenResult[textMateScope.line][textMateScope.start];\n\n            const tokens = definedTokens.map(_token => ({\n                ..._token,\n                ...createToken(_token.scope),\n            }));\n\n            const semanticTokenScope =\n                semanticToken && matcher.matchToken(semanticToken[0], tokens);\n\n            const nodeScopes: string[] = semanticTokenScope?.fallbackScopes || textMateScope.scopes;\n\n            const rule = match(\n                nodeScopes,\n                definedRules.map(r => ({ rule: r, scopes: r.scope })),\n            );\n\n            const subline: FormattedNode = {\n                ...textMateScope,\n                children: line.substr(textMateScope.start, textMateScope.length),\n                // add state ids so SubLine component can subscribe to those recoil values\n                semanticToken,\n                semanticTokenStateId: semanticTokenScope?.token?.id,\n                ruleStateId: rule?.rule.id,\n            };\n\n            if (!formatted[textMateScope.line]) {\n                formatted[textMateScope.line] = [];\n            }\n\n            formatted[textMateScope.line].push(subline);\n        });\n\n        return formatted;\n    },\n});\n\nconst CodeView: React.FC = () => {\n    const codeObj = useRecoilValue(hydratedCode);\n    const [selected] = useRecoilState(sublineSelected);\n    const setInfoState = useSetRecoilState(infoState);\n    const viewEntity = useViewEntity();\n\n    const subLineCallback: SubLineCallback = React.useCallback(\n        ({ textmateScopes, semanticToken, id, entity }) => {\n            entity && viewEntity(entity);\n            setInfoState({\n                selected: id,\n                textmateScopes,\n                semanticToken,\n            });\n        },\n        [setInfoState, viewEntity],\n    );\n\n    return (\n        <>\n            <span className={cx(css.lineNumbers)}>\n                {codeObj.map((_, i) => (\n                    <span key={i}>{i + 1}</span>\n                ))}\n            </span>\n            <span>\n                {codeObj.map((line, i) => (\n                    <Line key={i} lineNumber={i}>\n                        {line.map((subline, j) => {\n                            const sublineKey = `${i}-\"${subline.children}\"-${j}`;\n\n                            return (\n                                <SubLine\n                                    selected={sublineKey === selected}\n                                    key={sublineKey}\n                                    id={sublineKey}\n                                    onHover={subLineCallback}\n                                    onClick={subLineCallback}\n                                    {...subline}\n                                >\n                                    {subline.children || ''}\n                                </SubLine>\n                            );\n                        })}\n                    </Line>\n                ))}\n            </span>\n        </>\n    );\n};\n\nexport default CodeView;\n","import React from 'react';\nimport cx from 'classnames';\nimport { useRecoilValue } from 'recoil';\n\nimport { editCodeState } from '~/state/code';\n\nimport CodeInput from '~/containers/Code/components/CodeInput';\nimport CodeView from '~/containers/Code/components/CodeView';\n\nimport css from './styles.module.scss';\n\nconst Editor: React.FC = () => {\n    const isEditing = useRecoilValue(editCodeState);\n\n    return (\n        <div className={css.outer}>\n            <code className={css.container}>\n                <pre className={cx(css.code, css.codeText)}>\n                    {isEditing ? (\n                        <CodeInput />\n                    ) : (\n                        <div className={css.codeWrapper}>\n                            <CodeView />\n                        </div>\n                    )}\n                </pre>\n            </code>\n        </div>\n    );\n};\n\nexport default Editor;\n","import React from 'react';\n\nimport Editor from '~/containers/Code/components/Editor';\n\nconst Code: React.FC = () => {\n    return (\n        <>\n            <React.Suspense fallback={<div>waiting for code</div>}>\n                <Editor />\n            </React.Suspense>\n        </>\n    );\n};\n\nexport default Code;\n","import React from 'react';\n\ninterface Props {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    onClick: (...args: any[]) => void;\n}\n\nconst SettingsMenuItem: React.FC<Props> = ({ onClick, children }) => {\n    return <li onClick={onClick}>{children}</li>;\n};\n\nexport default SettingsMenuItem;\n","import React from 'react';\nimport BoldIcon from '@material-ui/icons/FormatBold';\nimport ItalicIcon from '@material-ui/icons/FormatItalic';\nimport UnderlineIcon from '@material-ui/icons/FormatUnderlined';\nimport cx from 'classnames';\n\nimport { FontStyle as FontStyleEnum } from '~/constants';\n\nimport css from './styles.module.scss';\n\nconst TYPE_MAP = {\n    [FontStyleEnum.Bold]: BoldIcon,\n    [FontStyleEnum.Italic]: ItalicIcon,\n    [FontStyleEnum.Underline]: UnderlineIcon,\n};\n\ninterface Props {\n    type: FontStyleEnum;\n    onClick: () => void;\n    enabled: boolean;\n}\n\nconst FontStyle: React.FC<Props> = ({ type, onClick, enabled }) => {\n    const SVG = TYPE_MAP[type];\n\n    return (\n        <div onClick={onClick} className={cx(css.icon, { [css.enabled]: enabled })}>\n            <SVG />\n        </div>\n    );\n};\n\nexport default FontStyle;\n","import { Theme } from './theme';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst isTheme = (obj: any): obj is Theme => {\n    return (\n        typeof obj?.colors === 'object' &&\n        Array.isArray(obj.tokenColors) &&\n        obj.tokenColors.every(\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            (e: any) =>\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                ((Array.isArray(e.scope) && e.scope.every((e: any) => typeof e === 'string')) ||\n                    typeof e.scope === 'string') &&\n                typeof e.settings === 'object' &&\n                (typeof e.settings.fontStyle === 'undefined' ||\n                    typeof e.settings.fontStyle === 'string') &&\n                typeof e.settings.foreground === 'string',\n        )\n    );\n};\n\nexport default isTheme;\n","import { MutableSnapshot } from 'recoil';\n\nimport { generalScopeState } from '~/state/generalScopes';\nimport { ruleIds, ruleState } from '~/state/rules';\nimport { semanticTokenIds, semanticTokenState } from '~/state/semanticTokens';\nimport { themeStyle } from '~/state/theme';\n\nimport { GENERAL_SCOPES } from '~/constants';\n\nimport { Rule, SemanticToken } from '~/types';\n\nconst resetState = async (snapshot: MutableSnapshot): Promise<void> => {\n    snapshot.reset(themeStyle);\n    GENERAL_SCOPES.map(name => snapshot.reset(generalScopeState(name)));\n\n    const ids = await snapshot.getPromise(ruleIds);\n    let length = ids.length,\n        i = 0;\n\n    for (i = 0; i < length; i++) {\n        const id = ids[i];\n        const state = await snapshot.getPromise(ruleState(id));\n\n        if (state) {\n            const updated: Rule = {\n                ...state,\n                __meta: {\n                    ...state.__meta!,\n                    state: 'deleted',\n                },\n            };\n\n            snapshot.set(ruleState(id), updated);\n        }\n    }\n\n    const tokenIds = await snapshot.getPromise(semanticTokenIds);\n    length = tokenIds.length;\n    i = 0;\n\n    for (let i = 0; i < length; i++) {\n        const id = ids[i];\n        const state = await snapshot.getPromise(semanticTokenState(id));\n\n        if (state) {\n            const updated: SemanticToken = {\n                ...state,\n                __meta: {\n                    ...state.__meta!,\n                    state: 'deleted',\n                },\n            };\n\n            snapshot.set(semanticTokenState(id), updated);\n        }\n    }\n\n    snapshot.set(semanticTokenIds, []);\n};\n\nexport default resetState;\n","import React, { ChangeEvent } from 'react';\nimport { useRecoilCallback } from 'recoil';\n\nimport { generalScopeState } from '~/state/generalScopes';\nimport { ruleIds, ruleState } from '~/state/rules';\n\nimport SettingsMenuItem from '~/containers/Code/components/SettingsMenu/Item';\nimport FontStyle from '~/containers/Settings/components/FontStyle';\n\nimport generalScopesDefault from '~/helpers/generalScopesDefault';\n\nimport createRule from '~/model/rule';\n\nimport { Rule } from '~/types';\nimport isTheme from '~/types/theme.guard';\n\nimport resetState from '~/recoil/snapshot/reset';\n\nconst getFileJson = (event: ChangeEvent<HTMLInputElement>): Promise<Record<string, unknown>> => {\n    const input = event.target;\n\n    return new Promise((resolve, reject) => {\n        if (!input?.files?.length) {\n            reject();\n            return;\n        }\n\n        const reader = new FileReader();\n\n        reader.onload = (e): void => {\n            resolve(JSON.parse(e.target?.result as string));\n            return;\n        };\n\n        reader.readAsText(input.files[0]);\n    });\n};\n\nconst Open: React.FC = () => {\n    const inputRef = React.useRef<HTMLInputElement>(null);\n\n    const onClick = (): void => {\n        inputRef.current?.click();\n    };\n\n    const onSelectFile = useRecoilCallback(\n        ({ snapshot, gotoSnapshot }) => async (\n            event: ChangeEvent<HTMLInputElement>,\n        ): Promise<void> => {\n            const json = await getFileJson(event);\n\n            if (!isTheme(json)) {\n                return;\n            }\n\n            const existingIds = await snapshot.getPromise(ruleIds);\n\n            const newSnapshot = await snapshot.asyncMap(async mutableSnapshot => {\n                await resetState(mutableSnapshot);\n\n                const { set } = mutableSnapshot;\n\n                Object.keys(json.colors).map(scope => {\n                    if (generalScopesDefault[scope]) {\n                        set(generalScopeState(scope), {\n                            scope,\n                            settings: {\n                                foreground: json.colors[scope],\n                            },\n                        });\n                    }\n                });\n\n                json.tokenColors.forEach(tokenColor => {\n                    const input: Partial<Rule> = {\n                        ...tokenColor,\n                        scope: Array.isArray(tokenColor.scope)\n                            ? tokenColor.scope\n                            : [tokenColor.scope],\n                        settings: {\n                            ...tokenColor.settings,\n                            fontStyle: (tokenColor.settings.fontStyle || '')\n                                .split(' ')\n                                .map(style => FontStyle[style]),\n                        },\n                    };\n\n                    const rule = createRule(input, { existingIds });\n\n                    set(ruleState(rule.id), rule);\n                });\n            });\n\n            inputRef.current!.value = '';\n\n            gotoSnapshot(newSnapshot);\n        },\n    );\n\n    return (\n        <>\n            <input\n                ref={inputRef}\n                type=\"file\"\n                accept=\"application/JSON\"\n                onChange={onSelectFile}\n                style={{ display: 'none' }}\n            />\n            <SettingsMenuItem onClick={onClick}>Open</SettingsMenuItem>\n        </>\n    );\n};\n\nexport default Open;\n","import React from 'react';\nimport { useRecoilState } from 'recoil';\n\nimport { editCodeState } from '~/state/code';\n\nimport SettingsMenuItem from '~/containers/Code/components/SettingsMenu/Item';\n\nconst CustomizeCode: React.FC = () => {\n    const [isEditing, setEditCode] = useRecoilState(editCodeState);\n    const onClick = (): void => {\n        setEditCode(!isEditing);\n    };\n    return (\n        <SettingsMenuItem onClick={onClick}>\n            {!isEditing ? 'Customize preview' : 'Save preview'}\n        </SettingsMenuItem>\n    );\n};\n\nexport default CustomizeCode;\n","import React from 'react';\nimport { useRecoilCallback } from 'recoil';\n\nimport { generalScopesState } from '~/state/generalScopes';\nimport { rulesState } from '~/state/rules';\nimport { semanticTokensState } from '~/state/semanticTokens';\nimport { themeStyle } from '~/state/theme';\n\nimport SettingsMenuItem from '~/containers/Code/components/SettingsMenu/Item';\n\nimport { GeneralScope, Rule, SemanticToken } from '~/types';\nimport { SemanticTokenRules, TextMateRule, Theme } from '~/types/theme';\n\ninterface Options {\n    semanticTokens: SemanticToken[];\n    name: string;\n    generalScopes: GeneralScope[];\n    rules: Rule[];\n    type: 'dark' | 'light';\n}\n\nconst createSemanticTokensObj = (tokens: SemanticToken[]): SemanticTokenRules => {\n    return tokens.reduce(\n        (acc: SemanticTokenRules, token) => ({\n            ...acc,\n            [token.scope]: {\n                foreground: token.settings.foreground,\n                ...(token.settings.fontStyle!.length > 0\n                    ? {\n                          fontStyle: token.settings.fontStyle!.join(' '),\n                      }\n                    : {}),\n            },\n        }),\n        {},\n    );\n};\n\nconst ruleTransformer = (rule: Rule): TextMateRule => ({\n    name: rule.name,\n    scope: rule.scope,\n    settings: {\n        ...(rule.settings.fontStyle!.length > 0\n            ? {\n                  fontStyle: rule.settings.fontStyle!.join(' '),\n              }\n            : {}),\n        foreground: rule.settings.foreground,\n    },\n});\n\nconst createThemeColorsObj = (scopes: GeneralScope[]): Theme['colors'] => {\n    return scopes.reduce(\n        (acc, scope) => ({\n            ...acc,\n            [scope.id]: scope.settings.foreground,\n        }),\n        {},\n    );\n};\n\nconst createTheme = (opts: Options): Theme => ({\n    name: opts.name,\n    colors: createThemeColorsObj(opts.generalScopes),\n    semanticHighlighting: opts.semanticTokens.length > 0,\n    tokenColors: opts.rules.map(ruleTransformer),\n    type: opts.type,\n    semanticTokenColors: createSemanticTokensObj(opts.semanticTokens),\n});\n\nconst Export: React.FC = () => {\n    const name = 'by https://github.com/el-angel/theme-editor';\n\n    const download = useRecoilCallback(\n        ({ snapshot }) => async () => {\n            const rules = await snapshot.getPromise(rulesState);\n            const semanticTokens = await snapshot.getPromise(semanticTokensState);\n            const generalScopes = await snapshot.getPromise(generalScopesState);\n            const type = await snapshot.getPromise(themeStyle);\n            const theme = createTheme({ rules, generalScopes, name, type, semanticTokens });\n            const json = JSON.stringify(theme, null, 2);\n\n            const elem = document.createElement('a');\n            const dataStr = 'data:text/json;charset=utf-8,' + encodeURIComponent(json);\n\n            elem.setAttribute('href', dataStr);\n            elem.setAttribute('download', 'theme.json');\n            elem.setAttribute('style', 'display: none;');\n            document.body.appendChild(elem);\n            elem.click();\n            elem.remove();\n        },\n        [],\n    );\n\n    return <SettingsMenuItem onClick={download}>Export</SettingsMenuItem>;\n};\n\nexport default Export;\n","import React from 'react';\nimport { useRecoilCallback } from 'recoil';\n\nimport SettingsMenuItem from '~/containers/Code/components/SettingsMenu/Item';\n\nimport { confirm } from '~/services/dialog';\n\nimport resetState from '~/recoil/snapshot/reset';\n\nconst New: React.FC = () => {\n    const onClick = useRecoilCallback(({ snapshot, gotoSnapshot }) => (): void => {\n        confirm()\n            .then(async () => {\n                const newSnapshot = await snapshot.asyncMap(async mutableSnapshot => {\n                    await resetState(mutableSnapshot);\n                });\n\n                gotoSnapshot(newSnapshot);\n            })\n            .catch(() => null);\n    });\n\n    return <SettingsMenuItem onClick={onClick}>New</SettingsMenuItem>;\n};\nexport default New;\n","import React from 'react';\nimport cx from 'classnames';\n\nimport { States, useSemanticHighlighting } from '~/state/semanticTokens';\n\nimport SettingsMenuItem from '~/containers/Code/components/SettingsMenu/Item';\n\nimport css from './styles.module.scss';\n\nconst classMap = {\n    [States.Active]: 'active',\n    [States.Inactive]: 'inactive',\n    [States.Enabled]: 'enabled',\n    [States.Loading]: 'loading',\n};\n\nconst SemanticHighlighting: React.FC = () => {\n    const [state, toggleSemanticHighlighting] = useSemanticHighlighting();\n\n    React.useEffect(() => {\n        toggleSemanticHighlighting(States.Active);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return (\n        <SettingsMenuItem onClick={toggleSemanticHighlighting}>\n            <div className={cx(css.container, css[classMap[state]])}>\n                <div>Semantic highlighting</div>\n                <div className={css.status} />\n            </div>\n        </SettingsMenuItem>\n    );\n};\nexport default SemanticHighlighting;\n","import React from 'react';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport cx from 'classnames';\nimport { useRecoilValue } from 'recoil';\n\nimport { generalScopeState } from '~/state/generalScopes';\n\nimport Open from '~/containers/Code/components/SettingsMenu/Items/Open';\n\nimport useOutsideClick from '~/hooks/useOutsideClick';\n\nimport getContrastColor from '~/helpers/getContrastColor';\n\nimport { GeneralScope } from '~/types';\n\nimport CustomizeCode from './Items/CustomizeCode';\nimport Export from './Items/Export';\nimport New from './Items/New';\nimport SemanticHighlighting from './Items/SemanticHighlighting';\n\nimport css from './styles.module.scss';\n\nconst SettingsMenu: React.FC = () => {\n    const [open, setOpen] = React.useState(false);\n    const editorBackground: GeneralScope = useRecoilValue(\n        generalScopeState('editor.background'),\n    ) as GeneralScope;\n    const containerRef = React.useRef<HTMLDivElement>(null);\n\n    useOutsideClick(containerRef, (isOutside: boolean) => {\n        if (isOutside && open) {\n            setOpen(false);\n        }\n    });\n\n    return (\n        <div className={css.container}>\n            <div className={css.settingsIcon} onClick={(): void => setOpen(!open)}>\n                <SettingsIcon\n                    style={{\n                        color: getContrastColor(editorBackground?.settings?.foreground),\n                        opacity: '0.5',\n                    }}\n                />\n            </div>\n\n            <div\n                // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n                // @ts-ignore\n                ref={containerRef}\n                className={cx(css.menu, {\n                    [css.open]: open,\n                })}\n            >\n                <ul>\n                    <New />\n                    <Open />\n                    <li className={css.divider}></li>\n                    <SemanticHighlighting />\n                    <CustomizeCode />\n                    <li className={css.divider}></li>\n                    <Export />\n                </ul>\n            </div>\n        </div>\n    );\n};\n\nexport default SettingsMenu;\n","import React from 'react';\nimport ColorTextIcon from '@material-ui/icons/FormatColorText';\nimport chroma from 'chroma-js';\nimport { debounce } from 'lodash';\n\nimport getContrastColor from '~/helpers/getContrastColor';\n\nimport css from './styles.module.scss';\n\ninterface Props {\n    onChange: (color: string) => void;\n    value: string;\n}\n\nconst ColorPicker: React.FC<Props> = ({ onChange, value }) => {\n    const inputRef = React.useRef<HTMLInputElement>(null);\n\n    const newColorCallback = React.useCallback(\n        debounce((color: string) => {\n            onChange(color);\n        }, 100),\n        [onChange],\n    );\n\n    const _onChange = React.useCallback(\n        evt => {\n            newColorCallback(evt.target.value);\n        },\n        [newColorCallback],\n    );\n\n    return (\n        <div className={css.container}>\n            <div\n                onClick={(): void => inputRef.current?.click()}\n                className={css.hexValue}\n                style={{ backgroundColor: value, color: getContrastColor(value) }}\n            >\n                {value}\n            </div>\n            <div onClick={(): void => inputRef.current?.click()} className={css.picker}>\n                <ColorTextIcon />\n            </div>\n            <input\n                className={css.input}\n                ref={inputRef}\n                type=\"color\"\n                value={value}\n                onChange={_onChange}\n            />\n        </div>\n    );\n};\n\nexport default ColorPicker;\n","import React from 'react';\nimport cx from 'classnames';\n\nimport css from './styles.module.scss';\n\ninterface Props {\n    value: string;\n    readonly?: boolean;\n    onChange?: (name: string) => void;\n}\n\nconst NameInput: React.FC<Props> = ({\n    value: currentValue,\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    onChange = (): void => {},\n    readonly,\n}) => {\n    const [editing, setEditing] = React.useState(false);\n    const [value, setValue] = React.useState(currentValue);\n\n    const onClick = React.useCallback(() => {\n        if (readonly) {\n            return;\n        }\n        setEditing(true);\n    }, [readonly]);\n\n    const onInputBlur = React.useCallback(() => {\n        if (readonly) {\n            return;\n        }\n\n        setEditing(false);\n\n        onChange!(value);\n    }, [onChange, readonly, value]);\n\n    const onKeyDown = React.useCallback(\n        (evt: React.KeyboardEvent) => {\n            if (readonly) {\n                return;\n            }\n\n            if (evt.key === 'Enter') {\n                onInputBlur();\n            }\n        },\n        [onInputBlur, readonly],\n    );\n\n    React.useEffect(() => {\n        setValue(currentValue);\n    }, [currentValue]);\n\n    return (\n        <div>\n            <input\n                onClick={onClick}\n                readOnly={!editing || readonly}\n                className={cx(css.name, {\n                    [css.editable]: editing && !readonly,\n                    [css.readonly]: readonly,\n                })}\n                type=\"text\"\n                value={value}\n                onChange={(evt): void => setValue(evt.target.value)}\n                onBlur={onInputBlur}\n                onKeyDown={onKeyDown}\n            />\n        </div>\n    );\n};\n\nexport default NameInput;\n","import React from 'react';\nimport cx from 'classnames';\n\nimport { Rule } from '~/types';\n\nimport css from './styles.module.scss';\n\ninterface Props {\n    scopes: Rule['scope'];\n    existingScopes: string[];\n    onDelete: (scope: string) => void;\n}\n\nconst ScopesList: React.FC<Props> = ({ scopes, onDelete, existingScopes }) => {\n    const scopesReversed = [...scopes].reverse();\n    return (\n        <div>\n            {scopesReversed.map((scope, i) => {\n                const exists = existingScopes.includes(scope);\n                return (\n                    <div className={css.container} key={`${scope}-${i}`}>\n                        {exists && (\n                            <span className={css.warning} role=\"img\" aria-label=\"warning\">\n                                ❗️\n                            </span>\n                        )}\n                        <div\n                            className={cx(css.scope, {\n                                [css.exists]: exists,\n                            })}\n                            onClick={(): void => onDelete(scope)}\n                        >\n                            {scope}\n                        </div>\n                    </div>\n                );\n            })}\n        </div>\n    );\n};\n\nexport default ScopesList;\n","import chroma from 'chroma-js';\n\nconst getScale = (...colors: string[]): ReturnType<chroma.Scale['colors']> => {\n    const scale = chroma.scale(colors).mode('lab').colors(12);\n    return scale;\n};\n\nconst getSwatches = (hex: string): ReturnType<typeof getScale>[] => {\n    const lightToDark = getScale(chroma.mix('#ffffff', hex, 0.15).hex(), hex, '#000000');\n\n    const redToCyan = getScale(\n        chroma.mix('red', hex, 0.1).hex(),\n        hex,\n        chroma.mix('cyan', hex, 0.1).hex(),\n    );\n    const greenToMagenta = getScale(\n        chroma.mix('green', hex, 0.2).hex(),\n        hex,\n        chroma.mix('magenta', hex, 0.1).hex(),\n    );\n    const blueToYellow = getScale(\n        chroma.mix('blue', hex, 0.2).hex(),\n        hex,\n        chroma.mix('yellow', hex, 0.1).hex(),\n    );\n\n    return [lightToDark, redToCyan, greenToMagenta, blueToYellow];\n};\n\nexport default getSwatches;\n","import React from 'react';\n\nimport getSwatches from '~/helpers/swatches';\n\nimport css from './styles.module.scss';\n\ninterface Props {\n    color: string;\n    onColorSelect: (hex: string) => void;\n}\n\nconst Swatches: React.FC<Props> = ({ color, onColorSelect }) => {\n    const [swatches, setSwatches] = React.useState<string[][]>([]);\n\n    React.useEffect(() => {\n        setSwatches(getSwatches(color));\n    }, [color]);\n\n    return (\n        <div className={css.container}>\n            {swatches.map((group, i) => (\n                <div className={css.swatchGroup} key={`group-${i}`}>\n                    {group.map((color, j) => (\n                        <div\n                            key={`${i}-${j}`}\n                            className={css.swatch}\n                            onClick={(): void => onColorSelect(color)}\n                            style={{ backgroundColor: color }}\n                        ></div>\n                    ))}\n                </div>\n            ))}\n        </div>\n    );\n};\n\nexport default Swatches;\n","import React from 'react';\n\nimport css from './styles.module.scss';\n\nconst PanelItem: React.FC = ({ children }) => {\n    return <div className={css.item}>{children}</div>;\n};\n\nexport default PanelItem;\n","import React from 'react';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport PanelItem from '~/components/ui/PanelItem';\n\nimport css from './styles.module.scss';\n\ninterface Props {\n    onClose: () => void;\n}\n\nconst Panel: React.FC<Props> = ({ children, onClose }) => {\n    return (\n        <div className={css.container}>\n            <div className={css.toolbar}>\n                <div>\n                    <PanelItem>Settings</PanelItem>\n                </div>\n                <div>\n                    <span onClick={onClose} className={css.close}>\n                        <CloseIcon style={{ fontSize: '16px' }} />\n                    </span>\n                </div>\n            </div>\n            <div className={css.content}>{children}</div>\n        </div>\n    );\n};\n\nexport default Panel;\n","import React from 'react';\n\nimport ColorPicker from '~/containers/Settings/components/ColorPicker';\nimport FontStyle from '~/containers/Settings/components/FontStyle';\nimport NameInput from '~/containers/Settings/components/NameInput';\nimport ScopesList from '~/containers/Settings/components/ScopesList';\nimport Swatches from '~/containers/Settings/components/Swatches';\n\nimport Button from '~/components/ui/Button';\nimport Panel from '~/components/ui/Panel';\n\nimport { FontStyle as FontStyleEnum } from '~/constants';\n\nimport { Rule } from '~/types';\n\nimport css from './styles.module.scss';\n\ninterface Props {\n    onAddScope?: (scope: string) => void;\n    onChangeFontStyle?: (style: FontStyleEnum) => void;\n    onChangeName?: (name: string) => void;\n    onDelete?: () => void;\n    onClose: () => void;\n    onChangeColor: (color: string) => void;\n    name?: string;\n    color: string;\n    bold?: boolean;\n    italic?: boolean;\n    underline?: boolean;\n    scopes?: Rule['scope'];\n    existingScopes?: string[];\n    onDeleteScope?: (scope: string) => void;\n}\n\nconst PanelSettings: React.FC<Props> = ({\n    onClose,\n    onChangeName,\n    onChangeFontStyle,\n    onChangeColor,\n    onDelete,\n    onAddScope,\n    name,\n    color,\n    bold,\n    italic,\n    underline,\n    scopes,\n    existingScopes,\n    onDeleteScope,\n}) => {\n    const [newScope, setNewScope] = React.useState<string>('');\n\n    const onAddScopeInputChange = React.useCallback(\n        (evt: React.ChangeEvent) => {\n            // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n            // @ts-ignore\n            setNewScope(evt.target.value);\n        },\n        [setNewScope],\n    );\n\n    const onAddScopeInputKeyDown = React.useCallback(\n        (evt: React.KeyboardEvent) => {\n            if (['Enter', ','].includes(evt.key)) {\n                evt.preventDefault();\n\n                onAddScope && onAddScope(newScope);\n\n                setNewScope('');\n            }\n        },\n        [onAddScope, newScope],\n    );\n\n    return (\n        <Panel onClose={onClose}>\n            <div className={css.container}>\n                <div className={css.top}>\n                    <div className={css.left}>\n                        <div>\n                            {name && (\n                                <NameInput\n                                    value={name}\n                                    readonly={!onChangeName}\n                                    onChange={onChangeName}\n                                />\n                            )}\n                            <div className={css.scopesList}>\n                                {!!(scopes && existingScopes && onDeleteScope) && (\n                                    <ScopesList\n                                        existingScopes={existingScopes}\n                                        scopes={scopes}\n                                        onDelete={onDeleteScope}\n                                    />\n                                )}\n                            </div>\n                        </div>\n                        {onDelete && <Button onClick={onDelete}>Delete</Button>}\n                    </div>\n                    <div className={css.tools}>\n                        <div className={css.picker}>\n                            <ColorPicker value={color} onChange={onChangeColor} />\n                        </div>\n                        {onChangeFontStyle && (\n                            <>\n                                <FontStyle\n                                    type={FontStyleEnum.Bold}\n                                    onClick={(): void => onChangeFontStyle(FontStyleEnum.Bold)}\n                                    enabled={bold || false}\n                                />\n                                <FontStyle\n                                    type={FontStyleEnum.Italic}\n                                    onClick={(): void => onChangeFontStyle(FontStyleEnum.Italic)}\n                                    enabled={italic || false}\n                                />\n                                <FontStyle\n                                    type={FontStyleEnum.Underline}\n                                    onClick={(): void => onChangeFontStyle(FontStyleEnum.Underline)}\n                                    enabled={underline || false}\n                                />\n                            </>\n                        )}\n                    </div>\n                    <div className={css.colorContainer}>\n                        <Swatches\n                            color={color}\n                            onColorSelect={(color): void => onChangeColor(color)}\n                        />\n                    </div>\n                </div>\n                {onAddScope && (\n                    <div className={css.addScope}>\n                        <input\n                            className={css.addScopeInput}\n                            type=\"text\"\n                            placeholder=\"Add scope\"\n                            value={newScope}\n                            onChange={onAddScopeInputChange}\n                            onKeyDown={onAddScopeInputKeyDown}\n                        />\n                    </div>\n                )}\n            </div>\n        </Panel>\n    );\n};\nexport default PanelSettings;\n","import React from 'react';\nimport { useRecoilState, useRecoilValue } from 'recoil';\n\nimport { generalScopeState } from '~/state/generalScopes';\nimport { entitySettingsState } from '~/state/ui';\n\n// import editGeneralScopeState from '~/state/generalScopes/edit';\nimport PanelSettings from '~/components/ui/PanelSettings';\n\nimport useViewEntity from '~/hooks/useViewEntity';\n\nconst GeneralSettings: React.FC = () => {\n    const input = useRecoilValue(entitySettingsState);\n    const viewEntity = useViewEntity();\n    const [generalScope, updateGeneralScope] = useRecoilState(generalScopeState(input?.id));\n\n    const onChangeColor = React.useCallback(\n        (color: string) => {\n            updateGeneralScope({\n                ...generalScope!,\n                settings: {\n                    foreground: color,\n                },\n            });\n        },\n        [updateGeneralScope, generalScope],\n    );\n\n    if (!generalScope) {\n        return null;\n    }\n\n    return (\n        <PanelSettings\n            onClose={(): void => viewEntity()}\n            onChangeColor={onChangeColor}\n            color={generalScope.settings.foreground}\n            name={generalScope.id}\n        />\n    );\n};\nexport default GeneralSettings;\n","import { EntityType } from '~/constants';\n\nimport { GeneralScope, Rule, SemanticToken } from '~/types';\n\nexport function isGeneralScope(input: any): input is GeneralScope {\n    return input.__meta.type === EntityType.GeneralScope;\n}\n\nexport function isRule(input: any): input is Rule {\n    return input.__meta.type === EntityType.Rule;\n}\n\nexport function isSemanticToken(input: any): input is SemanticToken {\n    return input.__meta.type === EntityType.SemanticToken;\n}\n","import { useRecoilCallback } from 'recoil';\n\nimport mode from '~/state/mode';\nimport { ruleState } from '~/state/rules';\nimport { semanticTokenState } from '~/state/semanticTokens';\nimport { entitySettingsState } from '~/state/ui';\n\nimport { isRule, isSemanticToken } from '~/helpers/typeGuards';\n\nimport { Entity, Rule, SemanticToken } from '~/types';\n\ntype ReturnType = (input: Entity) => void;\n\nconst useDeleteEntity = (): ReturnType => {\n    const deleteEntity = useRecoilCallback(\n        ({ set, snapshot }) => async (input: Entity): Promise<void> => {\n            const id = typeof input === 'string' ? input : input.id;\n\n            const editEntity = await snapshot.getPromise(entitySettingsState);\n            const currentMode = await snapshot.getPromise(mode);\n\n            let getter;\n\n            if (isRule(input)) {\n                getter = ruleState;\n            }\n\n            if (isSemanticToken(input)) {\n                getter = semanticTokenState;\n            }\n\n            if (!getter) {\n                throw new Error(`${input.id} cannot be deleted.`);\n            }\n\n            const stateValue = await snapshot.getPromise<Rule | SemanticToken>(getter(input.id));\n\n            if (stateValue) {\n                const deletedEntity = {\n                    ...stateValue,\n                    __meta: {\n                        ...stateValue.__meta!,\n                        state: 'deleted',\n                    },\n                };\n\n                set(getter(input.id), deletedEntity);\n            }\n\n            if (editEntity?.id === id && currentMode === editEntity.__meta.type) {\n                set(entitySettingsState, undefined);\n            }\n        },\n        [],\n    );\n\n    return deleteEntity;\n};\n\nexport default useDeleteEntity;\n","import { Rule } from '~/types';\n\nconst getDefinedScopes = (rules: Rule[]): string[] => {\n    let scopes: string[] = [];\n\n    for (let i = 0; i < rules.length; i++) {\n        scopes = [...scopes, ...rules[i].scope];\n    }\n\n    return scopes;\n};\n\nconst isDefined = (selector: string, scopes: string[]): boolean => {\n    const occurrences = scopes.filter(scope => scope === selector).length;\n\n    return occurrences >= 2;\n};\n\nconst getExistingScopes = (rule: Rule, rules: Rule[]): string[] => {\n    if (!rule.scope.length || !rules.length) {\n        return [];\n    }\n\n    const scopes = getDefinedScopes(rules);\n    if (!scopes.length) {\n        return [];\n    }\n\n    return rule.scope.reduce((acc: string[], scope: string) => {\n        if (isDefined(scope, scopes)) {\n            return [...acc, scope];\n        }\n        return acc;\n    }, []);\n};\n\nexport default getExistingScopes;\n","import React from 'react';\nimport { useRecoilValue, useSetRecoilState } from 'recoil';\n\nimport { rulesState, ruleState } from '~/state/rules';\nimport { entitySettingsState } from '~/state/ui';\n\nimport PanelSettings from '~/components/ui/PanelSettings';\n\nimport useDeleteEntity from '~/hooks/useDeleteEntity';\nimport useViewEntity from '~/hooks/useViewEntity';\n\n// import useViewRule from '~/hooks/useViewRule';\nimport { FontStyle as FontStyleEnum } from '~/constants';\n\nimport getExistingScopes from '~/helpers/getExistingScopes';\n\nconst RuleSettings: React.FC = () => {\n    const rules = useRecoilValue(rulesState);\n    const deleteEntity = useDeleteEntity();\n    const viewEntity = useViewEntity();\n    const entity = useRecoilValue(entitySettingsState);\n    const rule = useRecoilValue(ruleState(entity?.id));\n\n    const updateRule = useSetRecoilState(ruleState(entity?.id));\n\n    const toggleFontStyle = React.useCallback(\n        (fontStyle: FontStyleEnum) => {\n            let styles = [...rule!.settings.fontStyle] || [];\n\n            if (typeof styles === 'string') {\n                styles = [styles];\n            }\n\n            if (styles.includes(fontStyle)) {\n                styles.splice(styles.indexOf(fontStyle), 1);\n            } else {\n                styles.push(fontStyle);\n            }\n\n            updateRule!({\n                ...rule!,\n                settings: {\n                    ...rule!.settings,\n                    fontStyle: styles,\n                },\n            });\n        },\n        [updateRule, rule],\n    );\n\n    const onChangeColor = React.useCallback(\n        (color: string) => {\n            updateRule!({\n                ...rule!,\n                settings: {\n                    ...rule!.settings,\n                    foreground: color,\n                },\n            });\n        },\n        [updateRule, rule],\n    );\n\n    if (!rule?.id) {\n        return null;\n    }\n\n    return (\n        <PanelSettings\n            onClose={(): void => viewEntity()}\n            onChangeName={(name): void => updateRule({ ...rule, name })}\n            existingScopes={getExistingScopes(rule, rules)}\n            scopes={rule.scope}\n            onDeleteScope={(scope: string): void => {\n                const index = rule.scope.findIndex(sc => sc === scope);\n                const newScopes = [...rule.scope];\n                newScopes.splice(index, 1);\n                updateRule({\n                    ...rule,\n                    scope: newScopes,\n                });\n            }}\n            onDelete={(): void => deleteEntity(rule)}\n            onChangeColor={onChangeColor}\n            onChangeFontStyle={(fontStyle): void => toggleFontStyle(fontStyle)}\n            bold={rule.settings.fontStyle?.includes(FontStyleEnum.Bold)}\n            italic={rule.settings.fontStyle?.includes(FontStyleEnum.Italic)}\n            underline={rule.settings.fontStyle?.includes(FontStyleEnum.Underline)}\n            color={rule.settings.foreground}\n            onAddScope={(scope: string): void =>\n                updateRule({\n                    ...rule!,\n                    scope: [scope, ...rule!.scope],\n                })\n            }\n            name={rule.name}\n        />\n    );\n};\n\nexport default RuleSettings;\n","import React from 'react';\nimport { useRecoilState, useRecoilValue } from 'recoil';\n\n// import { editRuleState } from '~/state/rules';\nimport { semanticTokenState } from '~/state/semanticTokens';\nimport { entitySettingsState } from '~/state/ui';\n\nimport PanelSettings from '~/components/ui/PanelSettings';\n\nimport useDeleteEntity from '~/hooks/useDeleteEntity';\nimport useViewEntity from '~/hooks/useViewEntity';\n\nimport { FontStyle as FontStyleEnum } from '~/constants';\n\nconst SemanticTokenSettings: React.FC = () => {\n    const editingEntity = useRecoilValue(entitySettingsState);\n    const [entity, updateEntity] = useRecoilState(semanticTokenState(editingEntity?.id));\n    const viewEntity = useViewEntity();\n    const deleteEntity = useDeleteEntity();\n\n    const toggleFontStyle = React.useCallback(\n        (fontStyle: FontStyleEnum) => {\n            let styles = [...entity!.settings.fontStyle] || [];\n\n            if (typeof styles === 'string') {\n                styles = [styles];\n            }\n\n            if (styles.includes(fontStyle)) {\n                styles.splice(styles.indexOf(fontStyle), 1);\n            } else {\n                styles.push(fontStyle);\n            }\n\n            updateEntity!({\n                ...entity!,\n                settings: {\n                    ...entity!.settings,\n                    fontStyle: styles,\n                },\n            });\n        },\n        [entity, updateEntity],\n    );\n\n    const onChangeColor = React.useCallback(\n        (color: string) => {\n            updateEntity!({\n                ...entity!,\n                settings: {\n                    ...entity!.settings,\n                    foreground: color,\n                },\n            });\n        },\n        [entity, updateEntity],\n    );\n\n    if (!entity?.id) {\n        return null;\n    }\n\n    return (\n        <PanelSettings\n            onClose={(): void => {\n                viewEntity();\n            }}\n            onDelete={(): void => deleteEntity(entity)}\n            onChangeColor={onChangeColor}\n            onChangeFontStyle={(fontStyle): void => toggleFontStyle(fontStyle)}\n            bold={entity.settings.fontStyle?.includes(FontStyleEnum.Bold)}\n            italic={entity.settings.fontStyle?.includes(FontStyleEnum.Italic)}\n            underline={entity.settings.fontStyle?.includes(FontStyleEnum.Underline)}\n            color={entity.settings.foreground}\n            name={entity.scope}\n        />\n    );\n};\n\nexport default SemanticTokenSettings;\n","import React from 'react';\nimport { useRecoilValue } from 'recoil';\n\nimport mode from '~/state/mode';\nimport { entitySettingsState } from '~/state/ui';\n\nimport GeneralSettings from '~/containers/Settings/GeneralSettings';\nimport RuleSettings from '~/containers/Settings/RuleSettings';\nimport SemanticTokenSettings from '~/containers/Settings/SemanticTokenSettings';\n\nimport { EntityType } from '~/constants';\n\nconst Settings: React.FC = () => {\n    // const rules = useRecoilValue(rulesState);\n    // const deleteRule = useDeleteEntity();\n    // const setViewRule = useViewRule();\n    // const id = useRecoilValue(editRuleState);\n    const currentMode = useRecoilValue(mode);\n    const input = useRecoilValue(entitySettingsState);\n\n    if (!input) {\n        return null;\n    }\n\n    if (currentMode === EntityType.GeneralScope) {\n        return <GeneralSettings />;\n    }\n\n    if (currentMode === EntityType.Rule) {\n        return <RuleSettings />;\n    }\n\n    return <SemanticTokenSettings />;\n};\n\nexport default Settings;\n","import { atom, selector } from 'recoil';\n\nimport { generalScopeState } from '~/state/generalScopes';\nimport { rulesState } from '~/state/rules';\nimport { semanticTokensState } from '~/state/semanticTokens';\n\nimport { GENERAL_SCOPES } from '~/constants';\n\nimport { atomKey, selectorKey } from '~/helpers/state';\n\nexport const filter = atom({\n    key: atomKey('Sidebar', 'FilterAdd'),\n    default: '',\n});\n\nexport const sidebarRules = selector({\n    key: selectorKey('Sidebar', 'FilteredRules'),\n    get: ({ get }) => {\n        const query = get(filter).toLowerCase();\n        const rules = get(rulesState);\n\n        return rules.filter(rule => {\n            return (\n                rule.name.toLowerCase().indexOf(query) !== -1 ||\n                rule.scope.some(scope => scope.toLowerCase().indexOf(query) !== -1)\n            );\n        });\n    },\n});\n\nexport const sidebarGeneralScopes = selector({\n    key: selectorKey('Sidebar', 'FilteredGeneralScope'),\n    get: ({ get }) => {\n        const query = get(filter).toLowerCase();\n\n        const scopes = GENERAL_SCOPES.map(scope => get(generalScopeState(scope)));\n\n        return scopes.filter(generalScope => {\n            return generalScope.id.toLowerCase().indexOf(query) !== -1;\n        });\n    },\n});\n\nexport const sidebarSemanticTokens = selector({\n    key: selectorKey('Sidebar', 'FilteredSemanticTokens'),\n    get: ({ get }) => {\n        const query = get(filter).toLowerCase();\n        const tokens = get(semanticTokensState);\n\n        return tokens.filter(token => {\n            return token.scope.toLowerCase().indexOf(query) !== -1;\n        });\n    },\n});\n","import React from 'react';\nimport AddIcon from '@material-ui/icons/Add';\nimport { useRecoilState } from 'recoil';\nimport { useRecoilValue } from 'recoil';\n\nimport mode from '~/state/mode';\nimport { filter } from '~/state/sidebar';\n\nimport Button from '~/components/ui/Button';\n\nimport useAddEntity from '~/hooks/useAddEntity';\n\nimport { EntityType } from '~/constants';\n\nimport css from './styles.module.scss';\n\nconst create = (input: string, type: EntityType) => ({\n    input: {\n        scope: type === EntityType.Rule ? [input] : input,\n    },\n    type,\n});\n\nconst FilterAdd: React.FC = () => {\n    const [query, setQuery] = useRecoilState(filter);\n    const _mode = useRecoilValue(mode);\n\n    const addEntity = useAddEntity();\n\n    return (\n        <div className={css.container}>\n            <input\n                className={css.input}\n                type=\"text\"\n                value={query}\n                onChange={(event): void => setQuery(event.target.value)}\n                placeholder=\"filter/add\"\n            />\n            {_mode !== EntityType.GeneralScope && (\n                <Button className={css.addButton} onClick={() => addEntity(create(query, _mode))}>\n                    <AddIcon />\n                </Button>\n            )}\n        </div>\n    );\n};\n\nexport default FilterAdd;\n","import React from 'react';\nimport cx from 'classnames';\n\nimport css from './styles.module.scss';\n\ninterface Props {\n    isActive: boolean;\n    onClick?: () => void;\n    title: string;\n    color: string;\n    showWarning?: boolean;\n}\n\nconst SidebarItem: React.FC<Props> = ({\n    isActive,\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    onClick = (): void => {},\n    title,\n    color,\n    showWarning = false,\n}) => {\n    return (\n        <div\n            className={cx(css.container, {\n                [css.active]: isActive,\n            })}\n            onClick={onClick}\n        >\n            <div className={css.nameContainer}>\n                {showWarning && <span className={css.warning}>❗️</span>}\n                <div className={css.name}>{title}</div>\n            </div>\n            <div className={css.color} style={{ backgroundColor: color }}></div>\n        </div>\n    );\n};\n\nexport default SidebarItem;\n","import React from 'react';\nimport { useRecoilValue } from 'recoil';\n\nimport { entitySettingsState } from '~/state/ui';\n\nimport SidebarItem from '~/components/ui/SidebarItem';\n\nimport useViewEntity from '~/hooks/useViewEntity';\n\nimport { GeneralScope as GeneralScopeType } from '~/types';\n\nconst GeneralScope: React.FC<GeneralScopeType> = props => {\n    const { id, settings } = props;\n\n    const viewEntity = useViewEntity();\n\n    const editingEntity = useRecoilValue(entitySettingsState);\n\n    const isActive = id === editingEntity?.id;\n\n    if (!props.id) {\n        return null;\n    }\n\n    return (\n        <>\n            <SidebarItem\n                isActive={isActive}\n                onClick={(): void => viewEntity(props)}\n                title={id}\n                color={settings.foreground}\n            />\n        </>\n    );\n};\n\nexport default GeneralScope;\n","import React from 'react';\nimport { useRecoilValue } from 'recoil';\n\nimport { sidebarGeneralScopes } from '~/state/sidebar';\n\nimport GeneralScope from '~/containers/Sidebar/components/GeneralScope';\n\nconst GeneralScopes: React.FC = () => {\n    const generalScopes = useRecoilValue(sidebarGeneralScopes);\n    return (\n        <>\n            {generalScopes.map(scope => (\n                <GeneralScope {...scope} key={scope.id} />\n            ))}\n        </>\n    );\n};\n\nexport default GeneralScopes;\n","import React from 'react';\nimport { useRecoilValue } from 'recoil';\n\nimport { rulesState } from '~/state/rules';\nimport { entitySettingsState } from '~/state/ui';\n\n// import { editRuleState } from '~/state/rules';\nimport SidebarItem from '~/components/ui/SidebarItem';\n\nimport useViewEntity from '~/hooks/useViewEntity';\n\n// import useViewRule from '~/hooks/useViewRule';\nimport getExistingScopes from '~/helpers/getExistingScopes';\n\nimport { Rule as RuleType } from '~/types';\n\nconst Rule: React.FC<RuleType> = props => {\n    const { id, name, settings } = props;\n    const viewEntity = useViewEntity();\n    const rules = useRecoilValue(rulesState);\n\n    const editingEntity = useRecoilValue(entitySettingsState);\n\n    const existingScopes = getExistingScopes(props, rules);\n\n    const isActive = editingEntity?.id === id;\n\n    return (\n        <SidebarItem\n            isActive={isActive}\n            onClick={(): void => {\n                if (!isActive) {\n                    viewEntity(props);\n                }\n            }}\n            title={name}\n            color={settings.foreground}\n            showWarning={!!existingScopes.length}\n        />\n    );\n};\n\nexport default Rule;\n","import React from 'react';\nimport { useRecoilValue } from 'recoil';\n\nimport { sidebarRules } from '~/state/sidebar';\n\nimport Rule from '~/containers/Sidebar/components/Rule';\n\nconst Rules: React.FC = () => {\n    const rules = useRecoilValue(sidebarRules);\n\n    return (\n        <>\n            {rules.map(rule => (\n                <Rule key={rule.id} {...rule} />\n            ))}\n        </>\n    );\n};\n\nexport default Rules;\n","import React from 'react';\nimport { useRecoilValue } from 'recoil';\n\nimport { entitySettingsState } from '~/state/ui';\n\nimport SidebarItem from '~/components/ui/SidebarItem';\n\nimport useViewEntity from '~/hooks/useViewEntity';\n\nimport { EntityType } from '~/constants';\n\nimport { SemanticToken as SemanticTokenType } from '~/types';\n\nconst SemanticToken: React.FC<SemanticTokenType> = props => {\n    const { id, settings, scope } = props;\n    const viewEntity = useViewEntity();\n    const editingEntity = useRecoilValue(entitySettingsState);\n\n    const isActive =\n        editingEntity?.id === id && editingEntity.__meta.type === EntityType.SemanticToken;\n\n    return (\n        <SidebarItem\n            isActive={isActive}\n            onClick={(): void => {\n                if (!isActive) {\n                    viewEntity(props);\n                }\n            }}\n            title={scope}\n            color={settings.foreground}\n        />\n    );\n};\n\nexport default SemanticToken;\n","import React from 'react';\nimport { useRecoilValue } from 'recoil';\n\nimport { sidebarSemanticTokens } from '~/state/sidebar';\n\nimport SemanticToken from '~/containers/Sidebar/components/SemanticToken';\n\nconst SemanticTokens: React.FC = () => {\n    const semanticTokens = useRecoilValue(sidebarSemanticTokens);\n\n    return (\n        <>\n            {semanticTokens.map(token => (\n                <SemanticToken key={token.id} {...token} />\n            ))}\n        </>\n    );\n};\n\nexport default SemanticTokens;\n","import React from 'react';\nimport cx from 'classnames';\nimport { useRecoilState } from 'recoil';\n\nimport mode from '~/state/mode';\n\nimport { EntityType } from '~/constants';\n\nimport css from './styles.module.scss';\n\nconst Toolbar: React.FC = () => {\n    const [currentMode, setMode] = useRecoilState(mode);\n\n    return (\n        <div className={css.toolbar}>\n            <div className={css.header}>\n                <div\n                    className={cx(css.item, {\n                        [css.isActive]: currentMode === EntityType.Rule,\n                    })}\n                    onClick={(): void => setMode(EntityType.Rule)}\n                >\n                    <span>Rules</span>\n                </div>\n                <div\n                    className={cx(css.item, {\n                        [css.isActive]: currentMode === EntityType.SemanticToken,\n                    })}\n                    onClick={(): void => setMode(EntityType.SemanticToken)}\n                >\n                    <span>Semantic</span>\n                </div>\n                <div\n                    className={cx(css.item, {\n                        [css.isActive]: currentMode === EntityType.GeneralScope,\n                    })}\n                    onClick={(): void => setMode(EntityType.GeneralScope)}\n                >\n                    <span>General</span>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Toolbar;\n","import { selector } from 'recoil';\n\nimport { generalScopeState } from '~/state/generalScopes';\n\nimport { GENERAL_SCOPES } from '~/constants';\n\nimport { selectorKey } from '~/helpers/state';\n\nconst generalScopesStateCSS = selector<string>({\n    key: selectorKey('GeneralScopes', 'CSS'),\n    get: ({ get }) => {\n        const scopes = GENERAL_SCOPES;\n\n        const css = scopes.reduce((acc, name) => {\n            const generalScope = get(generalScopeState(name))!;\n            const {\n                id,\n                settings: { foreground },\n            } = generalScope;\n\n            const formatted = `--${id.replace(/\\./, '-')}`;\n\n            return `\n        ${acc}\n        ${formatted}: ${foreground};\n      `.trim();\n        }, '');\n\n        return `\n      :root {\n        ${css}\n      }\n    `;\n    },\n});\n\nexport default generalScopesStateCSS;\n","import React from 'react';\nimport { useRecoilValue } from 'recoil';\n\nimport mode from '~/state/mode';\n\nimport Info from '~/containers/Code/components/Info';\nimport FilterAdd from '~/containers/Sidebar/components/FilterAdd';\nimport GeneralScopes from '~/containers/Sidebar/components/GeneralScopes';\nimport Rules from '~/containers/Sidebar/components/Rules';\nimport SemanticTokens from '~/containers/Sidebar/components/SemanticTokens';\nimport Toolbar from '~/containers/Sidebar/components/Toolbar';\n\nimport { EntityType } from '~/constants';\n\nimport css from './styles.module.scss';\n\nimport generalScopesStateCSS from '~/selectors/generalScopeCSS';\n\nconst Sidebar: React.FC = () => {\n    const currentMode = useRecoilValue(mode);\n    const generalStyle = useRecoilValue(generalScopesStateCSS);\n\n    return (\n        <>\n            <div>\n                <Toolbar />\n            </div>\n            <FilterAdd />\n            <div className={css.content}>\n                <style type=\"text/css\">{generalStyle}</style>\n                <div className={css.rules}>\n                    {currentMode === EntityType.Rule && <Rules />}\n\n                    {currentMode === EntityType.GeneralScope && <GeneralScopes />}\n\n                    {currentMode === EntityType.SemanticToken && <SemanticTokens />}\n                </div>\n                <Info />\n            </div>\n        </>\n    );\n};\n\nexport default Sidebar;\n","import { atom, atomFamily, selectorFamily } from 'recoil';\n\nimport { atomKey, selectorKey } from '~/helpers/state';\n\nconst modalIds = atom<string[]>({\n    key: atomKey('Modal', 'Ids'),\n    default: [],\n});\n\nconst _modalState = atomFamily({\n    key: atomKey('ModalState', 'Family'),\n    default: false,\n});\n\nexport const getModalState = selectorFamily<boolean, string>({\n    key: selectorKey('ModalState', 'GetFamily'),\n    get: id => ({ get }): boolean => {\n        return get(_modalState(id));\n    },\n    set: (id: string) => ({ set, get }, isOpen): void => {\n        const ids = get(modalIds);\n\n        if (!ids.includes(id)) {\n            set(modalIds, [...ids, id]);\n        }\n\n        if (isOpen) {\n            ids.forEach(_id => {\n                if (_id !== id) {\n                    set(_modalState(_id), false);\n                }\n            });\n        }\n\n        set(_modalState(id), isOpen);\n    },\n});\n","import React from 'react';\n\nimport css from './styles.module.scss';\n\ninterface Props {\n    onClick?: () => void;\n}\n\nconst Item: React.FC<Props> = ({ children, onClick }) => {\n    return (\n        <div onClick={onClick} className={css.item}>\n            {children}\n        </div>\n    );\n};\n\nexport default Item;\n","import React from 'react';\nimport cx from 'classnames';\n\nimport css from './styles.module.scss';\n\ninterface Option {\n    label: string;\n    value: string;\n}\n\ninterface Props<T extends Option> {\n    children?: React.ReactNode;\n    options: T[];\n    onSelect: (option: T) => void;\n    onClose: () => void;\n    value: T['value'];\n    inputProps?: React.InputHTMLAttributes<HTMLInputElement>;\n}\n\nconst QuickInput = <T extends Option>({\n    value,\n    options,\n    onSelect,\n    onClose,\n    inputProps,\n}: Props<T>): React.ReactElement => {\n    const index = options.findIndex(option => option.value === value);\n    const [focussedIndex, setFocussedIndex] = React.useState(index);\n\n    const keydownHandler = React.useCallback(\n        (event: KeyboardEvent) => {\n            if (!['Enter', 'ArrowUp', 'ArrowDown', 'Escape'].includes(event.key)) {\n                return;\n            }\n\n            event.preventDefault();\n\n            if (event.key == 'Escape') {\n                onClose();\n            }\n\n            if (event.key === 'Enter') {\n                onSelect(options[focussedIndex]);\n            }\n\n            if (event.key === 'ArrowUp') {\n                if (focussedIndex === 0) {\n                    setFocussedIndex(options.length - 1);\n                    return;\n                }\n\n                setFocussedIndex(focussedIndex - 1);\n                return;\n            }\n\n            if (event.key === 'ArrowDown') {\n                if (focussedIndex === options.length - 1) {\n                    setFocussedIndex(0);\n                    return;\n                }\n\n                setFocussedIndex(focussedIndex + 1);\n                return;\n            }\n        },\n        [focussedIndex, onClose, onSelect, options],\n    );\n\n    React.useEffect(() => {\n        window.addEventListener('keydown', keydownHandler);\n\n        return (): void => {\n            window.removeEventListener('keydown', keydownHandler);\n        };\n    }, [focussedIndex, keydownHandler]);\n\n    return (\n        <div className={css.container}>\n            <div className={css.inputContainer}>\n                <input {...inputProps} className={css.input} />\n            </div>\n            <div className={css.optionContainer}>\n                {options.map((option, i) => (\n                    <div\n                        onClick={(): void => onSelect(option)}\n                        className={cx(css.option, {\n                            [css.focussed]: focussedIndex === i,\n                        })}\n                        key={option.value}\n                    >\n                        {option.label}\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default QuickInput;\n","import React from 'react';\nimport { useRecoilState } from 'recoil';\n\nimport languageState from '~/state/language';\nimport { getModalState } from '~/state/modal';\n\nimport Modal from '~/components/ui/Modal';\nimport QuickInput from '~/components/ui/QuickInput';\n\nimport { Languages } from '~/services/textmate';\n\ninterface Option {\n    value: keyof typeof Languages;\n    label: typeof Languages[keyof typeof Languages];\n}\n\nconst options: Option[] = Object.keys(Languages).map(language => ({\n    value: language as keyof typeof Languages,\n    label: Languages[language],\n}));\n\nconst LanguageSwitcher: React.FC = () => {\n    const [isOpen, setIsOpen] = useRecoilState(getModalState('language'));\n    const [language, setLanguage] = useRecoilState(languageState);\n\n    if (!isOpen) {\n        return null;\n    }\n\n    const onSelect = (option: Option): void => {\n        setLanguage(option.value);\n        setIsOpen(false);\n    };\n\n    return (\n        <Modal closeOnOutsideClick onClose={(): void => setIsOpen(false)}>\n            <QuickInput\n                value={language}\n                options={options}\n                onSelect={onSelect}\n                onClose={(): void => setIsOpen(false)}\n                inputProps={{\n                    placeholder: 'Select language mode',\n                    readOnly: true,\n                }}\n            />\n        </Modal>\n    );\n};\n\nexport default LanguageSwitcher;\n","import React from 'react';\nimport { useRecoilState } from 'recoil';\n\nimport { getModalState } from '~/state/modal';\nimport { themeStyle } from '~/state/theme';\n\nimport Modal from '~/components/ui/Modal';\nimport QuickInput from '~/components/ui/QuickInput';\n\ninterface Option {\n    label: string;\n    value: 'dark' | 'light';\n}\n\nconst options: Option[] = [\n    {\n        label: 'Dark',\n        value: 'dark',\n    },\n    {\n        label: 'Light',\n        value: 'light',\n    },\n];\n\nconst ThemeStyleSwitcher: React.FC = () => {\n    const [isOpen, setIsOpen] = useRecoilState(getModalState('themeStyle'));\n    const [style, setStyle] = useRecoilState(themeStyle);\n\n    if (!isOpen) {\n        return null;\n    }\n\n    const onSelect = (option: Option): void => {\n        setStyle(option.value);\n        setIsOpen(false);\n    };\n\n    return (\n        <Modal closeOnOutsideClick onClose={(): void => setIsOpen(false)}>\n            <QuickInput\n                value={style}\n                options={options}\n                onSelect={onSelect}\n                onClose={(): void => setIsOpen(false)}\n                inputProps={{\n                    placeholder: 'Select theme style',\n                    readOnly: true,\n                }}\n            />\n        </Modal>\n    );\n};\n\nexport default ThemeStyleSwitcher;\n","import React from 'react';\nimport { useRecoilState, useRecoilValue } from 'recoil';\n\nimport languageState from '~/state/language';\nimport { getModalState } from '~/state/modal';\nimport { themeStyle } from '~/state/theme';\n\nimport Item from '~/containers/StatusBar/components/Item';\n\nimport LanguageSwitcher from '~/components/LanguageSwitcher';\nimport ThemeStyleSwitcher from '~/components/ThemeStyleSwitcher';\n\nimport { Languages } from '~/services/textmate';\n\nimport css from './styles.module.scss';\n\nconst StatusBar: React.FC = () => {\n    const [languageOpen, openLanguageSwitcher] = useRecoilState(getModalState('language'));\n    const [themeStyleOpen, openThemeStyleSwitcher] = useRecoilState(getModalState('themeStyle'));\n\n    const language = useRecoilValue(languageState);\n    const [style] = useRecoilState(themeStyle);\n\n    return (\n        <>\n            <LanguageSwitcher />\n            <ThemeStyleSwitcher />\n            <div className={css.container}>\n                <div className=\"left\">main*</div>\n\n                <div className=\"right\">\n                    <Item\n                        onClick={(): void => openThemeStyleSwitcher(!themeStyleOpen)}\n                    >{`Style: ${style}`}</Item>\n                    <Item onClick={(): void => openLanguageSwitcher(!languageOpen)}>\n                        {Languages[language]}\n                    </Item>\n                    <Item>\n                        <a\n                            className={css.c_est_moi}\n                            href=\"http://github.com/el-angel\"\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                        >\n                            el angel @ github\n                        </a>\n                    </Item>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default StatusBar;\n","import React from 'react';\nimport { initialize as initSemantic, Presets } from '@anche/semantic-tokens-utilities';\nimport { initialize as initTextMate } from '@anche/textmate-utilities';\nimport { RecoilRoot } from 'recoil';\n\nimport { rawCode } from '~/state/code';\nimport { GENERAL_SCOPE_STATE_ID, generalScopeState } from '~/state/generalScopes';\nimport { ruleIds, RULES_STATE_ID, ruleState } from '~/state/rules';\nimport { SEMANTIC_STATE_ID, semanticTokenIds, semanticTokenState } from '~/state/semanticTokens';\nimport { themeStyle } from '~/state/theme';\n\nimport Code from '~/containers/Code';\nimport SettingsMenu from '~/containers/Code/components/SettingsMenu';\nimport Settings from '~/containers/Settings';\nimport Sidebar from '~/containers/Sidebar';\nimport StatusBar from '~/containers/StatusBar';\n\nimport storage from '~/services/storage';\n\nimport { atomKey } from '~/helpers/state';\n\nimport { GeneralScope, Rule, SemanticToken } from '~/types';\n\nimport css from './App.module.scss';\n\nconst ONIGASM_URL = `${process.env.PUBLIC_URL}/onigasm.wasm`;\n\nconst initializeState = ({ set }): void => {\n    const keys = storage.keys();\n\n    const ruleIdsArr = storage.get<string[]>(atomKey(RULES_STATE_ID, 'Ids')) || [];\n    set(ruleIds, ruleIdsArr);\n\n    const tokenIdsArr = storage.get<string[]>(atomKey(SEMANTIC_STATE_ID, 'Ids')) || [];\n\n    set(semanticTokenIds, tokenIdsArr);\n\n    for (const key of keys) {\n        if (key.includes(atomKey(RULES_STATE_ID, 'id__'))) {\n            const value = storage.get<Rule>(key)!;\n\n            if (ruleIdsArr.includes(value.id)) {\n                set(ruleState(value.id), value);\n            }\n            continue;\n        }\n\n        if (key.includes(atomKey(SEMANTIC_STATE_ID, 'id__'))) {\n            const value = storage.get<SemanticToken>(key)!;\n\n            if (tokenIdsArr.includes(value.id)) {\n                set(semanticTokenState(value.id), value);\n            }\n            continue;\n        }\n\n        if (key.includes(atomKey(GENERAL_SCOPE_STATE_ID, 'id__'))) {\n            const scope = storage.get<GeneralScope>(key)!;\n            set(generalScopeState(scope.id), scope);\n            continue;\n        }\n\n        if (key.includes(atomKey('Code', 'Raw'))) {\n            const code = storage.get<string>(key)!;\n            set(rawCode, code);\n            continue;\n        }\n\n        if (key.includes(atomKey('Theme', 'Style'))) {\n            const theme = storage.get<'light' | 'dark'>(key);\n            set(themeStyle, theme);\n            continue;\n        }\n    }\n};\n\nconst App: React.FC = () => {\n    const [ready, setReady] = React.useState(false);\n\n    React.useEffect(() => {\n        const body = document.querySelector('body');\n        if (body) {\n            body.setAttribute('style', `overflow: hidden`);\n        }\n\n        // initialize fallback scopes for semantic highlighting\n        initSemantic(Presets.vscode);\n\n        if (!ready) {\n            (async (): Promise<void> => {\n                await initTextMate(ONIGASM_URL);\n                setReady(true);\n            })();\n        }\n    }, [ready]);\n\n    if (!ready) {\n        return <div>starting up...</div>;\n    }\n\n    return (\n        <RecoilRoot initializeState={initializeState}>\n            <>\n                <div className={css.container}>\n                    <div className={css.sidebar}>\n                        <Sidebar />\n                    </div>\n                    <div className={css.main}>\n                        <div className={css.settings}>\n                            <SettingsMenu />\n                        </div>\n                        <div className={css.code}>\n                            <Code />\n                        </div>\n                        <div className={css.bottom}>\n                            <Settings />\n                        </div>\n                    </div>\n                    <div className={css.statusbar}>\n                        <StatusBar />\n                    </div>\n                </div>\n            </>\n        </RecoilRoot>\n    );\n};\n\nexport default App;\n","import React, { Profiler } from 'react';\n// eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n// @ts-ignore\nimport ReactDOM from 'react-dom';\nimport { unstable_trace as trace } from 'scheduler/tracing';\n\nimport App from './App';\n\nimport './index.css';\n\nReactDOM.render(\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    <Profiler id=\"Application\" onRender={(): void => {}}>\n        <React.StrictMode>\n            <App />\n        </React.StrictMode>\n    </Profiler>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}