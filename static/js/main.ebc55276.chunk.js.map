{"version":3,"sources":["containers/Settings/RuleSettings/styles.module.scss","../../textmate-grammar-parser/esm/init.js","../../textmate-grammar-parser/esm/index.js","services/language.ts","services/storage.ts","helpers/state.ts","state/language.ts","state/code.ts","state/theme.ts","constants/index.ts","helpers/generalScopesDefault.ts","state/generalScopes/index.ts","state/rules/index.ts","containers/Code/components/CodeInput/index.tsx","state/rules/edit.ts","model/rule.ts","hooks/useAddRule.ts","helpers/ruleMatch.ts","state/generalScopes/edit.ts","state/mode.ts","state/rules/active.ts","selectors/activateRule.ts","containers/Code/components/Info/index.tsx","containers/Code/components/Line/index.tsx","helpers/getContrastColor.ts","containers/Code/components/SubLine/index.tsx","hooks/useViewRule.ts","containers/Code/components/CodeView/index.tsx","containers/Code/components/Editor/index.tsx","containers/Code/index.tsx","containers/Code/components/SettingsMenu/Item.tsx","hooks/useReset.ts","types/theme.guard.ts","containers/Code/components/SettingsMenu/Items/Open.tsx","hooks/useOutsideClick.ts","containers/Code/components/SettingsMenu/Items/CustomizeCode.tsx","containers/Code/components/SettingsMenu/Items/Export.tsx","components/ui/Button/index.tsx","components/ui/Confirm/index.tsx","components/ui/Modal/index.tsx","services/dialog.tsx","containers/Code/components/SettingsMenu/Items/New.tsx","containers/Code/components/SettingsMenu/index.tsx","containers/Settings/components/ColorPicker/index.tsx","containers/Settings/components/NameInput/index.tsx","helpers/swatches.ts","containers/Settings/components/Swatches/index.tsx","components/ui/PanelItem/index.tsx","components/ui/Panel/index.tsx","containers/Settings/GeneralSettings/index.tsx","containers/Settings/components/FontStyle/index.tsx","containers/Settings/components/ScopesList/index.tsx","hooks/useDeleteRule.ts","helpers/getExistingScopes.ts","containers/Settings/RuleSettings/index.tsx","containers/Settings/index.tsx","components/ui/SidebarItem/index.tsx","containers/Sidebar/components/GeneralScope/index.tsx","containers/Sidebar/components/General/index.tsx","containers/Sidebar/components/Rule/index.tsx","containers/Sidebar/components/Rules/index.tsx","containers/Sidebar/components/Toolbar/index.tsx","selectors/generalScopeCSS.ts","helpers/stringifyCss.ts","selectors/rulesCSS.ts","containers/Sidebar/index.tsx","state/modal.ts","containers/StatusBar/components/Item/index.tsx","components/ui/QuickInput/index.tsx","components/LanguageSwitcher/index.tsx","components/ThemeStyleSwitcher/index.tsx","containers/StatusBar/index.tsx","App.tsx","index.tsx","App.module.scss","containers/Code/components/SettingsMenu/styles.module.scss","containers/Sidebar/components/Toolbar/styles.module.scss","components/ui/QuickInput/styles.module.scss","containers/Code/components/Editor/styles.module.scss","components/ui/SidebarItem/styles.module.scss","containers/Settings/components/ColorPicker/styles.module.scss","components/ui/Panel/styles.module.scss","containers/Settings/components/ScopesList/styles.module.scss","containers/Code/components/Info/styles.module.scss","components/ui/Confirm/styles.module.scss","components/ui/Modal/styles.module.scss","containers/Settings/components/NameInput/styles.module.scss","containers/Settings/components/Swatches/styles.module.scss","containers/Settings/GeneralSettings/styles.module.scss","containers/Code/components/CodeInput/styles.module.scss","containers/Code/components/SubLine/styles.module.scss","containers/Settings/components/FontStyle/styles.module.scss","containers/Sidebar/styles.module.scss","containers/StatusBar/styles.module.scss","containers/Code/components/Line/styles.module.scss","containers/Code/components/CodeView/styles.module.scss","components/ui/Button/styles.module.scss","components/ui/PanelItem/styles.module.scss","containers/StatusBar/components/Item/styles.module.scss"],"names":["module","exports","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","initialize","onigasmUrl","fetch","response","arrayBuffer","buffer","loadWASM","GrammarHelper","opts","this","_getGrammarDefinition","scope","_getLanguage","language","format","content","_typeCheck","Object","keys","_filePaths","includes","filePaths","_registry","Registry","getGrammarDefinition","ok","Error","text","grammar","JSON","parse","loadGrammar","_code","split","code","scopeName","lines","i","length","line","lineTokens","tokenizeLine","ruleStack","formattedLine","number","j","token","tokens","linePart","substring","startIndex","endIndex","scopes","filter","indexOf","push","Languages","languageService","StorageService","key","localStorage","getItem","data","setItem","stringify","removeItem","storage","stateKey","type","name","toUpperCase","atomKey","selectorKey","languageState","atom","default","selector","get","_rawCode","rawCode","set","input","editCodeState","parsedCode","a","_themeStyle","themeStyle","_style","style","DefaultValue","FONT_STYLE","GENERAL_SCOPES","colors","light","dark","generalScopesDefault","focusBorder","foreground","getScopeDefault","color","_scopesFamily","atomFamily","selectorFamily","param","generalScopeManager","id","remove","__meta","touched","getAllScopes","map","_rulesIdState","persistence_UNSTABLE","getRuleIds","ruleIds","_rulesState","settings","fontStyle","getAllRules","ruleManager","rule","ids","state","_id","CodeInput","useRecoilState","setRawCode","isEditing","textareaRef","React","useRef","useEffect","current","select","ref","spellCheck","className","cx","css","textArea","codeText","onChange","evt","target","editRuleState","createName","createRule","useAddRule","useRecoilCallback","snapshot","filteredScopes","splitted","pop","join","getPromise","uniqueId","_match","queries","winner","forEach","query","candidate","_scopes","queryScopes","matchIndexes","runner","every","some","match","affix","substr","_isDescendant","splice","parents","_create","winnerLast","candidateLast","b","_compare","ruleMatch","rules","reduce","acc","_rule","editGeneralScopeState","undefined","_mode","mode","newMode","activeScope","activateRuleByScope","_infoState","infoState","sublineSelected","Info","definedRules","useRecoilValue","activateRule","useSetRecoilState","activeRule","updateRule","addRule","info","reverse","exist","exists","onClick","regex","RegExp","_scope","test","formattedScope","onClickScope","memo","lineNumber","children","getContrastColor","chroma","contrast","getClass","empty","scopesSplit","subline","selected","onHover","useState","setActiveScope","setRule","editorBackground","trim","backgroundColor","onMouseEnter","useViewRule","CodeView","codeObj","setSelected","setInfoScopes","viewRule","onHoverSubline","useCallback","onClickSubline","isSelected","lineNumbers","_","sublineKey","Editor","outer","container","codeWrapper","Code","Suspense","fallback","SettingsMenuItem","useReset","_reset","reset","updatedRule","isTheme","obj","Array","isArray","tokenColors","getFileJson","event","files","reader","FileReader","onload","readAsText","Open","inputRef","setGeneralScope","onSelectFile","json","tokenColor","accept","display","click","useOutsideClick","elem","callback","clickListener","contains","document","addEventListener","removeEventListener","CustomizeCode","setEditCode","createTheme","generalScopes","semanticHighlighting","ruleTransformer","Export","theme","createElement","dataStr","encodeURIComponent","setAttribute","body","appendChild","Button","button","Confirm","onConfirm","onReject","buttons","_Modal","onClose","closeOnOutsideClick","position","overlay","isOutside","Modal","createDialogElement","props","dialogRootElement","removeChild","ReactDOM","createPortal","querySelector","dialog","_unmountWrap","unmountComponentAtNode","_content","render","New","SettingsMenu","open","setOpen","containerRef","settingsIcon","opacity","menu","divider","ColorPicker","newColorCallback","debounce","_onChange","hexValue","picker","NameInput","currentValue","readonly","editing","setEditing","setValue","onInputBlur","onKeyDown","readOnly","editable","onBlur","getScale","scale","getSwatches","hex","mix","Swatches","onColorSelect","swatches","setSwatches","group","swatchGroup","swatch","PanelItem","item","Panel","toolbar","close","fontSize","GeneralSettings","setScope","generalScope","updateGeneralScope","onChangeColor","left","tools","colorContainer","TYPE_MAP","BoldIcon","ItalicIcon","UnderlineIcon","FontStyle","enabled","SVG","icon","ScopesList","onDelete","existingScopes","scopesReversed","warning","role","aria-label","useDeleteRule","editingId","setEditId","getExistingScopes","getDefinedScopes","isDefined","NEW_SCOPE_KEYS","RuleSettings","deleteRule","setViewRule","newScope","setNewScope","toggleFontStyle","styles","onAddScopeInputChange","onAddScopeInputKeyDown","preventDefault","top","scopesList","index","findIndex","sc","newScopes","addScope","addScopeInput","placeholder","Settings","SidebarItem","isActive","title","showWarning","active","GeneralScope","editingScope","editScope","General","Rule","editingRuleId","Rules","Toolbar","currentMode","setMode","header","getGeneralScopesCSS","formatted","replace","stringifyCss","property","cssProperty","m","toLowerCase","getRulesCSS","ruleCss","cssAcc","fontWeight","textDecoration","Sidebar","ruleStyle","generalStyle","modalIds","_modalState","getModalState","isOpen","Item","QuickInput","options","onSelect","inputProps","option","focussedIndex","setFocussedIndex","keydownHandler","window","inputContainer","optionContainer","focussed","label","LanguageSwitcher","setIsOpen","setLanguage","ThemeStyleSwitcher","setStyle","StatusBar","languageOpen","openLanguageSwitcher","themeStyleOpen","openThemeStyleSwitcher","c_est_moi","href","rel","ONIGASM_URL","process","initializeState","App","ready","setReady","sidebar","main","bottom","statusbar","onRender","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ebc55276.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"src-containers-Settings-RuleSettings-styles-module__container--2r2dM\",\"colorContainer\":\"src-containers-Settings-RuleSettings-styles-module__colorContainer--1FvYs\",\"top\":\"src-containers-Settings-RuleSettings-styles-module__top--2A3DI\",\"left\":\"src-containers-Settings-RuleSettings-styles-module__left--3S2TL\",\"tools\":\"src-containers-Settings-RuleSettings-styles-module__tools--ZMjTI\",\"picker\":\"src-containers-Settings-RuleSettings-styles-module__picker--VmP30\",\"delete\":\"src-containers-Settings-RuleSettings-styles-module__delete--23Kh5\",\"scopesList\":\"src-containers-Settings-RuleSettings-styles-module__scopesList--RxJbG\",\"addScope\":\"src-containers-Settings-RuleSettings-styles-module__addScope--7ZgO8\",\"addScopeInput\":\"src-containers-Settings-RuleSettings-styles-module__addScopeInput--3Hclo\"};","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { loadWASM } from 'onigasm';\nconst initialize = (onigasmUrl) => __awaiter(void 0, void 0, void 0, function* () {\n    const response = yield fetch(onigasmUrl);\n    const buffer = yield response.arrayBuffer();\n    yield loadWASM(buffer);\n});\nexport default initialize;\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Registry } from 'monaco-textmate';\nimport initialize from './init';\nclass GrammarHelper {\n    constructor(opts) {\n        this._getGrammarDefinition = (scope) => __awaiter(this, void 0, void 0, function* () {\n            const language = yield this._getLanguage(scope);\n            return {\n                format: 'json',\n                content: language,\n            };\n        });\n        this._typeCheck = (scope) => {\n            const scopes = Object.keys(this._filePaths);\n            if (scopes.includes(scope)) {\n                return true;\n            }\n            return false;\n        };\n        this._filePaths = opts.filePaths;\n        this._registry = new Registry({\n            getGrammarDefinition: this._getGrammarDefinition,\n        });\n    }\n    _getLanguage(scope) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield fetch(this._filePaths[scope]);\n            if (!response.ok) {\n                throw new Error('Something failed when doing a request to fetch the grammar file.');\n            }\n            const grammar = yield response.text();\n            return JSON.parse(grammar);\n        });\n    }\n    loadGrammar(scope) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this._typeCheck(scope)) {\n                throw new Error(`\"${scope}\" grammar is not supported. Please add scopename and path to Options.filePaths.`);\n            }\n            const grammar = yield this._registry.loadGrammar(scope);\n            return grammar;\n        });\n    }\n    parse(_code, scope) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const grammar = yield this.loadGrammar(scope);\n            const text = _code.split('\\n');\n            const code = {\n                scopeName: scope,\n                lines: [],\n            };\n            let ruleStack;\n            for (let i = 0; i < text.length; i++) {\n                const line = text[i];\n                const lineTokens = grammar.tokenizeLine(line, ruleStack);\n                const formattedLine = {\n                    number: i,\n                    content: [],\n                };\n                for (let j = 0; j < lineTokens.tokens.length; j++) {\n                    const token = lineTokens.tokens[j];\n                    const linePart = {\n                        content: line.substring(token.startIndex, token.endIndex),\n                        scopes: token.scopes.filter((e, i) => token.scopes.indexOf(e) === i),\n                    };\n                    formattedLine.content.push(linePart);\n                }\n                code.lines.push(formattedLine);\n                ruleStack = lineTokens.ruleStack;\n            }\n            return code;\n        });\n    }\n}\nexport { GrammarHelper };\nexport { initialize };\n","import { GrammarHelper } from '@anche/textmate-grammar-parser';\n\nexport const Languages = {\n  'source.ts': 'TypeScript',\n  'source.tsx': 'TypeScript React',\n  'source.js': 'JavaScript',\n  'source.jsx': 'JavaScript React',\n  'source.css': 'CSS',\n  'text.html.basic': 'HTML',\n  'source.json': 'JSON',\n};\n\nconst languageService = new GrammarHelper({\n  filePaths: {\n    'source.ts': '/grammar/typescript.json',\n    'source.tsx': '/grammar/typescriptreact.json',\n    'source.js': '/grammar/javascript.json',\n    'source.jsx': '/grammar/javascriptreact.json',\n    'source.css': '/grammar/css.json',\n    'text.html.basic': '/grammar/html.json',\n    'source.json': '/grammar/json.json',\n  },\n});\n\nexport default languageService;\n","import { StorageManager } from '~/types/storage';\n\nclass StorageService implements StorageManager {\n  public get<T>(key: string): Maybe<T> {\n    const value = localStorage.getItem(key);\n\n    if (!value) {\n      return undefined;\n    }\n\n    return JSON.parse(value);\n  }\n\n  public set(key: string, data: unknown): void {\n    localStorage.setItem(key, JSON.stringify(data));\n  }\n\n  public remove(key: string): void {\n    localStorage.removeItem(key);\n  }\n\n  public keys(): string[] {\n    return Object.keys(localStorage);\n  }\n}\n\nconst storage = new StorageService();\n\nexport default storage;\n","const stateKey = (type: 'atom' | 'selector', name: string): string =>\n  `${type.toUpperCase()}/${name}`;\n\nexport const atomKey = (name: string): string => stateKey('atom', name);\nexport const selectorKey = (name: string): string => stateKey('selector', name);\n","import { atom, selector } from 'recoil';\n\nimport { Languages } from '~/services/language';\n\nimport { atomKey, selectorKey } from '~/helpers/state';\n\nexport const languageState = atom<keyof typeof Languages>({\n  key: atomKey('Language'),\n  default: 'source.tsx',\n});\n\nexport const readibleLanguage = selector({\n  key: selectorKey('ReadibleLanguage'),\n  get: ({ get }) => {\n    const language = get(languageState);\n    return Languages[language];\n  },\n});\n\nexport default languageState;\n","import { Code } from '@anche/textmate-grammar-parser';\nimport { atom, selector } from 'recoil';\n\nimport languageService from '~/services/language';\nimport storage from '~/services/storage';\n\nimport { atomKey, selectorKey } from '~/helpers/state';\n\nimport languageState from './language';\n\nconst initCode = `\nimport React from 'react';\nimport main from '~/state/main';\nimport { getAll } from '~/helpers/getAll';\nimport Button from '../../component/Button';\n\nimport './style.css';\n\ninterface Props {\n  title: string;\n  content: string;\n  onClick: (...args: any[]) => void,\n}\n\nconst Viewer: React.FC<Props>  = ({ title, content, onClick }) => {\n  return (\n    <div>\n      <h1>{title}</h1>\n\n      <p>{content}</p>\n\n      <button\n        type=\"button\"\n        onClick={onClick}\n        className=\"button\"\n        >\n          Well, what are you waiting for?\n        </button>\n    </div>\n  );\n}\n\nexport default Viewer;\n`;\n\nconst _rawCode = atom<string>({\n  key: atomKey('RawCode'),\n  default: initCode,\n});\n\nexport const rawCode = selector<string>({\n  key: selectorKey('RawCode__Selector'),\n  get: ({ get }) => {\n    return get(_rawCode);\n  },\n  set: ({ set, get }, input) => {\n    set(_rawCode, input);\n\n    /**\n     * @TODO Replace when Atom Effects is introduced\n     */\n    storage.set(atomKey('RawCode'), get(_rawCode));\n  },\n});\n\nexport const editCodeState = atom<boolean>({\n  key: atomKey('EditCode'),\n  default: false,\n});\n\nconst parsedCode = selector<Code>({\n  key: selectorKey('Code'),\n  get: async ({ get }) => {\n    const code = get(_rawCode);\n    const language = get(languageState);\n    const response = await languageService.parse(code, language);\n\n    return response;\n  },\n});\n\nexport const selectedSubline = atom<Nullable<string>>({\n  key: atomKey('SelectedSubline'),\n  default: '',\n});\n\nexport default parsedCode;\n","import { atom, DefaultValue, selector } from 'recoil';\n\nimport storage from '~/services/storage';\n\nimport { atomKey, selectorKey } from '~/helpers/state';\n\ntype Theme = 'dark' | 'light';\n\nconst _themeStyle = atom<Theme>({\n  key: atomKey('Theme'),\n  default: 'dark',\n});\n\nexport const themeStyle = selector<Theme>({\n  key: selectorKey('Theme'),\n  get: ({ get }) => {\n    return get(_themeStyle);\n  },\n  set: ({ set }, _style) => {\n    let style = _style;\n    if (_style instanceof DefaultValue) {\n      style = 'dark';\n    }\n    storage.set(atomKey('Theme'), style);\n    set(_themeStyle, style);\n  },\n});\n","export const FONT_STYLE = <const>{\n  BOLD: 'bold',\n  ITALIC: 'italic',\n  UNDERLINE: 'underline',\n};\n\nexport const GENERAL_SCOPES = <const>[\n  'button.background',\n  'button.foreground',\n  'button.hoverBackground',\n  'editor.background',\n  'editor.foreground',\n  'editor.selectionBackground',\n  'editor.selectionForeground',\n  'editorGutter.background',\n  'editorLineNumber.foreground',\n  'focusBorder',\n  'foreground',\n  'input.background',\n  'input.border',\n  'input.foreground',\n  'input.placeholderForeground',\n  'list.focusBackground',\n  'list.focusForeground',\n  'list.hoverBackground',\n  'list.hoverForeground',\n  'panel.background',\n  'panel.border',\n  'quickInput.background',\n  'quickInput.foreground',\n  'sideBar.background',\n  'sideBar.border',\n  'sideBar.foreground',\n  'statusBar.background',\n  'statusBar.border',\n  'statusBar.foreground',\n  'statusBarItem.activeBackground',\n  'statusBarItem.hoverBackground',\n];\n","import { GENERAL_SCOPES } from '~/constants';\n\ntype Scopes = typeof GENERAL_SCOPES[number];\n\ntype Defaults = {\n  [key in Scopes]: {\n    [key in 'light' | 'dark']: string;\n  };\n};\n\nconst colors = (light: string, dark: string): { light: string; dark: string } => ({ light, dark });\n\nconst generalScopesDefault: Defaults = {\n  'button.background': colors('#e36d6d', '#e36d6d'),\n  'button.foreground': colors('#333333', '#333333'),\n  'button.hoverBackground': colors('#b74e4e', '#b74e4e'),\n  'editor.background': colors('#ffffff', '#1c1c1c'),\n  'editor.foreground': colors('#333333', '#ffffff'),\n  'editor.selectionBackground': colors('#f2d0a1', '#efafaf'),\n  'editor.selectionForeground': colors('#333333', '#ffffff'),\n  'editorGutter.background': colors('ffffff', '#1c1c1c'),\n  'editorLineNumber.foreground': colors('#cccccc', '#585858'),\n  focusBorder: colors('#e8e8e8', '#171717'),\n  foreground: colors('#333333', '#eeeeee'),\n  'input.background': colors('#ffffff', '#2c2c2b'),\n  'input.border': colors('#d9d9d9', '#141414'),\n  'input.foreground': colors('#333333', '#ffffff'),\n  'input.placeholderForeground': colors('#999999', '#737373'),\n  'list.focusBackground': colors('#d1d1d1', '#525252'),\n  'list.focusForeground': colors('#333333', '#cfcfcf'),\n  'list.hoverBackground': colors('#5c5c5c', '#525252'),\n  'list.hoverForeground': colors('#333333', '#eeeeee'),\n  'panel.background': colors('#ffffff', '#2a2828'),\n  'panel.border': colors('#d9d9d9', '#141414'),\n  'quickInput.background': colors('#f5f5f5', '#242424'),\n  'quickInput.foreground': colors('#545454', '#ffffff'),\n  'sideBar.background': colors('#ffffff', '#111111'),\n  'sideBar.border': colors('#d9d9d9', '#121212'),\n  'sideBar.foreground': colors('#333333', '#f9f9f9'),\n  'statusBar.background': colors('#242424', '#1a1a1a'),\n  'statusBar.border': colors('#878787', '#000000'),\n  'statusBar.foreground': colors('#ffffff', '#eeeeee'),\n  'statusBarItem.activeBackground': colors('#777777', '#333333'),\n  'statusBarItem.hoverBackground': colors('#313131', '#666666'),\n};\n\nexport default generalScopesDefault;\n","import { atomFamily, DefaultValue, selector, selectorFamily } from 'recoil';\n\nimport { themeStyle } from '~/state/theme';\n\nimport storage from '~/services/storage';\n\nimport { GENERAL_SCOPES } from '~/constants';\n\nimport generalScopesDefault from '~/helpers/generalScopesDefault';\nimport { atomKey, selectorKey } from '~/helpers/state';\n\nimport { GeneralScope } from '~/types';\n\nconst getScopeDefault = (scope: string, style: 'light' | 'dark') => ({\n  scope,\n  color: generalScopesDefault[scope][style],\n});\n\nexport const _scopesFamily = atomFamily<GeneralScope, string>({\n  key: atomKey('GeneralScopesFamily'),\n  default: selectorFamily({\n    key: selectorKey('GeneralScopesFamily/Default'),\n    get: param => ({ get }): GeneralScope => {\n      const style = get(themeStyle);\n\n      return getScopeDefault(param, style);\n    },\n  }),\n});\n\nconst generalScopeManager = selectorFamily<Maybe<GeneralScope>, Maybe<string>>({\n  key: selectorKey('GeneralScopeManager'),\n  get: id => ({ get }): Maybe<GeneralScope> => {\n    if (!id) {\n      return undefined;\n    }\n\n    const scope = get(_scopesFamily(id));\n\n    return scope;\n  },\n  set: id => ({ get, set }, input): void => {\n    if (!id) {\n      return;\n    }\n\n    // RESET\n    if (input instanceof DefaultValue) {\n      const style = get(themeStyle);\n\n      set(_scopesFamily(id), {\n        ...getScopeDefault(id, style),\n      });\n      storage.remove(atomKey(`GeneralScopesFamily__\"${id}\"`));\n      return;\n    }\n\n    set(_scopesFamily(id), {\n      ...(input as GeneralScope),\n      __meta: {\n        touched: true,\n      },\n    });\n\n    const scope = get(_scopesFamily(id));\n\n    /**\n     * @TODO Replace when Atom Effects is introduced\n     */\n    storage.set(atomKey(`GeneralScopesFamily__\"${scope.scope}\"`), scope);\n  },\n});\n\nexport const getAllScopes = selector<GeneralScope[]>({\n  key: selectorKey('AllScopes'),\n  get: ({ get }) => {\n    const scopes = GENERAL_SCOPES.map(name => get(generalScopeManager(name))) as GeneralScope[];\n\n    return scopes;\n  },\n});\n\nexport default generalScopeManager;\n","import { atom, atomFamily, selector, selectorFamily } from 'recoil';\n\nimport storage from '~/services/storage';\n\nimport { atomKey, selectorKey } from '~/helpers/state';\n\nimport { Rule } from '~/types';\n\nconst _rulesIdState = atom<string[]>({\n  key: atomKey('RulesIds'),\n  default: [],\n  // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n  // @ts-ignore\n  // eslint-disable-next-line @typescript-eslint/camelcase\n  persistence_UNSTABLE: true,\n});\n\nexport const getRuleIds = selector<string[]>({\n  key: selectorKey('RulesIds'),\n  get: ({ get }) => {\n    const ids = get(_rulesIdState);\n    return ids;\n  },\n});\n\nexport const ruleIds = selector<string[]>({\n  key: selectorKey('RulesIds_SET'),\n  get: ({ get }) => get(getRuleIds),\n  set: ({ set }, input) => {\n    set(_rulesIdState, input || []);\n    storage.set(atomKey('RulesIds'), input || []);\n  },\n});\n\nconst _rulesState = atomFamily<Rule, string>({\n  key: atomKey('Rules'),\n  default: {\n    id: '',\n    name: '',\n    scope: [],\n    settings: {\n      foreground: '#000000',\n      fontStyle: [],\n    },\n    __meta: {},\n  },\n});\n\nexport const getAllRules = selector<Rule[]>({\n  key: selectorKey('AllRules'),\n  get: ({ get }) => {\n    const ids = get(_rulesIdState);\n\n    const state: Rule[] = ids.map(id => get(_rulesState(id)));\n\n    return state;\n  },\n});\n\nconst ruleManager = selectorFamily<Maybe<Rule>, Maybe<string>>({\n  key: selectorKey('RuleManager'),\n  get: (id: Maybe<string>) => ({ get }): Maybe<Rule> => {\n    if (!id) {\n      return undefined;\n    }\n\n    const state = get(_rulesState(id));\n    return state;\n  },\n  set: id => ({ set, get }, input): void => {\n    if (!id) {\n      return;\n    }\n\n    const rule = _rulesState(id);\n\n    const ids = get(_rulesIdState);\n\n    // new rule, add id to IdState\n    if (!ids.includes(id)) {\n      set(ruleIds, [...ids, id]);\n    }\n\n    // delete rule\n    if ((input as Rule)?.__meta?.state === 'deleted') {\n      set(\n        ruleIds,\n        ids.filter(_id => _id !== id),\n      );\n\n      /**\n       * @TODO Replace when Atom Effects is introduced\n       */\n      storage.remove(atomKey(`Rules__\"${id}\"`));\n      return;\n    }\n\n    set(rule, {\n      ...(input as Rule),\n      id,\n      __meta: {\n        touched: true,\n      },\n    });\n\n    /**\n     * @TODO Replace when Atom Effects is introduced\n     */\n    storage.set(atomKey(`Rules__\"${id}\"`), get(rule));\n  },\n});\n\nexport default ruleManager;\n","import React from 'react';\nimport cx from 'classnames';\nimport { useRecoilState } from 'recoil';\n\nimport { editCodeState, rawCode } from '~/state/code';\n\nimport css from './styles.module.scss';\n\nconst CodeInput: React.FC = () => {\n  const [_rawCode, setRawCode] = useRecoilState(rawCode);\n  const [isEditing] = useRecoilState(editCodeState);\n\n  const textareaRef = React.useRef<HTMLTextAreaElement>(null);\n\n  React.useEffect(() => {\n    if (textareaRef) {\n      textareaRef.current?.select();\n    }\n  }, [isEditing]);\n\n  return (\n    <textarea\n      ref={textareaRef}\n      spellCheck={false}\n      className={cx(css.textArea, css.codeText)}\n      onChange={(evt): void => setRawCode(evt.target.value)}\n      value={_rawCode}\n    />\n  );\n};\n\nexport default CodeInput;\n","import { atom } from 'recoil';\n\nimport { atomKey } from '~/helpers/state';\n\nimport { Rule } from '~/types';\n\nconst editRuleState = atom<Rule['id']>({\n  key: atomKey('EditRuleID'),\n  default: '',\n});\n\nexport default editRuleState;\n","import { Rule } from '~/types';\n\nconst createName = (input?: Partial<Rule>): string => {\n  if (!input) {\n    return '';\n  }\n\n  if (input.name) {\n    return input.name;\n  }\n\n  if (typeof input.scope === 'string') {\n    return input.scope;\n  }\n\n  if (typeof input.scope === 'object' && input.scope.length) {\n    return input.scope[0];\n  }\n\n  return '';\n};\n\nconst createRule = (input: Partial<Rule> & { id: string }): Rule => {\n  const rule = {\n    id: input.id,\n    name: createName(input),\n    scope: input?.scope || [],\n    settings: {\n      foreground: input?.settings?.foreground || '#a0988a',\n      fontStyle: input?.settings?.fontStyle || [],\n    },\n  };\n\n  return rule;\n};\n\nexport default createRule;\n","import { uniqueId } from 'lodash';\nimport { useRecoilCallback } from 'recoil';\n\nimport ruleManager, { getRuleIds } from '~/state/rules';\n\nimport createRule from '~/model/rule';\n\nimport { Rule } from '~/types';\n\ntype ReturnType = (input?: Partial<Rule>) => void;\n\nconst useAddRule = (): ReturnType => {\n  const addRule = useRecoilCallback(\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    ({ set, snapshot }) => async (input?: Partial<Rule>): Promise<void> => {\n      const filteredScopes = (input?.scope || []).map(scope => {\n        const splitted = scope.split('.');\n        // remove extension from scope to support more language\n        // otherwise theme will only work for this language\n        splitted.pop();\n        return splitted.join('.');\n      });\n\n      const ids = await snapshot.getPromise(getRuleIds);\n\n      let id = uniqueId();\n\n      while (ids.includes(id)) {\n        id = uniqueId();\n      }\n\n      const rule = createRule({\n        ...input,\n        id,\n        scope: filteredScopes,\n      });\n\n      set(ruleManager(id), rule);\n    },\n    [],\n  );\n\n  return addRule;\n};\n\nexport default useAddRule;\n","import { Rule } from '~/types';\n\ninterface Match {\n  query: string;\n  parents: string[];\n  scope: string;\n  matchIndexes: number[];\n}\n\ninterface RuleMatch {\n  rule: Rule;\n  query: string;\n}\n\nconst _isDescendant = (query: string, scope: string): boolean => {\n  if (query === scope) {\n    return true;\n  }\n\n  /**\n   * query = meta.tag\n   * scope = meta.tag-without-attributes,\n   * this should not match, so we affix query with a \".\", so we know\n   * it's a correct match\n   *\n   * i.e.:\n   * query = meta.tag\n   * scope = meta.tag.tsx\n   * this should match\n   */\n  const affix = query + '.';\n\n  return affix === scope.substr(0, affix.length);\n};\n\nconst _create = (query: string, scopes: string[]): Nullable<Match> => {\n  const _scopes = [...scopes];\n\n  const queryScopes = query.split(/ /g);\n\n  const matchIndexes: number[] = [];\n  let runner = 0;\n  const passed = queryScopes.every(query => {\n    return [..._scopes].some(scope => {\n      const match = _isDescendant(query, scope);\n\n      _scopes.splice(0, 1);\n\n      if (match) {\n        matchIndexes.push(runner);\n      }\n\n      runner++;\n\n      return match;\n    });\n  });\n\n  if (passed) {\n    return {\n      query,\n      scope: queryScopes.pop()!,\n      parents: queryScopes,\n      matchIndexes,\n    };\n  }\n\n  return null;\n};\n\nconst _compare = (a: Match, b: Match): number => {\n  // longer scope wins\n  // meta.block.tsx > meta.block\n  if (a.scope !== b.scope) {\n    return a.scope.length - b.scope.length;\n  }\n\n  // scopes are equal, compare parents length\n  if (a.parents.length !== b.parents.length) {\n    return a.parents.length - b.parents.length;\n  }\n\n  for (let i = 0; i < a.parents.length; i++) {\n    if (a.parents[i] !== b.parents[i]) {\n      return a.parents[i].length - b.parents[i].length;\n    }\n  }\n\n  return 0;\n};\n\nexport const _match = (queries: string[], scopes: string[]): Nullable<Match> => {\n  let winner: Nullable<Match> = null;\n\n  queries.forEach(query => {\n    const candidate = _create(query, scopes);\n\n    if (!candidate) {\n      return;\n    }\n\n    if (!winner) {\n      winner = candidate;\n      return;\n    }\n\n    const winnerLast = winner.matchIndexes[winner.matchIndexes.length - 1];\n    const candidateLast = candidate.matchIndexes[candidate.matchIndexes.length - 1];\n\n    if (candidateLast > winnerLast) {\n      winner = candidate;\n      return;\n    }\n\n    if (winnerLast === candidateLast) {\n      if (_compare(candidate, winner) > 0) {\n        winner = candidate;\n      }\n    }\n  });\n\n  return winner as Nullable<Match>;\n};\n\nconst ruleMatch = (rules: Rule[], scopes: string[]): Nullable<RuleMatch> => {\n  const queries = rules.reduce((acc: string[], rule) => [...acc, ...rule.scope], []);\n\n  const match = _match(queries, scopes);\n\n  let rule: Nullable<Rule> = null;\n\n  rules.some(_rule => {\n    if (match?.query && _rule.scope.includes(match.query)) {\n      rule = _rule;\n      return true;\n    }\n\n    return false;\n  });\n\n  if (rule) {\n    return {\n      rule,\n      query: match!.query,\n    };\n  }\n\n  return null;\n};\n\nexport default ruleMatch;\n","import { atom } from 'recoil';\n\nimport { atomKey } from '~/helpers/state';\n\nimport { GeneralScope } from '~/types';\n\nconst editGeneralScopeState = atom<Maybe<GeneralScope['scope']>>({\n  key: atomKey('EditGeneralScopeID'),\n  default: undefined,\n});\n\nexport default editGeneralScopeState;\n","import { atom, selector } from 'recoil';\n\nimport editGeneralScopeState from '~/state/generalScopes/edit';\nimport editRuleState from '~/state/rules/edit';\n\nimport { atomKey, selectorKey } from './../helpers/state';\n\ntype Mode = 'rules' | 'general';\n\nconst _mode = atom<Mode>({\n  key: atomKey('Mode'),\n  default: 'rules',\n});\n\nconst mode = selector<Mode>({\n  key: selectorKey('Mode'),\n  get: ({ get }) => get(_mode),\n  set: ({ set }, newMode) => {\n    set(editRuleState, '');\n    set(editGeneralScopeState, '');\n\n    set(_mode, newMode);\n  },\n});\n\nexport default mode;\n","import { atom } from 'recoil';\n\nimport { atomKey } from '~/helpers/state';\n\nconst activeScope = atom<string>({\n  key: atomKey('ActiveScope'),\n  default: '',\n});\n\nexport default activeScope;\n","import { selector } from 'recoil';\n\nimport mode from '~/state/mode';\nimport { getAllRules } from '~/state/rules';\nimport activeScope from '~/state/rules/active';\nimport editRuleState from '~/state/rules/edit';\n\nimport ruleMatch from '~/helpers/ruleMatch';\nimport { selectorKey } from '~/helpers/state';\n\nexport const activateRuleByScope = selector<string>({\n  key: selectorKey('ActivateRuleByScope'),\n  get: ({ get }) => get(activeScope),\n  set: ({ get, set }, input) => {\n    const scope = input as string;\n\n    set(activeScope, scope);\n    const rules = get(getAllRules);\n\n    const rule = ruleMatch(rules, [scope]);\n\n    if (rule) {\n      set(mode, 'rules');\n      set(editRuleState, rule.rule.id);\n    }\n  },\n});\n","import React from 'react';\nimport cx from 'classnames';\nimport { atom, selector, useRecoilState, useRecoilValue, useSetRecoilState } from 'recoil';\n\nimport ruleManager, { getAllRules } from '~/state/rules';\nimport editRuleState from '~/state/rules/edit';\n\nimport { sublineSelected } from '~/containers/Code/components/CodeView';\n\nimport useAddRule from '~/hooks/useAddRule';\n\nimport ruleMatch from '~/helpers/ruleMatch';\n\nimport css from './styles.module.scss';\n\nimport { activateRuleByScope } from '~/selectors/activateRule';\n\nexport const _infoState = atom<string[]>({\n  key: 'scopesInfoState',\n  default: [],\n});\n\nexport const infoState = selector<string[]>({\n  key: 'scopesInfoSelector',\n  get: ({ get }) => get(_infoState),\n  set: ({ set, get }, input) => {\n    const selected = get(sublineSelected);\n\n    if (selected) {\n      return;\n    }\n\n    set(_infoState, input);\n  },\n});\n\nconst Info: React.FC = () => {\n  const definedRules = useRecoilValue(getAllRules);\n  const scopes = useRecoilValue(infoState);\n  const activateRule = useSetRecoilState(activateRuleByScope);\n  const id = useRecoilValue(editRuleState);\n\n  const [activeRule, updateRule] = useRecoilState(ruleManager(id));\n\n  const addRule = useAddRule();\n\n  const onClickScope = (scope: string): void => {\n    const rule = ruleMatch(definedRules, [scope]);\n\n    if (rule) {\n      activateRule(scope);\n      return;\n    }\n\n    if (activeRule) {\n      const regex = new RegExp(`^${scope}`);\n\n      if (activeRule.scope.some(_scope => regex.test(_scope))) {\n        return;\n      }\n\n      const splitted = scope.split('.');\n      // remove extension from scope to support more language\n      // otherwise theme will only work for this language\n      splitted.pop();\n      const formattedScope = splitted.join('.');\n\n      updateRule({\n        ...activeRule,\n        scope: [formattedScope, ...activeRule.scope],\n      });\n\n      return;\n    }\n\n    addRule({ scope: [scope] });\n  };\n\n  if (!scopes.length) {\n    return null;\n  }\n\n  return (\n    <code className={css.info}>\n      {[...scopes].reverse().map((scope, i) => {\n        const exist = !!ruleMatch(definedRules, [scope]);\n        return (\n          <span\n            className={cx(css.scope, { [css.exists]: exist })}\n            onClick={(): void => onClickScope(scope)}\n            key={`${scope}-${i}`}\n          >\n            {scope}\n          </span>\n        );\n      })}\n    </code>\n  );\n};\n\nexport default Info;\n","import React from 'react';\n\nimport css from './styles.module.scss';\n\ninterface Props {\n  lineNumber: number;\n  children: React.ReactNode;\n}\n\nconst Line: React.FC<Props> = ({ lineNumber, children }) => (\n  <span className={`${css.line} line-${lineNumber}`}>{children}</span>\n);\n\nexport default React.memo(Line);\n","import chroma from 'chroma-js';\n\nconst getContrastColor = (color: string): '#000000' | '#ffffff' => {\n  return chroma.contrast(color || 'white', 'black') > 4.5 ? '#000000' : '#ffffff';\n};\n\nexport default getContrastColor;\n","import React from 'react';\nimport { SubLine as SubLineType } from '@anche/textmate-grammar-parser';\nimport cx from 'classnames';\nimport { useRecoilValue } from 'recoil';\n\nimport generalScopeManager from '~/state/generalScopes';\n\nimport getContrastColor from '~/helpers/getContrastColor';\nimport ruleMatch from '~/helpers/ruleMatch';\n\nimport { GeneralScope, Rule } from '~/types';\n\nimport css from './styles.module.scss';\n\ntype Props = SubLineType & {\n  rules: Rule[];\n  id: string;\n  selected: boolean;\n  onClick: (scopes: string[], rule: Rule, id: string, isSelected: boolean) => void;\n  onHover: (scopes: string[]) => void;\n};\n\nconst getClass = (scopes: string, empty?: boolean): string => {\n  const scopesSplit = (scopes || '').split('.');\n\n  return cx(...scopesSplit, css.subline, {\n    [css.empty]: empty,\n  });\n};\n\nconst SubLine: React.FC<Props> = ({ rules, scopes, content, selected, onClick, onHover, id }) => {\n  const [activeScope, setActiveScope] = React.useState('');\n  const [rule, setRule] = React.useState<Nullable<Rule>>(null);\n\n  React.useEffect(() => {\n    const activeRule = ruleMatch(rules, scopes);\n    setRule(activeRule?.rule || null);\n    setActiveScope(activeRule?.query || '');\n  }, [scopes, rules]);\n\n  const editorBackground = useRecoilValue(generalScopeManager('editor.background')) as GeneralScope;\n\n  const empty = !content.trim();\n\n  return (\n    <span\n      className={cx(getClass(activeScope, empty))}\n      style={\n        selected\n          ? {\n              backgroundColor: `${getContrastColor(editorBackground.color)}20`,\n            }\n          : {}\n      }\n      {...(!empty\n        ? {\n            onClick: (): void => onClick(scopes, rule!, id, selected),\n            onMouseEnter: (): void => onHover(scopes),\n          }\n        : {})}\n    >\n      {content || ' '}\n    </span>\n  );\n};\n\nexport default React.memo(SubLine);\n","import { useRecoilCallback, useRecoilValue } from 'recoil';\n\nimport { getRuleIds } from '~/state/rules';\nimport editRuleState from '~/state/rules/edit';\n\nimport { Rule } from '~/types';\n\nconst useViewRule = (): ((input?: Rule | string) => void) => {\n  const ids = useRecoilValue(getRuleIds);\n\n  const viewRule = useRecoilCallback(\n    ({ set }) => (input?: Rule | string): void => {\n      const id = typeof input === 'string' ? input : input?.id;\n\n      if (id && ids.includes(id)) {\n        set(editRuleState, id);\n        return;\n      }\n\n      set(editRuleState, '');\n    },\n    [ids],\n  );\n\n  return viewRule;\n};\n\nexport default useViewRule;\n","import React from 'react';\nimport cx from 'classnames';\nimport { atom, useRecoilValue, useSetRecoilState } from 'recoil';\nimport { useRecoilState } from 'recoil';\n\nimport parsedCode from '~/state/code';\nimport { getAllRules } from '~/state/rules';\n\nimport { infoState } from '~/containers/Code/components/Info';\nimport Line from '~/containers/Code/components/Line';\nimport SubLine from '~/containers/Code/components/SubLine';\n\nimport useViewRule from '~/hooks/useViewRule';\n\nimport { Rule } from '~/types';\n\nimport css from './styles.module.scss';\n\nexport const sublineSelected = atom<string>({\n  key: 'selectedSubline',\n  default: '',\n});\n\nconst CodeView: React.FC = () => {\n  const rules = useRecoilValue(getAllRules);\n  const codeObj = useRecoilValue(parsedCode);\n  const [selected, setSelected] = useRecoilState(sublineSelected);\n  const setInfoScopes = useSetRecoilState(infoState);\n  const viewRule = useViewRule();\n\n  const onHoverSubline = React.useCallback(\n    (scopes: string[]): void => {\n      setInfoScopes(scopes);\n    },\n    [setInfoScopes],\n  );\n\n  const onClickSubline = React.useCallback(\n    (scopes: string[], rule: Rule, id: string, isSelected: boolean): void => {\n      viewRule(rule || '');\n\n      if (!isSelected) {\n        setSelected(id);\n        setInfoScopes(scopes);\n        return;\n      }\n\n      setSelected('');\n      setInfoScopes([]);\n    },\n    [setInfoScopes, setSelected, viewRule],\n  );\n\n  return (\n    <>\n      <span className={cx(css.lineNumbers)}>\n        {codeObj.lines.map((_, i) => (\n          <span key={i}>{i + 1}</span>\n        ))}\n      </span>\n      <span>\n        {codeObj.lines.map(line => (\n          <Line key={line.number} lineNumber={line.number}>\n            {line.content.map((subline, i) => {\n              const sublineKey = `${line.number}-\"${subline.content}\"-${i}`;\n              return (\n                <SubLine\n                  rules={rules}\n                  selected={sublineKey === selected}\n                  key={sublineKey}\n                  id={sublineKey}\n                  onHover={onHoverSubline}\n                  onClick={onClickSubline}\n                  {...subline}\n                />\n              );\n            })}\n          </Line>\n        ))}\n      </span>\n    </>\n  );\n};\n\nexport default CodeView;\n","import React from 'react';\nimport cx from 'classnames';\nimport { useRecoilValue } from 'recoil';\n\nimport { editCodeState } from '~/state/code';\n\nimport CodeInput from '~/containers/Code/components/CodeInput';\nimport CodeView from '~/containers/Code/components/CodeView';\n\nimport css from './styles.module.scss';\n\nconst Editor: React.FC = () => {\n  const isEditing = useRecoilValue(editCodeState);\n\n  return (\n    <div className={css.outer}>\n      <code className={css.container}>\n        <pre className={cx(css.code, css.codeText)}>\n          {isEditing ? (\n            <CodeInput />\n          ) : (\n            <div className={css.codeWrapper}>\n              <CodeView />\n            </div>\n          )}\n        </pre>\n      </code>\n    </div>\n  );\n};\n\nexport default Editor;\n","import React from 'react';\n\nimport Editor from '~/containers/Code/components/Editor';\n\nimport css from './styles.module.scss';\n\nconst Code: React.FC = () => {\n  return (\n    <>\n      <React.Suspense fallback={<div>waiting for code</div>}>\n        <Editor />\n      </React.Suspense>\n    </>\n  );\n};\n\nexport default Code;\n","import React from 'react';\n\ninterface Props {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  onClick: (...args: any[]) => void;\n  children: string;\n}\n\nconst SettingsMenuItem: React.FC<Props> = ({ onClick, children }) => {\n  return <li onClick={onClick}>{children}</li>;\n};\n\nexport default SettingsMenuItem;\n","import { useRecoilCallback } from 'recoil';\n\nimport generalScopeManager from '~/state/generalScopes';\nimport ruleManager, { getRuleIds } from '~/state/rules';\nimport { themeStyle } from '~/state/theme';\n\nimport { GENERAL_SCOPES } from '~/constants';\n\nimport { Rule } from '~/types';\n\nconst useReset = (): (() => void) => {\n  const reset = useRecoilCallback(({ reset: _reset, snapshot, set }) => async (): Promise<void> => {\n    _reset(themeStyle);\n    GENERAL_SCOPES.map(name => _reset(generalScopeManager(name)));\n\n    const ids = await snapshot.getPromise(getRuleIds);\n\n    ids.forEach(async id => {\n      const state = await snapshot.getPromise(ruleManager(id));\n\n      if (state) {\n        const updatedRule: Rule = {\n          ...state,\n          __meta: {\n            state: 'deleted',\n          },\n        };\n\n        set(ruleManager(id), updatedRule);\n      }\n    });\n  });\n\n  return reset;\n};\n\nexport default useReset;\n","import { Theme } from './theme';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst isTheme = (obj: any): obj is Theme => {\n  return (\n    typeof obj?.colors === 'object' &&\n    Array.isArray(obj.tokenColors) &&\n    obj.tokenColors.every(\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (e: any) =>\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        ((Array.isArray(e.scope) && e.scope.every((e: any) => typeof e === 'string')) ||\n          typeof e.scope === 'string') &&\n        typeof e.settings === 'object' &&\n        (typeof e.settings.fontStyle === 'undefined' || typeof e.settings.fontStyle === 'string') &&\n        typeof e.settings.foreground === 'string',\n    )\n  );\n};\n\nexport default isTheme;\n","import React, { ChangeEvent } from 'react';\nimport { useRecoilCallback } from 'recoil';\n\nimport generalScopeManager from '~/state/generalScopes';\n\nimport SettingsMenuItem from '~/containers/Code/components/SettingsMenu/Item';\n\nimport useAddRule from '~/hooks/useAddRule';\nimport useReset from '~/hooks/useReset';\n\nimport { GeneralScope, Rule } from '~/types';\nimport isTheme from '~/types/theme.guard';\n\nconst getFileJson = (event: ChangeEvent<HTMLInputElement>): Promise<Record<string, unknown>> => {\n  const input = event.target;\n\n  return new Promise((resolve, reject) => {\n    if (!input?.files?.length) {\n      reject();\n      return;\n    }\n\n    const reader = new FileReader();\n\n    reader.onload = (e): void => {\n      resolve(JSON.parse(e.target?.result as string));\n      return;\n    };\n\n    reader.readAsText(input.files[0]);\n  });\n};\n\nconst Open: React.FC = () => {\n  const inputRef = React.useRef<HTMLInputElement>(null);\n  const reset = useReset();\n\n  const onClick = (): void => {\n    inputRef.current?.click();\n  };\n\n  const setGeneralScope = useRecoilCallback(({ set }) => (input: GeneralScope): void => {\n    set(generalScopeManager(input.scope), input);\n  });\n\n  const addRule = useAddRule();\n\n  const onSelectFile = async (event: ChangeEvent<HTMLInputElement>): Promise<void> => {\n    const json = await getFileJson(event);\n\n    if (!isTheme(json)) {\n      return;\n    }\n\n    reset();\n\n    Object.keys(json.colors).map(scope => {\n      setGeneralScope({\n        scope,\n        color: json.colors[scope],\n      });\n    });\n\n    json.tokenColors.forEach(tokenColor => {\n      const rule: Partial<Rule> = {\n        ...tokenColor,\n        scope: Array.isArray(tokenColor.scope) ? tokenColor.scope : [tokenColor.scope],\n        settings: {\n          ...tokenColor.settings,\n          fontStyle: (tokenColor.settings.fontStyle ? [tokenColor.settings.fontStyle] : []) as (\n            | 'bold'\n            | 'italic'\n            | 'underline'\n          )[],\n        },\n      };\n\n      addRule(rule);\n    });\n  };\n\n  return (\n    <>\n      <input\n        ref={inputRef}\n        type=\"file\"\n        accept=\"application/JSON\"\n        onChange={onSelectFile}\n        style={{ display: 'none' }}\n      />\n      <SettingsMenuItem onClick={onClick}>Open</SettingsMenuItem>\n    </>\n  );\n};\n\nexport default Open;\n","import React from 'react';\n\nconst useOutsideClick = (\n  elem: React.RefObject<HTMLElement>,\n  callback: (isOutside: boolean) => void,\n): void => {\n  const clickListener = React.useCallback(\n    (event: MouseEvent) => {\n      const target = event.target as Node;\n      if (!elem.current?.contains(target)) {\n        callback(true);\n        return;\n      }\n\n      callback(false);\n    },\n    [callback, elem],\n  );\n\n  React.useEffect(() => {\n    document.addEventListener('click', clickListener);\n\n    return (): void => {\n      document.removeEventListener('click', clickListener);\n    };\n  }, [clickListener]);\n};\n\nexport default useOutsideClick;\n","import React from 'react';\nimport { useRecoilState } from 'recoil';\n\nimport { editCodeState } from '~/state/code';\n\nimport SettingsMenuItem from '~/containers/Code/components/SettingsMenu/Item';\n\nconst CustomizeCode: React.FC = () => {\n  const [isEditing, setEditCode] = useRecoilState(editCodeState);\n  const onClick = (): void => {\n    setEditCode(!isEditing);\n  };\n  return (\n    <SettingsMenuItem onClick={onClick}>\n      {!isEditing ? 'Customize preview' : 'Save preview'}\n    </SettingsMenuItem>\n  );\n};\n\nexport default CustomizeCode;\n","import React from 'react';\nimport { useRecoilValue } from 'recoil';\n\nimport { getAllScopes } from '~/state/generalScopes';\nimport { getAllRules } from '~/state/rules';\nimport { themeStyle } from '~/state/theme';\n\nimport SettingsMenuItem from '~/containers/Code/components/SettingsMenu/Item';\n\nimport { GeneralScope, Rule } from '~/types';\nimport { Theme, ThemeRule } from '~/types/theme';\n\ninterface Options {\n  name: string;\n  generalScopes: GeneralScope[];\n  rules: Rule[];\n  type: 'dark' | 'light';\n}\n\nconst ruleTransformer = (rule: Rule): ThemeRule => ({\n  name: rule.name,\n  scope: rule.scope,\n  settings: {\n    ...(rule.settings.fontStyle.length > 0\n      ? {\n          fontStyle: rule.settings.fontStyle.join(' '),\n        }\n      : {}),\n    foreground: rule.settings.foreground,\n  },\n});\n\nconst createThemeColorsObj = (scopes: GeneralScope[]): Theme['colors'] => {\n  return scopes.reduce(\n    (acc, scope) => ({\n      ...acc,\n      [scope.scope]: scope.color,\n    }),\n    {},\n  );\n};\n\nconst createTheme = (opts: Options): Theme => ({\n  name: opts.name,\n  colors: createThemeColorsObj(opts.generalScopes),\n  semanticHighlighting: true,\n  tokenColors: opts.rules.map(rule => ruleTransformer(rule)),\n  type: opts.type,\n});\n\nconst Export: React.FC = () => {\n  const rules = useRecoilValue(getAllRules);\n  const generalScopes = useRecoilValue(getAllScopes);\n  const name = 'by https://github.com/el-angel/tmtheme-editor';\n  const type = useRecoilValue(themeStyle);\n\n  const download = (): void => {\n    const theme = createTheme({ rules, generalScopes, name, type });\n    const json = JSON.stringify(theme, null, 2);\n\n    const elem = document.createElement('a');\n    const dataStr = 'data:text/json;charset=utf-8,' + encodeURIComponent(json);\n\n    elem.setAttribute('href', dataStr);\n    elem.setAttribute('download', 'theme.json');\n    elem.setAttribute('style', 'display: none;');\n    document.body.appendChild(elem);\n    elem.click();\n    elem.remove();\n  };\n\n  return <SettingsMenuItem onClick={download}>Export</SettingsMenuItem>;\n};\n\nexport default Export;\n","import React from 'react';\nimport cx from 'classnames';\n\nimport css from './styles.module.scss';\n\ninterface Props {\n  children: string;\n  onClick: (event?: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n}\n\nconst Button: React.FC<Props> = ({ children, onClick }) => {\n  return (\n    <button type=\"button\" className={cx(css.button)} onClick={onClick}>\n      {children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\n\nimport Button from '~/components/ui/Button';\n\nimport css from './styles.module.scss';\n\ninterface Props {\n  onConfirm: () => void;\n  onReject: () => void;\n}\n\nconst Confirm: React.FC<Props> = ({ onConfirm, onReject, children }) => {\n  return (\n    <div className={css.container}>\n      <div className={css.content}>{children}</div>\n      <div className={css.buttons}>\n        <Button onClick={onConfirm}>Yes</Button>\n        <Button onClick={onReject}>No</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default Confirm;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport cx from 'classnames';\n\nimport { createDialogElement, dialogRootElement } from '~/services/dialog';\n\nimport useOutsideClick from '~/hooks/useOutsideClick';\n\nimport css from './styles.module.scss';\n\ninterface Props {\n  onClose: () => void;\n  closeOnOutsideClick?: boolean;\n  position?: 'top' | 'center';\n  overlay?: boolean;\n}\n\nexport const _Modal: React.FC<Props> = ({\n  children,\n  onClose,\n  closeOnOutsideClick,\n  position = 'top',\n  overlay,\n}) => {\n  const ref = React.useRef<HTMLDivElement>(null);\n\n  useOutsideClick(ref, (isOutside: boolean) => {\n    if (isOutside && closeOnOutsideClick) {\n      onClose();\n    }\n  });\n\n  return (\n    <>\n      <div ref={ref} className={cx(css.container, css[position])}>\n        {children}\n      </div>\n      {overlay && <div className={css.overlay} />}\n    </>\n  );\n};\n\nconst Modal: React.FC<Props & { target?: HTMLDivElement }> = ({\n  children,\n  target = createDialogElement(),\n  ...props\n}) => {\n  React.useEffect(() => {\n    dialogRootElement?.appendChild(target);\n    return (): void => {\n      dialogRootElement?.removeChild(target);\n    };\n  }, [target]);\n\n  return ReactDOM.createPortal(<_Modal {...props}>{children}</_Modal>, target);\n};\n\nexport default Modal;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { uniqueId } from 'lodash';\n\nimport Confirm from '~/components/ui/Confirm';\nimport { _Modal } from '~/components/ui/Modal';\n\ntype ModalProps = React.ComponentProps<typeof _Modal>;\n\nexport const dialogRootElement = document.querySelector('#modal');\n\nexport const createDialogElement = (): HTMLDivElement => {\n  const id = uniqueId();\n  const dialog = document.createElement('div');\n  dialog.setAttribute('id', `dialog__${id}`);\n  dialog.setAttribute('data-dialog-id', id);\n\n  return dialog;\n};\n\nconst _unmountWrap = (elem: HTMLDivElement, callback?: () => void) => (): void => {\n  callback && callback();\n  ReactDOM.unmountComponentAtNode(elem);\n  dialogRootElement?.removeChild(elem);\n};\n\nexport const confirm = (_content?: React.ReactNode): Promise<void> => {\n  const elem = createDialogElement();\n  const props: ModalProps = {\n    onClose: _unmountWrap(elem),\n    closeOnOutsideClick: true,\n    overlay: true,\n    position: 'center',\n  };\n\n  return new Promise((resolve, reject) => {\n    const content = (\n      <_Modal {...props}>\n        <Confirm onConfirm={_unmountWrap(elem, resolve)} onReject={_unmountWrap(elem, reject)}>\n          {_content || 'Are you sure?'}\n        </Confirm>\n      </_Modal>\n    );\n\n    ReactDOM.render(content, elem);\n    dialogRootElement?.appendChild(elem);\n  });\n};\n\nexport default {\n  confirm,\n};\n","import React from 'react';\n\nimport SettingsMenuItem from '~/containers/Code/components/SettingsMenu/Item';\n\nimport dialog from '~/services/dialog';\n\nimport useReset from '~/hooks/useReset';\n\nconst New: React.FC = () => {\n  const reset = useReset();\n\n  const onClick = (): void => {\n    dialog.confirm().then(() => {\n      reset();\n    });\n  };\n  return <SettingsMenuItem onClick={onClick}>New</SettingsMenuItem>;\n};\nexport default New;\n","import React from 'react';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport cx from 'classnames';\nimport { useRecoilValue } from 'recoil';\n\nimport generalScopeManager from '~/state/generalScopes';\n\nimport Open from '~/containers/Code/components/SettingsMenu/Items/Open';\n\nimport useOutsideClick from '~/hooks/useOutsideClick';\n\nimport getContrastColor from '~/helpers/getContrastColor';\n\nimport { GeneralScope } from '~/types';\n\nimport CustomizeCode from './Items/CustomizeCode';\nimport Export from './Items/Export';\nimport New from './Items/New';\n\nimport css from './styles.module.scss';\n\nconst SettingsMenu: React.FC = () => {\n  const [open, setOpen] = React.useState(false);\n  const editorBackground: GeneralScope = useRecoilValue(\n    generalScopeManager('editor.background'),\n  ) as GeneralScope;\n  const containerRef = React.useRef<HTMLDivElement>(null);\n\n  useOutsideClick(containerRef, (isOutside: boolean) => {\n    if (isOutside && open) {\n      setOpen(false);\n    }\n  });\n\n  return (\n    <div className={css.container}>\n      <div className={css.settingsIcon} onClick={(): void => setOpen(!open)}>\n        <SettingsIcon\n          style={{\n            color: getContrastColor(editorBackground.color),\n            opacity: '0.5',\n          }}\n        />\n      </div>\n\n      <div\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        ref={containerRef}\n        className={cx(css.menu, {\n          [css.open]: open,\n        })}\n      >\n        <ul>\n          <New />\n          <Open />\n          <li className={css.divider}></li>\n          <CustomizeCode />\n          <li className={css.divider}></li>\n          <Export />\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default SettingsMenu;\n","import React from 'react';\nimport ColorTextIcon from '@material-ui/icons/FormatColorText';\nimport chroma from 'chroma-js';\nimport { debounce } from 'lodash';\n\nimport getContrastColor from '~/helpers/getContrastColor';\n\nimport css from './styles.module.scss';\n\ninterface Props {\n  onChange: (color: string) => void;\n  value: string;\n}\n\nconst ColorPicker: React.FC<Props> = ({ onChange, value }) => {\n  const inputRef = React.useRef<HTMLInputElement>(null);\n\n  const newColorCallback = React.useCallback(\n    debounce((color: string) => {\n      onChange(color);\n    }, 100),\n    [onChange],\n  );\n\n  const _onChange = React.useCallback(\n    evt => {\n      newColorCallback(evt.target.value);\n    },\n    [newColorCallback],\n  );\n\n  return (\n    <div className={css.container}>\n      <div\n        onClick={(): void => inputRef.current?.click()}\n        className={css.hexValue}\n        style={{ backgroundColor: value, color: getContrastColor(value) }}\n      >\n        {value}\n      </div>\n      <div onClick={(): void => inputRef.current?.click()} className={css.picker}>\n        <ColorTextIcon />\n      </div>\n      <input className={css.input} ref={inputRef} type=\"color\" value={value} onChange={_onChange} />\n    </div>\n  );\n};\n\nexport default ColorPicker;\n","import React from 'react';\nimport cx from 'classnames';\n\nimport css from './styles.module.scss';\n\ninterface Props {\n  value: string;\n  readonly?: boolean;\n  onChange?: (name: string) => void;\n}\n\nconst NameInput: React.FC<Props> = ({\n  value: currentValue,\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onChange = (): void => {},\n  readonly,\n}) => {\n  const [editing, setEditing] = React.useState(false);\n  const [value, setValue] = React.useState(currentValue);\n\n  const onClick = React.useCallback(() => {\n    if (readonly) {\n      return;\n    }\n    setEditing(true);\n  }, [readonly]);\n\n  const onInputBlur = React.useCallback(() => {\n    if (readonly) {\n      return;\n    }\n\n    setEditing(false);\n\n    onChange!(value);\n  }, [onChange, readonly, value]);\n\n  const onKeyDown = React.useCallback(\n    (evt: React.KeyboardEvent) => {\n      if (readonly) {\n        return;\n      }\n\n      if (evt.key === 'Enter') {\n        onInputBlur();\n      }\n    },\n    [onInputBlur, readonly],\n  );\n\n  React.useEffect(() => {\n    setValue(currentValue);\n  }, [currentValue]);\n\n  return (\n    <div>\n      <input\n        onClick={onClick}\n        readOnly={!editing || readonly}\n        className={cx(css.name, {\n          [css.editable]: editing && !readonly,\n          [css.readonly]: readonly,\n        })}\n        type=\"text\"\n        value={value}\n        onChange={(evt): void => setValue(evt.target.value)}\n        onBlur={onInputBlur}\n        onKeyDown={onKeyDown}\n      />\n    </div>\n  );\n};\n\nexport default NameInput;\n","import chroma from 'chroma-js';\n\nconst getScale = (...colors: string[]): ReturnType<chroma.Scale['colors']> => {\n  const scale = chroma.scale(colors).mode('lab').colors(12);\n  return scale;\n};\n\nconst getSwatches = (hex: string): ReturnType<typeof getScale>[] => {\n  const lightToDark = getScale(chroma.mix('#ffffff', hex, 0.15).hex(), hex, '#000000');\n\n  const redToCyan = getScale(\n    chroma.mix('red', hex, 0.1).hex(),\n    hex,\n    chroma.mix('cyan', hex, 0.1).hex(),\n  );\n  const greenToMagenta = getScale(\n    chroma.mix('green', hex, 0.2).hex(),\n    hex,\n    chroma.mix('magenta', hex, 0.1).hex(),\n  );\n  const blueToYellow = getScale(\n    chroma.mix('blue', hex, 0.2).hex(),\n    hex,\n    chroma.mix('yellow', hex, 0.1).hex(),\n  );\n\n  return [lightToDark, redToCyan, greenToMagenta, blueToYellow];\n};\n\nexport default getSwatches;\n","import React from 'react';\n\nimport getSwatches from '~/helpers/swatches';\n\nimport css from './styles.module.scss';\n\ninterface Props {\n  color: string;\n  onColorSelect: (hex: string) => void;\n}\n\nconst Swatches: React.FC<Props> = ({ color, onColorSelect }) => {\n  const [swatches, setSwatches] = React.useState<string[][]>([]);\n\n  React.useEffect(() => {\n    setSwatches(getSwatches(color));\n  }, [color]);\n\n  return (\n    <div className={css.container}>\n      {swatches.map((group, i) => (\n        <div className={css.swatchGroup} key={`group-${i}`}>\n          {group.map((color, j) => (\n            <div\n              key={`${i}-${j}`}\n              className={css.swatch}\n              onClick={(): void => onColorSelect(color)}\n              style={{ backgroundColor: color }}\n            ></div>\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Swatches;\n","import React from 'react';\n\nimport css from './styles.module.scss';\n\nconst PanelItem: React.FC = ({ children }) => {\n  return <div className={css.item}>{children}</div>;\n};\n\nexport default PanelItem;\n","import React from 'react';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport PanelItem from '~/components/ui/PanelItem';\n\nimport css from './styles.module.scss';\n\ninterface Props {\n  onClose: () => void;\n}\n\nconst Panel: React.FC<Props> = ({ children, onClose }) => {\n  return (\n    <div className={css.container}>\n      <div className={css.toolbar}>\n        <div>\n          <PanelItem>Settings</PanelItem>\n        </div>\n        <div>\n          <span onClick={onClose} className={css.close}>\n            <CloseIcon style={{ fontSize: '16px' }} />\n          </span>\n        </div>\n      </div>\n      <div className={css.content}>{children}</div>\n    </div>\n  );\n};\n\nexport default Panel;\n","import React from 'react';\nimport { useRecoilState } from 'recoil';\n\nimport generalScopeManager from '~/state/generalScopes';\nimport editGeneralScopeState from '~/state/generalScopes/edit';\n\nimport ColorPicker from '~/containers/Settings/components/ColorPicker';\nimport NameInput from '~/containers/Settings/components/NameInput';\nimport Swatches from '~/containers/Settings/components/Swatches';\n\nimport Panel from '~/components/ui/Panel';\n\nimport css from './styles.module.scss';\n\nconst GeneralSettings: React.FC = () => {\n  const [scope, setScope] = useRecoilState(editGeneralScopeState);\n\n  const [generalScope, updateGeneralScope] = useRecoilState(generalScopeManager(scope));\n\n  const onChangeColor = React.useCallback(\n    (color: string) => {\n      updateGeneralScope({\n        ...generalScope!,\n        color,\n      });\n    },\n    [updateGeneralScope, generalScope],\n  );\n\n  if (!generalScope || !scope) {\n    return null;\n  }\n\n  return (\n    <Panel onClose={(): void => setScope(undefined)}>\n      <div className={css.left}>\n        <NameInput readonly value={generalScope.scope} />\n      </div>\n      <div className={css.tools}>\n        <ColorPicker value={generalScope.color} onChange={onChangeColor} />\n      </div>\n      <div className={css.colorContainer}>\n        <Swatches\n          color={generalScope.color}\n          onColorSelect={(color): void => onChangeColor(color)}\n        />\n      </div>\n    </Panel>\n  );\n};\nexport default GeneralSettings;\n","import React from 'react';\nimport BoldIcon from '@material-ui/icons/FormatBold';\nimport ItalicIcon from '@material-ui/icons/FormatItalic';\nimport UnderlineIcon from '@material-ui/icons/FormatUnderlined';\nimport cx from 'classnames';\n\nimport { FONT_STYLE } from '~/constants';\n\nimport css from './styles.module.scss';\n\nconst TYPE_MAP = {\n  [FONT_STYLE.BOLD]: BoldIcon,\n  [FONT_STYLE.ITALIC]: ItalicIcon,\n  [FONT_STYLE.UNDERLINE]: UnderlineIcon,\n};\n\ntype FontStyle = typeof FONT_STYLE[keyof typeof FONT_STYLE];\n\ninterface Props {\n  type: FontStyle;\n  onClick: () => void;\n  enabled: boolean;\n}\n\nconst FontStyle: React.FC<Props> = ({ type, onClick, enabled }) => {\n  const SVG = TYPE_MAP[type];\n\n  return (\n    <div onClick={onClick} className={cx(css.icon, { [css.enabled]: enabled })}>\n      <SVG />\n    </div>\n  );\n};\n\nexport default FontStyle;\n","import React from 'react';\nimport cx from 'classnames';\n\nimport { Rule } from '~/types';\n\nimport css from './styles.module.scss';\n\ninterface Props {\n  scopes: Rule['scope'];\n  existingScopes: string[];\n  onDelete: (scope: string) => void;\n}\n\nconst ScopesList: React.FC<Props> = ({ scopes, onDelete, existingScopes }) => {\n  const scopesReversed = [...scopes].reverse();\n  return (\n    <div>\n      {scopesReversed.map((scope, i) => {\n        const exists = existingScopes.includes(scope);\n        return (\n          <div className={css.container} key={`${scope}-${i}`}>\n            {exists && (\n              <span className={css.warning} role=\"img\" aria-label=\"warning\">\n                ❗️\n              </span>\n            )}\n            <div\n              className={cx(css.scope, {\n                [css.exists]: exists,\n              })}\n              onClick={(): void => onDelete(scope)}\n            >\n              {scope}\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default ScopesList;\n","import { useRecoilCallback, useRecoilState } from 'recoil';\n\nimport ruleManager from '~/state/rules';\nimport editRuleState from '~/state/rules/edit';\n\nimport { Rule } from '~/types';\n\ntype ReturnType = (input: Rule | string) => void;\n\nconst useDeleteRule = (): ReturnType => {\n  const [editingId, setEditId] = useRecoilState(editRuleState);\n\n  const deleteRule = useRecoilCallback(\n    ({ set, snapshot }) => async (input: Rule | string): Promise<void> => {\n      const id = typeof input === 'string' ? input : input.id;\n\n      const state = await snapshot.getPromise(ruleManager(id));\n\n      if (state) {\n        const updatedRule: Rule = {\n          ...state,\n          __meta: {\n            state: 'deleted',\n          },\n        };\n\n        set(ruleManager(id), updatedRule);\n      }\n\n      if (editingId === id) {\n        setEditId('');\n      }\n    },\n    [editingId, setEditId],\n  );\n\n  return deleteRule;\n};\n\nexport default useDeleteRule;\n","import { Rule } from '~/types';\n\nconst getDefinedScopes = (rules: Rule[]): string[] =>\n  rules.reduce((scopes: string[], rule) => {\n    return [...scopes, ...rule.scope];\n  }, []);\n\nconst isDefined = (selector: string, scopes: string[]): boolean => {\n  const occurrences = scopes.filter(scope => scope === selector).length;\n\n  return occurrences >= 2;\n};\n\nconst getExistingScopes = (rule: Rule, rules: Rule[]): string[] => {\n  if (!rule.scope.length || !rules.length) {\n    return [];\n  }\n\n  const scopes = getDefinedScopes(rules);\n  if (!scopes.length) {\n    return [];\n  }\n\n  return rule.scope.reduce((acc: string[], scope: string) => {\n    if (isDefined(scope, scopes)) {\n      return [...acc, scope];\n    }\n    return acc;\n  }, []);\n};\n\nexport default getExistingScopes;\n","import React from 'react';\nimport { useRecoilValue, useSetRecoilState } from 'recoil';\n\nimport ruleManager, { getAllRules } from '~/state/rules';\nimport editRuleState from '~/state/rules/edit';\n\nimport ColorPicker from '~/containers/Settings/components/ColorPicker';\nimport FontStyle from '~/containers/Settings/components/FontStyle';\nimport NameInput from '~/containers/Settings/components/NameInput';\nimport ScopesList from '~/containers/Settings/components/ScopesList';\nimport Swatches from '~/containers/Settings/components/Swatches';\n\nimport Button from '~/components/ui/Button';\nimport Panel from '~/components/ui/Panel';\n\nimport useDeleteRule from '~/hooks/useDeleteRule';\nimport useViewRule from '~/hooks/useViewRule';\n\nimport { FONT_STYLE } from '~/constants';\n\nimport getExistingScopes from '~/helpers/getExistingScopes';\n\nimport css from './styles.module.scss';\n\nconst NEW_SCOPE_KEYS = ['Enter', ','];\n\nconst RuleSettings: React.FC = () => {\n  const rules = useRecoilValue(getAllRules);\n  const deleteRule = useDeleteRule();\n  const setViewRule = useViewRule();\n  const id = useRecoilValue(editRuleState);\n  const rule = useRecoilValue(ruleManager(id));\n\n  const updateRule = useSetRecoilState(ruleManager(id));\n\n  const [newScope, setNewScope] = React.useState<string>('');\n\n  const toggleFontStyle = React.useCallback(\n    (fontStyle: typeof FONT_STYLE[keyof typeof FONT_STYLE]) => {\n      let styles = [...rule!.settings.fontStyle] || [];\n\n      if (typeof styles === 'string') {\n        styles = [styles];\n      }\n\n      if (styles.includes(fontStyle)) {\n        styles.splice(styles.indexOf(fontStyle), 1);\n      } else {\n        styles.push(fontStyle);\n      }\n\n      updateRule!({\n        ...rule!,\n        settings: {\n          ...rule!.settings,\n          fontStyle: styles,\n        },\n      });\n    },\n    [updateRule, rule],\n  );\n\n  const onChangeColor = React.useCallback(\n    (color: string) => {\n      updateRule!({\n        ...rule!,\n        settings: {\n          ...rule!.settings,\n          foreground: color,\n        },\n      });\n    },\n    [updateRule, rule],\n  );\n\n  const onAddScopeInputChange = React.useCallback(\n    (evt: React.ChangeEvent) => {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n      setNewScope(evt.target.value);\n    },\n    [setNewScope],\n  );\n\n  const onAddScopeInputKeyDown = React.useCallback(\n    (evt: React.KeyboardEvent) => {\n      if (NEW_SCOPE_KEYS.includes(evt.key)) {\n        evt.preventDefault();\n\n        updateRule({\n          ...rule!,\n          scope: [newScope, ...rule!.scope],\n        });\n\n        setNewScope('');\n      }\n    },\n    [updateRule, rule, newScope],\n  );\n\n  if (!rule?.id) {\n    return null;\n  }\n\n  return (\n    <Panel onClose={(): void => setViewRule()}>\n      <div className={css.container}>\n        <div className={css.top}>\n          <div className={css.left}>\n            <div>\n              <NameInput\n                value={rule.name}\n                onChange={(name): void => updateRule({ ...rule, name })}\n              />\n              <div className={css.scopesList}>\n                <ScopesList\n                  existingScopes={getExistingScopes(rule, rules)}\n                  scopes={rule.scope}\n                  onDelete={(scope: string): void => {\n                    const index = rule.scope.findIndex(sc => sc === scope);\n                    const newScopes = [...rule.scope];\n                    newScopes.splice(index, 1);\n                    updateRule({\n                      ...rule,\n                      scope: newScopes,\n                    });\n                  }}\n                />\n              </div>\n            </div>\n            <Button onClick={(): void => deleteRule(rule)}>Delete</Button>\n          </div>\n          <div className={css.tools}>\n            <div className={css.picker}>\n              <ColorPicker value={rule.settings.foreground} onChange={onChangeColor} />\n            </div>\n            <FontStyle\n              type={FONT_STYLE.BOLD}\n              onClick={(): void => toggleFontStyle(FONT_STYLE.BOLD)}\n              enabled={rule.settings.fontStyle?.includes(FONT_STYLE.BOLD) || false}\n            />\n            <FontStyle\n              type={FONT_STYLE.ITALIC}\n              onClick={(): void => toggleFontStyle(FONT_STYLE.ITALIC)}\n              enabled={rule.settings.fontStyle?.includes(FONT_STYLE.ITALIC) || false}\n            />\n            <FontStyle\n              type={FONT_STYLE.UNDERLINE}\n              onClick={(): void => toggleFontStyle(FONT_STYLE.UNDERLINE)}\n              enabled={rule.settings.fontStyle?.includes(FONT_STYLE.UNDERLINE) || false}\n            />\n          </div>\n          <div className={css.colorContainer}>\n            <Swatches\n              color={rule.settings.foreground}\n              onColorSelect={(color): void => onChangeColor(color)}\n            />\n          </div>\n        </div>\n        <div className={css.addScope}>\n          <input\n            className={css.addScopeInput}\n            type=\"text\"\n            placeholder=\"Add scope\"\n            value={newScope}\n            onChange={onAddScopeInputChange}\n            onKeyDown={onAddScopeInputKeyDown}\n          />\n        </div>\n      </div>\n    </Panel>\n  );\n};\n\nexport default RuleSettings;\n","import React from 'react';\nimport { useRecoilValue } from 'recoil';\n\nimport mode from '~/state/mode';\n\nimport GeneralSettings from '~/containers/Settings/GeneralSettings';\nimport RuleSettings from '~/containers/Settings/RuleSettings';\n\nconst Settings: React.FC = () => {\n  const currentMode = useRecoilValue(mode);\n\n  if (currentMode === 'general') {\n    return <GeneralSettings />;\n  }\n\n  return <RuleSettings />;\n};\n\nexport default Settings;\n","import React from 'react';\nimport cx from 'classnames';\n\nimport css from './styles.module.scss';\n\ninterface Props {\n  isActive: boolean;\n  onClick?: () => void;\n  title: string;\n  color: string;\n  showWarning?: boolean;\n}\n\nconst SidebarItem: React.FC<Props> = ({\n  isActive,\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onClick = (): void => {},\n  title,\n  color,\n  showWarning = false,\n}) => {\n  return (\n    <div\n      className={cx(css.container, {\n        [css.active]: isActive,\n      })}\n      onClick={onClick}\n    >\n      <div>\n        {showWarning && <span className={css.warning}>❗️</span>}\n        <code className={css.name}>{title}</code>\n      </div>\n      <div className={css.color} style={{ backgroundColor: color }}></div>\n    </div>\n  );\n};\n\nexport default SidebarItem;\n","import React from 'react';\nimport { useRecoilState } from 'recoil';\n\nimport generalScopeManager from '~/state/generalScopes';\nimport editGeneralScopeState from '~/state/generalScopes/edit';\n\nimport SidebarItem from '~/components/ui/SidebarItem';\n\nimport { GeneralScope as GeneralScopeType } from '~/types';\n\ninterface Props {\n  scope: string;\n}\n\nconst GeneralScope: React.FC<Props> = ({ scope }) => {\n  const [generalScope] = useRecoilState(generalScopeManager(scope));\n\n  const [editingScope, editScope] = useRecoilState(editGeneralScopeState);\n\n  const isActive = (generalScope as GeneralScopeType)?.scope === editingScope;\n\n  if (!generalScope) {\n    return null;\n  }\n\n  return (\n    <>\n      <SidebarItem\n        isActive={isActive}\n        onClick={(): void => editScope(generalScope.scope)}\n        title={generalScope.scope}\n        color={generalScope.color}\n      />\n    </>\n  );\n};\n\nexport default GeneralScope;\n","import React from 'react';\n\nimport GeneralScope from '~/containers/Sidebar/components/GeneralScope';\n\nimport { GENERAL_SCOPES } from '~/constants';\n\nconst General: React.FC = () => {\n  return (\n    <>\n      {GENERAL_SCOPES.map(scope => (\n        <GeneralScope scope={scope} key={scope} />\n      ))}\n    </>\n  );\n};\n\nexport default General;\n","import React from 'react';\nimport { useRecoilValue } from 'recoil';\nimport { unstable_trace as trace } from 'scheduler/tracing';\n\nimport { getAllRules } from '~/state/rules';\nimport editRuleState from '~/state/rules/edit';\n\nimport SidebarItem from '~/components/ui/SidebarItem';\n\nimport useViewRule from '~/hooks/useViewRule';\n\nimport getExistingScopes from '~/helpers/getExistingScopes';\n\nimport { Rule as RuleType } from '~/types';\n\nconst Rule: React.FC<RuleType> = props => {\n  const { id, name, settings, scope } = props;\n  const viewRule = useViewRule();\n  const rules = useRecoilValue(getAllRules);\n  const editingRuleId = useRecoilValue(editRuleState);\n\n  const existingScopes = getExistingScopes({ id, name, settings, scope }, rules);\n\n  const isActive = editingRuleId === id;\n\n  return (\n    <SidebarItem\n      isActive={isActive}\n      onClick={(): void => {\n        if (!isActive) {\n          viewRule(id);\n        }\n      }}\n      title={name}\n      color={settings.foreground}\n      showWarning={!!existingScopes.length}\n    />\n  );\n};\n\nexport default Rule;\n","import React from 'react';\nimport { useRecoilValue } from 'recoil';\n\nimport { getAllRules } from '~/state/rules';\n\nimport Rule from '~/containers/Sidebar/components/Rule';\n\nconst Rules: React.FC = () => {\n  const rules = useRecoilValue(getAllRules);\n\n  return (\n    <>\n      {rules.map(rule => (\n        <Rule key={rule.id} {...rule} />\n      ))}\n    </>\n  );\n};\n\nexport default Rules;\n","import React from 'react';\nimport cx from 'classnames';\nimport { useRecoilState } from 'recoil';\n\nimport mode from '~/state/mode';\n\nimport css from './styles.module.scss';\n\nconst Toolbar: React.FC = () => {\n  const [currentMode, setMode] = useRecoilState(mode);\n\n  return (\n    <div className={css.toolbar}>\n      <div className={css.header}>\n        <div\n          className={cx(css.item, {\n            [css.isActive]: currentMode === 'rules',\n          })}\n          onClick={(): void => setMode('rules')}\n        >\n          Rules\n        </div>\n        <div\n          className={cx(css.item, {\n            [css.isActive]: currentMode === 'general',\n          })}\n          onClick={(): void => setMode('general')}\n        >\n          General\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Toolbar;\n","import { selector } from 'recoil';\n\nimport generalScopeManager from '~/state/generalScopes';\n\nimport { GENERAL_SCOPES } from '~/constants';\n\nimport { selectorKey } from '~/helpers/state';\n\nconst getGeneralScopesCSS = selector<string>({\n  key: selectorKey('GeneralScopesCSS'),\n  get: ({ get }) => {\n    const scopes = GENERAL_SCOPES;\n\n    const css = scopes.reduce((acc, name) => {\n      const { scope, color } = get(generalScopeManager(name))!;\n\n      const formatted = `--${scope.replace(/\\./, '-')}`;\n\n      return `\n        ${acc}\n        ${formatted}: ${color};\n      `.trim();\n    }, '');\n\n    return `\n      :root {\n        ${css}\n      }\n    `;\n  },\n});\n\nexport default getGeneralScopesCSS;\n","import { CSS } from '~/types';\n\nconst stringifyCss = (obj: CSS): string => {\n  const css = Object.keys(obj).reduce((acc: string, className: string) => {\n    const props = obj[className];\n\n    acc += `.${className} {\\n`;\n\n    Object.keys(props).map(property => {\n      const cssProperty = property.replace(/[A-Z]/g, m => '-' + m.toLowerCase());\n\n      acc += `${cssProperty}: ${props[property]};\\n`;\n    });\n\n    acc += `}\\n`;\n    acc += '\\n';\n\n    return acc;\n  }, '');\n\n  return css;\n};\n\nexport default stringifyCss;\n","import { selector } from 'recoil';\n\nimport { getAllRules } from '~/state/rules';\n\nimport { FONT_STYLE } from '~/constants';\n\nimport stringifyCss from '~/helpers/stringifyCss';\n\nimport { CSS, Rule } from '~/types';\n\nimport { selectorKey } from './../helpers/state';\n\nexport const getRulesCSS = selector({\n  key: selectorKey('RulesCSS'),\n  get: ({ get }) => {\n    const rules = get(getAllRules);\n\n    const css = rules.reduce((acc: CSS, rule: Rule) => {\n      const ruleCss = rule.scope.reduce((cssAcc: CSS, scope) => {\n        const css: React.CSSProperties = {\n          color: rule.settings.foreground,\n        };\n\n        if (rule.settings.fontStyle?.includes(FONT_STYLE.BOLD)) {\n          css.fontWeight = 'bold';\n        }\n\n        if (rule.settings.fontStyle?.includes(FONT_STYLE.ITALIC)) {\n          css.fontStyle = 'italic';\n        }\n\n        if (rule.settings.fontStyle?.includes(FONT_STYLE.UNDERLINE)) {\n          css.textDecoration = 'underline';\n        }\n\n        return {\n          ...cssAcc,\n          [scope.replace(/ /g, '.')]: css,\n        };\n      }, {});\n\n      return {\n        ...acc,\n        ...ruleCss,\n      };\n    }, {} as CSS);\n\n    return stringifyCss(css);\n  },\n});\n","import React from 'react';\nimport { useRecoilValue } from 'recoil';\n\nimport mode from '~/state/mode';\n\nimport Info from '~/containers/Code/components/Info';\nimport General from '~/containers/Sidebar/components/General';\nimport Rules from '~/containers/Sidebar/components/Rules';\nimport Toolbar from '~/containers/Sidebar/components/Toolbar';\n\nimport css from './styles.module.scss';\n\nimport getGeneralScopesCSS from '~/selectors/generalScopeCSS';\nimport { getRulesCSS } from '~/selectors/rulesCSS';\n\nconst Sidebar: React.FC = () => {\n  const currentMode = useRecoilValue(mode);\n  const ruleStyle = useRecoilValue(getRulesCSS);\n  const generalStyle = useRecoilValue(getGeneralScopesCSS);\n\n  return (\n    <>\n      <div>\n        <Toolbar />\n      </div>\n      <div className={css.content}>\n        <style type=\"text/css\">{ruleStyle}</style>\n        <style type=\"text/css\">{generalStyle}</style>\n        <div className={css.rules}>\n          {currentMode === 'rules' && <Rules />}\n\n          {currentMode === 'general' && <General />}\n        </div>\n        <Info />\n      </div>\n    </>\n  );\n};\n\nexport default Sidebar;\n","import { atom, atomFamily, selectorFamily } from 'recoil';\n\nimport { atomKey, selectorKey } from '~/helpers/state';\n\nconst modalIds = atom<string[]>({\n  key: atomKey('ModalIds'),\n  default: [],\n});\n\nconst _modalState = atomFamily({\n  key: atomKey('ModalState__Family'),\n  default: false,\n});\n\nexport const getModalState = selectorFamily<boolean, string>({\n  key: selectorKey('GetModalState__Family'),\n  get: id => ({ get }): boolean => {\n    return get(_modalState(id));\n  },\n  set: (id: string) => ({ set, get }, isOpen): void => {\n    const ids = get(modalIds);\n\n    if (!ids.includes(id)) {\n      set(modalIds, [...ids, id]);\n    }\n\n    if (isOpen) {\n      ids.forEach(_id => {\n        if (_id !== id) {\n          set(_modalState(_id), false);\n        }\n      });\n    }\n\n    set(_modalState(id), isOpen);\n  },\n});\n","import React from 'react';\n\nimport css from './styles.module.scss';\n\ninterface Props {\n  onClick?: () => void;\n}\n\nconst Item: React.FC<Props> = ({ children, onClick }) => {\n  return (\n    <div onClick={onClick} className={css.item}>\n      {children}\n    </div>\n  );\n};\n\nexport default Item;\n","import React from 'react';\nimport cx from 'classnames';\n\nimport css from './styles.module.scss';\n\ninterface Option {\n  label: string;\n  value: string;\n}\n\ninterface Props<T extends Option> {\n  children?: React.ReactNode;\n  options: T[];\n  onSelect: (option: T) => void;\n  onClose: () => void;\n  value: T['value'];\n  inputProps?: React.InputHTMLAttributes<HTMLInputElement>;\n}\n\nconst QuickInput = <T extends Option>({\n  value,\n  options,\n  onSelect,\n  onClose,\n  inputProps,\n}: Props<T>): React.ReactElement => {\n  const index = options.findIndex(option => option.value === value);\n  const [focussedIndex, setFocussedIndex] = React.useState(index);\n\n  const keydownHandler = React.useCallback(\n    (event: KeyboardEvent) => {\n      if (!['Enter', 'ArrowUp', 'ArrowDown', 'Escape'].includes(event.key)) {\n        return;\n      }\n\n      event.preventDefault();\n\n      if (event.key == 'Escape') {\n        onClose();\n      }\n\n      if (event.key === 'Enter') {\n        onSelect(options[focussedIndex]);\n      }\n\n      if (event.key === 'ArrowUp') {\n        if (focussedIndex === 0) {\n          setFocussedIndex(options.length - 1);\n          return;\n        }\n\n        setFocussedIndex(focussedIndex - 1);\n        return;\n      }\n\n      if (event.key === 'ArrowDown') {\n        if (focussedIndex === options.length - 1) {\n          setFocussedIndex(0);\n          return;\n        }\n\n        setFocussedIndex(focussedIndex + 1);\n        return;\n      }\n    },\n    [focussedIndex, onClose, onSelect, options],\n  );\n\n  React.useEffect(() => {\n    window.addEventListener('keydown', keydownHandler);\n\n    return (): void => {\n      window.removeEventListener('keydown', keydownHandler);\n    };\n  }, [focussedIndex, keydownHandler]);\n\n  return (\n    <div className={css.container}>\n      <div className={css.inputContainer}>\n        <input {...inputProps} className={css.input} />\n      </div>\n      <div className={css.optionContainer}>\n        {options.map((option, i) => (\n          <div\n            onClick={(): void => onSelect(option)}\n            className={cx(css.option, {\n              [css.focussed]: focussedIndex === i,\n            })}\n            key={option.value}\n          >\n            {option.label}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default QuickInput;\n","import React from 'react';\nimport { useRecoilState } from 'recoil';\n\nimport languageState from '~/state/language';\nimport { getModalState } from '~/state/modal';\n\nimport Modal from '~/components/ui/Modal';\nimport QuickInput from '~/components/ui/QuickInput';\n\nimport { Languages } from '~/services/language';\n\ninterface Option {\n  value: keyof typeof Languages;\n  label: typeof Languages[keyof typeof Languages];\n}\n\nconst options: Option[] = Object.keys(Languages).map(language => ({\n  value: language as keyof typeof Languages,\n  label: Languages[language],\n}));\n\nconst LanguageSwitcher: React.FC = () => {\n  const [isOpen, setIsOpen] = useRecoilState(getModalState('language'));\n  const [language, setLanguage] = useRecoilState(languageState);\n\n  if (!isOpen) {\n    return null;\n  }\n\n  const onSelect = (option: Option): void => {\n    setLanguage(option.value);\n    setIsOpen(false);\n  };\n\n  return (\n    <Modal closeOnOutsideClick onClose={(): void => setIsOpen(false)}>\n      <QuickInput\n        value={language}\n        options={options}\n        onSelect={onSelect}\n        onClose={(): void => setIsOpen(false)}\n        inputProps={{\n          placeholder: 'Select language mode',\n          readOnly: true,\n        }}\n      />\n    </Modal>\n  );\n};\n\nexport default LanguageSwitcher;\n","import React from 'react';\nimport { useRecoilState } from 'recoil';\n\nimport { getModalState } from '~/state/modal';\nimport { themeStyle } from '~/state/theme';\n\nimport Modal from '~/components/ui/Modal';\nimport QuickInput from '~/components/ui/QuickInput';\n\ninterface Option {\n  label: string;\n  value: 'dark' | 'light';\n}\n\nconst options: Option[] = [\n  {\n    label: 'Dark',\n    value: 'dark',\n  },\n  {\n    label: 'Light',\n    value: 'light',\n  },\n];\n\nconst ThemeStyleSwitcher: React.FC = () => {\n  const [isOpen, setIsOpen] = useRecoilState(getModalState('themeStyle'));\n  const [style, setStyle] = useRecoilState(themeStyle);\n\n  if (!isOpen) {\n    return null;\n  }\n\n  const onSelect = (option: Option): void => {\n    setStyle(option.value);\n    setIsOpen(false);\n  };\n\n  return (\n    <Modal closeOnOutsideClick onClose={(): void => setIsOpen(false)}>\n      <QuickInput\n        value={style}\n        options={options}\n        onSelect={onSelect}\n        onClose={(): void => setIsOpen(false)}\n        inputProps={{\n          placeholder: 'Select theme style',\n          readOnly: true,\n        }}\n      />\n    </Modal>\n  );\n};\n\nexport default ThemeStyleSwitcher;\n","import React from 'react';\nimport { useRecoilState, useRecoilValue } from 'recoil';\n\nimport languageState from '~/state/language';\nimport { getModalState } from '~/state/modal';\nimport { themeStyle } from '~/state/theme';\n\nimport Item from '~/containers/StatusBar/components/Item';\n\nimport LanguageSwitcher from '~/components/LanguageSwitcher';\nimport ThemeStyleSwitcher from '~/components/ThemeStyleSwitcher';\n\nimport { Languages } from '~/services/language';\n\nimport css from './styles.module.scss';\n\nconst StatusBar: React.FC = () => {\n  const [languageOpen, openLanguageSwitcher] = useRecoilState(getModalState('language'));\n  const [themeStyleOpen, openThemeStyleSwitcher] = useRecoilState(getModalState('themeStyle'));\n\n  const language = useRecoilValue(languageState);\n  const [style] = useRecoilState(themeStyle);\n\n  return (\n    <>\n      <LanguageSwitcher />\n      <ThemeStyleSwitcher />\n      <div className={css.container}>\n        <div className=\"left\">main*</div>\n\n        <div className=\"right\">\n          <Item\n            onClick={(): void => openThemeStyleSwitcher(!themeStyleOpen)}\n          >{`Style: ${style}`}</Item>\n          <Item onClick={(): void => openLanguageSwitcher(!languageOpen)}>\n            {Languages[language]}\n          </Item>\n          <Item>\n            <a\n              className={css.c_est_moi}\n              href=\"http://github.com/el-angel\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              el angel @ github\n            </a>\n          </Item>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default StatusBar;\n","import React from 'react';\nimport { initialize } from '@anche/textmate-grammar-parser';\nimport { RecoilRoot } from 'recoil';\n\nimport { rawCode } from '~/state/code';\nimport generalScopeManager from '~/state/generalScopes';\nimport ruleManager, { ruleIds } from '~/state/rules';\nimport { themeStyle } from '~/state/theme';\n\nimport Code from '~/containers/Code';\nimport SettingsMenu from '~/containers/Code/components/SettingsMenu';\nimport Settings from '~/containers/Settings';\nimport Sidebar from '~/containers/Sidebar';\nimport StatusBar from '~/containers/StatusBar';\n\nimport storage from '~/services/storage';\n\nimport { atomKey } from '~/helpers/state';\n\nimport { GeneralScope, Rule } from '~/types';\n\nimport css from './App.module.scss';\n\nconst ONIGASM_URL = `${process.env.PUBLIC_URL}/onigasm.wasm`;\n\nconst initializeState = ({ set }): void => {\n  const keys = storage.keys();\n\n  const ids = storage.get<string[]>(atomKey('RulesIds')) || [];\n  set(ruleIds, ids);\n\n  keys.forEach(key => {\n    if (key === atomKey('RulesIds')) {\n      return;\n    }\n\n    if (key.includes(atomKey('Rules_'))) {\n      const value = storage.get<Rule>(key)!;\n\n      if (ids.includes(value.id)) {\n        set(ruleManager(value.id), value);\n      }\n    }\n\n    if (key.includes(atomKey('GeneralScopesFamily'))) {\n      const scope = storage.get<GeneralScope>(key)!;\n      set(generalScopeManager(scope.scope), scope);\n    }\n\n    if (key.includes(atomKey('RawCode'))) {\n      const code = storage.get<string>(key)!;\n      set(rawCode, code);\n    }\n\n    if (key.includes(atomKey('Theme'))) {\n      const theme = storage.get<'light' | 'dark'>(key);\n      set(themeStyle, theme);\n    }\n  });\n};\n\nconst App: React.FC = () => {\n  const [ready, setReady] = React.useState(false);\n\n  React.useEffect(() => {\n    const body = document.querySelector('body');\n    if (body) {\n      body.setAttribute('style', `overflow: hidden`);\n    }\n\n    if (!ready) {\n      (async (): Promise<void> => {\n        await initialize(ONIGASM_URL);\n        setReady(true);\n      })();\n    }\n  }, [ready]);\n\n  if (!ready) {\n    return <div>starting up...</div>;\n  }\n\n  return (\n    <RecoilRoot initializeState={initializeState}>\n      <>\n        <div className={css.container}>\n          <div className={css.sidebar}>\n            <Sidebar />\n          </div>\n          <div className={css.main}>\n            <div className={css.settings}>\n              <SettingsMenu />\n            </div>\n            <div className={css.code}>\n              <Code />\n            </div>\n            <div className={css.bottom}>\n              <Settings />\n            </div>\n          </div>\n          <div className={css.statusbar}>\n            <StatusBar />\n          </div>\n        </div>\n      </>\n    </RecoilRoot>\n  );\n};\n\nexport default App;\n","import React, { Profiler } from 'react';\n// eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n// @ts-ignore\nimport ReactDOM from 'react-dom';\nimport { unstable_trace as trace } from 'scheduler/tracing';\n\nimport App from './App';\n\nimport './index.css';\n\nReactDOM.render(\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  <Profiler id=\"Application\" onRender={(): void => {}}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Profiler>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"src-App-module__container--1cmbG\",\"settings\":\"src-App-module__settings--1nmKj\",\"statusbar\":\"src-App-module__statusbar--3npHX\",\"editor\":\"src-App-module__editor--34Nb6\",\"sidebar\":\"src-App-module__sidebar--3M66T\",\"main\":\"src-App-module__main--1deVu\",\"code\":\"src-App-module__code--3ZpfS\",\"bottom\":\"src-App-module__bottom--1WuIW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"src-containers-Code-components-SettingsMenu-styles-module__container--MUak9\",\"settingsIcon\":\"src-containers-Code-components-SettingsMenu-styles-module__settingsIcon--1G-on\",\"menu\":\"src-containers-Code-components-SettingsMenu-styles-module__menu--Ltlvy\",\"open\":\"src-containers-Code-components-SettingsMenu-styles-module__open--1_VRL\",\"divider\":\"src-containers-Code-components-SettingsMenu-styles-module__divider--dPTSa\",\"disabled\":\"src-containers-Code-components-SettingsMenu-styles-module__disabled--17qzT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toolbar\":\"src-containers-Sidebar-components-Toolbar-styles-module__toolbar--2AdAR\",\"item\":\"src-containers-Sidebar-components-Toolbar-styles-module__item--1nUc-\",\"header\":\"src-containers-Sidebar-components-Toolbar-styles-module__header--13FeJ\",\"isActive\":\"src-containers-Sidebar-components-Toolbar-styles-module__isActive--3Ab5T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"src-components-ui-QuickInput-styles-module__container--1Aa5a\",\"inputContainer\":\"src-components-ui-QuickInput-styles-module__inputContainer--2umYE\",\"input\":\"src-components-ui-QuickInput-styles-module__input--1KI_v\",\"optionContainer\":\"src-components-ui-QuickInput-styles-module__optionContainer--15Stj\",\"option\":\"src-components-ui-QuickInput-styles-module__option--wNZOe\",\"focussed\":\"src-components-ui-QuickInput-styles-module__focussed--2dH3h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"outer\":\"src-containers-Code-components-Editor-styles-module__outer--1UYCi\",\"container\":\"src-containers-Code-components-Editor-styles-module__container--VNZe8\",\"code\":\"src-containers-Code-components-Editor-styles-module__code--37_HL\",\"codeWrapper\":\"src-containers-Code-components-Editor-styles-module__codeWrapper--3wuPA\",\"lineNumbers\":\"src-containers-Code-components-Editor-styles-module__lineNumbers--2h937\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"src-components-ui-SidebarItem-styles-module__container--lXls6\",\"active\":\"src-components-ui-SidebarItem-styles-module__active--N5965\",\"warning\":\"src-components-ui-SidebarItem-styles-module__warning--3fvW9\",\"name\":\"src-components-ui-SidebarItem-styles-module__name--2knuo\",\"color\":\"src-components-ui-SidebarItem-styles-module__color--1LlRK\",\"input\":\"src-components-ui-SidebarItem-styles-module__input--QbbuG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"src-containers-Settings-components-ColorPicker-styles-module__container--12gp1\",\"hexValue\":\"src-containers-Settings-components-ColorPicker-styles-module__hexValue--3CP6L\",\"picker\":\"src-containers-Settings-components-ColorPicker-styles-module__picker--bnJQn\",\"input\":\"src-containers-Settings-components-ColorPicker-styles-module__input--3NUnP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"src-components-ui-Panel-styles-module__container--3vp3o\",\"content\":\"src-components-ui-Panel-styles-module__content--k6t2C\",\"toolbar\":\"src-components-ui-Panel-styles-module__toolbar--2ITeY\",\"close\":\"src-components-ui-Panel-styles-module__close--3MMcq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"src-containers-Settings-components-ScopesList-styles-module__container--3ihuh\",\"warning\":\"src-containers-Settings-components-ScopesList-styles-module__warning--1nJRm\",\"scope\":\"src-containers-Settings-components-ScopesList-styles-module__scope--qBa_H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"info\":\"src-containers-Code-components-Info-styles-module__info--3xlGJ\",\"exists\":\"src-containers-Code-components-Info-styles-module__exists--3VmjJ\",\"scope\":\"src-containers-Code-components-Info-styles-module__scope--1-8iE\",\"copied\":\"src-containers-Code-components-Info-styles-module__copied--gGiOl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"src-components-ui-Confirm-styles-module__container--2HI1S\",\"content\":\"src-components-ui-Confirm-styles-module__content--1zDtw\",\"buttons\":\"src-components-ui-Confirm-styles-module__buttons--3uFxF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"src-components-ui-Modal-styles-module__container--1EaRg\",\"center\":\"src-components-ui-Modal-styles-module__center--3Yb4Y\",\"overlay\":\"src-components-ui-Modal-styles-module__overlay--3xlyo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"src-containers-Settings-components-NameInput-styles-module__name--1gvp1\",\"readonly\":\"src-containers-Settings-components-NameInput-styles-module__readonly--SGwZO\",\"editable\":\"src-containers-Settings-components-NameInput-styles-module__editable--2FQvN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"src-containers-Settings-components-Swatches-styles-module__container--2Hm-F\",\"swatchGroup\":\"src-containers-Settings-components-Swatches-styles-module__swatchGroup--1JCNi\",\"swatch\":\"src-containers-Settings-components-Swatches-styles-module__swatch--3rU5e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"src-containers-Settings-GeneralSettings-styles-module__container--16REN\",\"colorContainer\":\"src-containers-Settings-GeneralSettings-styles-module__colorContainer--32t1O\",\"top\":\"src-containers-Settings-GeneralSettings-styles-module__top--1CXDV\",\"left\":\"src-containers-Settings-GeneralSettings-styles-module__left--Ci30q\",\"delete\":\"src-containers-Settings-GeneralSettings-styles-module__delete--2vFdO\",\"tools\":\"src-containers-Settings-GeneralSettings-styles-module__tools--2DMa8\",\"scopesList\":\"src-containers-Settings-GeneralSettings-styles-module__scopesList--3rO8d\",\"addScope\":\"src-containers-Settings-GeneralSettings-styles-module__addScope--1iFQw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"codeText\":\"src-containers-Code-components-CodeInput-styles-module__codeText--264Ou\",\"textArea\":\"src-containers-Code-components-CodeInput-styles-module__textArea--1s8Rs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"subline\":\"src-containers-Code-components-SubLine-styles-module__subline--1Q-lo\",\"empty\":\"src-containers-Code-components-SubLine-styles-module__empty--3DWOQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"icon\":\"src-containers-Settings-components-FontStyle-styles-module__icon--3eRzC\",\"enabled\":\"src-containers-Settings-components-FontStyle-styles-module__enabled--1Hm9S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rules\":\"src-containers-Sidebar-styles-module__rules--1B94Y\",\"content\":\"src-containers-Sidebar-styles-module__content--1QxK2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"src-containers-StatusBar-styles-module__container--2kClV\",\"c_est_moi\":\"src-containers-StatusBar-styles-module__c_est_moi--2yqZl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"line\":\"src-containers-Code-components-Line-styles-module__line--BdjKc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"src-containers-Code-components-CodeView-styles-module__container--1ApKT\",\"code\":\"src-containers-Code-components-CodeView-styles-module__code--1GDsG\",\"lineNumbers\":\"src-containers-Code-components-CodeView-styles-module__lineNumbers--yU7cG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"src-components-ui-Button-styles-module__button--33mOU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"src-components-ui-PanelItem-styles-module__item--l0pOa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"src-containers-StatusBar-components-Item-styles-module__item--3N6sp\"};"],"sourceRoot":""}